<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Gitops on Josia's Blog</title><link>https://jscheytt.github.io/tags/gitops/</link><description>Recent content in Gitops on Josia's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Josia Scheytt</copyright><lastBuildDate>Thu, 25 Aug 2022 15:00:09 +0200</lastBuildDate><atom:link href="https://jscheytt.github.io/tags/gitops/index.xml" rel="self" type="application/rss+xml"/><item><title>ArgoCD is like the Kubernetes Dashboard but for GitOps</title><link>https://jscheytt.github.io/p/argocd-is-like-the-kubernetes-dashboard-but-for-gitops/</link><pubDate>Thu, 25 Aug 2022 15:00:09 +0200</pubDate><guid>https://jscheytt.github.io/p/argocd-is-like-the-kubernetes-dashboard-but-for-gitops/</guid><description>&lt;p>FluxCD was my first love in the GitOps space.
I worked with it when it was still v1, had no chance to use, and since about a year I returned to using it in its glorious, rewritten v2.&lt;/p>
&lt;p>I haven&amp;rsquo;t given ArgoCD a try so far until this week somebody suggested trying out &lt;a class="link" href="https://argocd-autopilot.readthedocs.io/en/stable/" target="_blank" rel="noopener"
>ArgoCD Autopilot&lt;/a>.
The process was super smooth and in less than 10 minutes I had a running ArgoCD dashboard in my local minikube cluster.&lt;/p>
&lt;p>And holy moly I have to say:
ArgoCD is awesome!
In the less than one hour I have seen it close up now, I already see so many possibilities that are hard to do when you try to scale Flux:&lt;/p>
&lt;ol>
&lt;li>Having a UI at all&lt;/li>
&lt;li>Managing applications in multiple clusters from 1 Git repo &lt;em>with explicit assignment to these clusters&lt;/em>&lt;/li>
&lt;li>The UI is basically the better &lt;a class="link" href="https://kubernetes.io/docs/tasks/access-application-cluster/web-ui-dashboard/" target="_blank" rel="noopener"
>Default Kubernetes Dashboard&lt;/a> but for GitOps:
&lt;ul>
&lt;li>The Kubernetes Dashboard gives you a very &amp;ldquo;relational&amp;rdquo; view of your resources, much like &lt;a class="link" href="https://k9scli.io/" target="_blank" rel="noopener"
>k9s&lt;/a> does (albeit with fewer resource types).&lt;/li>
&lt;li>I tried &lt;a class="link" href="https://github.com/kubevious/kubevious" target="_blank" rel="noopener"
>Kubevious&lt;/a> in some projects because it allows you to view &lt;strong>related resources hierarchically together&lt;/strong>.
&lt;ul>
&lt;li>But it is pretty buggy (especially the mysql DB deployed with it) and has not fulfilled its promise for me.&lt;/li>
&lt;li>Additionally, it&amp;rsquo;s read-only and does not show you a Events or container logs.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>ArgoCD however gives us the &lt;strong>best of both worlds&lt;/strong>:
&lt;ul>
&lt;li>Related resources are &lt;strong>shown hierarchically&lt;/strong> (e.g. Deployments create ReplicaSets create Pods).&lt;/li>
&lt;li>You can even group them into Apps, ApplicationSets, and Projects.&lt;/li>
&lt;li>If you open a Resource (e.g. Pod), you can see its Events and also its logs!&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a class="link" href="https://argo-cd.readthedocs.io/en/stable/operator-manual/applicationset/Generators-Pull-Request/" target="_blank" rel="noopener"
>Preview Environments&lt;/a> seem relatively straightforward.&lt;/li>
&lt;li>I have heard many rumors that Progressive Delivery is easier with ArgoCD (or at least involves less manually scripted yaml generation pipelines).&lt;/li>
&lt;/ol>
&lt;p>As a Cloud Automation Engineer, one of my main missions is to &lt;strong>deliver stable apps&lt;/strong>.
And this highly involves &lt;strong>stable processes&lt;/strong> for my team.
ArgoCD feels like the perfect fit:
I can deploy my apps with ArgoCD and everybody with access to it can debug resources, see which versions are currently deployed, and maybe even promote apps to the next environment!&lt;/p>
&lt;p>There also seem to be use cases (probably especially in a setup with separate platform and app dev teams) where &lt;a class="link" href="https://youtu.be/QNAiIJRIVWA?t=731" target="_blank" rel="noopener"
>deploying FluxCD and ArgoCD together&lt;/a> makes sense.
But I am definitively going to give ArgoCD a shot in some important environment soon.&lt;/p></description></item><item><title>You can Gitopsify your Ansible</title><link>https://jscheytt.github.io/p/you-can-gitopsify-your-ansible/</link><pubDate>Tue, 01 Mar 2022 08:34:20 +0100</pubDate><guid>https://jscheytt.github.io/p/you-can-gitopsify-your-ansible/</guid><description>&lt;p>I have a &lt;a class="link" href="https://github.com/jscheytt/dotfiles" target="_blank" rel="noopener"
>dotfiles repository&lt;/a> for setting up my MacOS machine easily and reproducibly.
For this I am mostly using Ansible, just slightly wrapping it with Make and seasoning it with a pinch of Shell.&lt;/p>
&lt;p>The core piece of this repository is a &lt;code>Brewfile&lt;/code> and a collection of &lt;a class="link" href="https://github.com/jscheytt/dotfiles/blob/main/files/dotfiles/.oh-my-zsh/custom/aliases.zsh" target="_blank" rel="noopener"
>Shell aliases&lt;/a> and &lt;a class="link" href="https://github.com/jscheytt/dotfiles/blob/main/files/dotfiles/.oh-my-zsh/custom/functions.sh" target="_blank" rel="noopener"
>functions&lt;/a>.
I don&amp;rsquo;t regularly run the Ansible playbook itself because I created it for initially setting up a machine.
The only thing I run very frequently is the &lt;a class="link" href="https://github.com/jscheytt/dotfiles/blob/main/files/dotfiles/.oh-my-zsh/custom/functions.sh#L107" target="_blank" rel="noopener"
>upgrade&lt;/a> command which includes persisting new Brew formulae to the &lt;code>Brewfile&lt;/code>.&lt;/p>
&lt;p>At the same time I have come to love applying &lt;a class="link" href="https://opengitops.dev/" target="_blank" rel="noopener"
>GitOps principles&lt;/a> to everything I work with.
Just the other day I was &lt;a class="link" href="https://github.com/jscheytt/dotfiles/commit/c4278a0b8bbe1f4875efd56ceffc43459d919d1f" target="_blank" rel="noopener"
>moving some commands&lt;/a> (in the vein of &amp;ldquo;global Git pull&amp;rdquo;) out of said &lt;code>upgrade&lt;/code> command into a cronjob.&lt;/p>
&lt;p>And then it hit me:
If I create a cronjob for running my Ansible playbook &lt;em>through the playbook itself&lt;/em>, I have GitOps-like reconciliation!&lt;/p>
&lt;p>Let&amp;rsquo;s do it in just a few lines of yaml:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Ensure dotfiles are applied&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">cron&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Ensure dotfiles are applied&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">minute&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;0&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">hour&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;9&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">weekday&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;1-5&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># on workdays&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">job&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">make -f &amp;#34;{{ ansible_env.PWD }}&amp;#34;/Makefile build&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>