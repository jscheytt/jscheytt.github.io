[{"content":"HTML allows you to specify a starting number from which an ordered list (\u0026lt;ol\u0026gt;) should start. I thought \u0026ldquo;Is there an upper bound?\u0026rdquo;.\nTurns out: Yes, there is. It\u0026rsquo;s 2147483647 (i.e. 231-1). No idea why it\u0026rsquo;s not 232-1, though \u0026hellip;\n\u0026lt;ol start=2147483645\u0026gt; \u0026lt;li\u0026gt;I am still in order\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;As am I\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Me too\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Limit reached\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Limit reached\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Limit reached\u0026lt;/li\u0026gt; \u0026lt;/ol\u0026gt; The above snippet will render as the following:\n","date":"2021-09-02T08:55:22+02:00","permalink":"https://jscheytt.github.io/p/html-limits-you-to-a-31-bit-integer-in-ordered-lists/","title":"HTML limits you to a 31-bit integer in ordered lists"},{"content":"All you need is the secret of your TOTP.\nThe QR code is just a representation of a oath:// URL That URL contains the secret as a query parameter.\n# Install oathtool brew install oathtool # Use your secret, e.g. as a base32-encoded string oathtool --totp --base32 \u0026#34;MFRGCZDTMVRXEZLUBI======\u0026#34; ","date":"2021-08-27T08:20:41+02:00","permalink":"https://jscheytt.github.io/p/you-can-create-totp-tokens-via-cli-without-a-smartphone/","title":"You can create TOTP tokens via CLI without a smartphone"},{"content":"I really love Docker, and I also come to like security more and more. One advice I have been hearing a lot (e.g. in this Container Security Cheat Sheet from Snyk) is that you should not run your container as a root user.\n\u0026ldquo;Easy thing,\u0026rdquo; I thought to myself, \u0026ldquo;I am just going to put something like USER {app}\u0026rdquo; at the top of my Dockerfile.\u0026quot; Well, think again, because:\nFROMnode:ltsUSERnode# I would have thought that after this point, every action will happen in the name of this user# and also that every created directory and file will belong to this user ... üòï But:# ‚ö†Ô∏è This directory is created by root:root!WORKDIR/app# ‚ö†Ô∏è These files will be copied over to be owned by root:root!COPY package*.json ./# üí• This step fails in some (not all!) environments with errors like \u0026#34;Not enough permissions on /app\u0026#34;RUN npm install \u0026amp;\u0026amp; \\  npm run verify# ‚ö†Ô∏è If you manage to get to this point, these files, too, will be copied over to be owned by root:root!COPY . .ENTRYPOINT [\u0026#34;npm\u0026#34;]I ended up fixing it by creating the directory and then chown-ing it. Equally I executed the COPY instructions with the --chown flag. In the end I refactored it a bit using some ENVs, too:\nFROMnode:lts# Ensure that target WORKDIR exists and is owned by target (non-root) userENV USERNAME=node ENV USERID=$USERNAME:$USERNAMEENV TARGETDIR=/appRUN mkdir -p $TARGETDIR \u0026amp;\u0026amp; chown -R $USERID $TARGETDIRWORKDIR$TARGETDIRUSER$USERNAMECOPY --chown=$USERID package*.json ./RUN npm install \u0026amp;\u0026amp; \\  npm run verifyCOPY --chown=$USERID . .ENTRYPOINT [\u0026#34;npm\u0026#34;]","date":"2021-07-23T14:42:07+02:00","permalink":"https://jscheytt.github.io/p/docker-does-not-really-help-you-a-lot-trying-to-get-permissions-right/","title":"Docker does not really help you a lot trying to get permissions right"},{"content":"I have developed quite some muscle memory in terminating vim via :wqa. Now I can save one more character by retraining myself to use :xa! üòÑ\nI also like how :x sort of symbolizes the close button ‚ùå of many window managers and their default behavior of saving when you close a file.\nFor more documentation open vim and type :h :x.\nWait, now that you mention it \u0026hellip; Well, turns out the documentation mentions an even easier way: Just press ZZ (without the colon) üò¥\nNow if only I could combine this to perform :wqa \u0026hellip;\nHappy vim-ing! üëã\n","date":"2021-07-16T00:00:00Z","permalink":"https://jscheytt.github.io/p/you-can-wq-in-vim-with-x/","title":"You can :wq in vim with :x"}]