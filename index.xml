<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Josia's Blog</title><link>https://jscheytt.github.io/</link><description>Recent content on Josia's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Josia Scheytt</copyright><lastBuildDate>Mon, 26 Aug 2024 12:01:54 +0200</lastBuildDate><atom:link href="https://jscheytt.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Jesus ist wie ein schwarzes Loch</title><link>https://jscheytt.github.io/p/jesus-ist-wie-ein-schwarzes-loch/</link><pubDate>Mon, 26 Aug 2024 12:01:54 +0200</pubDate><guid>https://jscheytt.github.io/p/jesus-ist-wie-ein-schwarzes-loch/</guid><description>&lt;p>🚨 &lt;em>Mein laienhaftes Verständnis von schwarzen Löchern basiert auf wenigen YouTube-Videos.
Vermutlich stelle ich einige Sachverhalte zu vereinfacht oder sogar inkorrekt dar.&lt;/em>&lt;/p>
&lt;p>Vor kurzem haben wir bei einem Gebetstreffen einige Verse von &lt;a class="link" href="https://www.bibleserver.com/ELB.NG%C3%9C/Lukas15" target="_blank" rel="noopener"
>Lukas 15&lt;/a> betrachtet, in denen Jesus ständig von Sündern umgeben war, die Ihm an den Lippen hingen und für die Er in Seiner Liebe total anziehend war.
Für mich kam dabei folgender Vergleich in den Sinn:
Wenn Jesus ständig von Sündern umgeben war, weil sie Ihm so nahe sein wollten, dann gleicht Jesus einem schwarzen Loch.&lt;/p>
&lt;p>Folgende Punkte schließt das für mich ein:&lt;/p>
&lt;p>Ein schwarzes Loch ist der Überrest von einem oder mehreren ehemaligen Sternen.
Es ist relativ klein im Vergleich zu der &lt;strong>unvorstellbar großen Masse&lt;/strong>, die es hat.&lt;/p>
&lt;ul>
&lt;li>Das Wort &amp;ldquo;Kavod&amp;rdquo; im Hebräischen bedeutet sowohl Herrlichkeit als auch Gewicht.
Gottes Gewicht und Herrlichkeit ist unermesslich groß.&lt;/li>
&lt;li>Obwohl es hinsichtlich seiner Größe eigentlich unscheinbar ist (und sogar de facto unsichtbar ist, weil es Licht schluckt), hat es aufgrund seiner Masse eine ungeheure Wirkung und Anziehungskraft.
Aufgrund dieser Anziehungskraft erreichen Himmelskörper, die es umkreisen, teilweise fast schon Lichtgeschwindigkeit.&lt;/li>
&lt;li>Ebenso ist auch Gottes Reich rein äußerlich kaum auszumachen, aber Seine Auswirkung ist gewaltig (siehe Jesu Gleichnisse vom Himmelreich).&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Graviation wirkt gegenseitig&lt;/strong>:
Eine große Masse (z. B. ein schwarzes Loch) zieht eine kleine Masse (z. B. einen Planeten) an, aber auch die kleine Masse wirkt eine Anziehungskraft auf die große Masse aus.
Aber es ist ganz eindeutig, welche Kraft stärker wirkt:
Die große Masse zieht die kleinen Massen unfassbar viel stärker an als die umgekehrt.
So ist auch Gottes Verlangen nach uns unvergleichlich viel größer als unser Verlangen nach Ihm.&lt;/p>
&lt;p>Ein schwarzes Loch ist eigentlich &lt;strong>nicht sichtbar&lt;/strong>.
Aber die Himmelskörper, die von einem schwarzen Loch angezogen werden, kommen ihm immer näher und bilden eine dichte Scheibe aus Materie, die sogenannte Akkretionsscheibe.
Anhand dieser Akkretionsscheibe um das schwarze Loch herum (und auch durch andere Krümmungseffekte aufgrund der starken Masse des Lochs) wird es überhaupt es sichtbar.
Genauso schafft sich Gott in Seinen Nachfolgern eine &lt;em>Verkörperung&lt;/em>.
An uns und unserer Liebe zueinander wird Er selbst und Seine Herrschaft sichtbar.&lt;/p>
&lt;p>In dieser Akkretionsscheibe sind &lt;strong>alle möglichen Himmelskörper&lt;/strong>.
Sie sind ganz unterschiedlicher Art und Größe und Herkunft.
Das, was sie vereint, ist dass sie von dem schwarzen Loch angezogen wurden und dass sie gemeinsam das Loch umkreisen und immer näher hineinwandern.
Genauso sind auch wir nicht aufgrund unserer Errungenschaften in die Nachfolge Jesus hinterher gekommen, sondern aufgrund Seiner enormen Liebe und der Attraktivität Seines Erbarmens.
Und in diesem Vergleich ergibt es völlig Sinn, dass der Apostel Johannes in seinem ersten Brief schreibt, dass &lt;strong>die Liebe zu Gott und die Liebe zu den Geschwistern&lt;/strong> ein und dasselbe ist.
Wenn wir uns Gott nahen, werden wir automatisch auch unseren Geschwistern nahe.&lt;/p>
&lt;p>Ab dem sogenannten &lt;strong>Ereignishorizont&lt;/strong> des Lochs gibt es kein Zurück mehr. Alles, was sich außerhalb dieses Radius befindet, kann sich (mit genügend Schub) noch abwenden. Aber was diesen Radius überschreitet, kehrt nie wieder zurück. (Das gilt sogar für Licht. Deshalb ist das Innere eines schwarzes Loches unsichtbar.)&lt;/p>
&lt;ul>
&lt;li>Wenn wir Jesus nachfolgen, wird bei unserem Tod der Übergang von dieser Welt in die neue Welt so sein wie das Überschreiten des Ereignishorizonts: Wir haben bereits davor in beständiger Ausrichtung auf Ihn gelebt, und wenn wir diese Grenze überschreiten, wird Er ganz vollständig unser Leben sein. Wir führen das Leben der ewigen Art, das wir davor geführt haben, einfach ohne wirkliche Unterbrechung für uns fort.&lt;/li>
&lt;li>Für die &amp;ldquo;Außenstehenden&amp;rdquo;, die die Grenze noch nicht überschritten haben, wird es freilich aussehen, als hätten wir aufgehört zu existieren. Aber in Wirklichkeit sind wir lebendiger als je zuvor, weil wir ganz in Ihm sind.&lt;/li>
&lt;/ul>
&lt;p>Zuletzt verlassen wir das Bild und die Realität ein wenig:
Stellen wir uns vor, dass wir, wenn wir als Himmelskörper dem schwarzen Loch nahekommen, weil uns seine Masse angezogen hat, mit der Zeit auch &lt;strong>Masse von ihm aufnehmen&lt;/strong>.
Bildlich gesprochen erleben wir ja, dass Gott uns sättigt, wenn wir uns Ihm zuwenden und auf Ihn ausgerichtet leben.
Und Er lebt ja tatsächlich &lt;em>in uns&lt;/em>.
Dementsprechend werden wir immer gewichtiger, und andere um uns herum können dann ebenfalls von uns angezogen werden.
Aber weil der &lt;em>Ursprung&lt;/em> dieser Masse klar ist, wird diese Art von Anziehung letztlich nicht zu einem Kreisen um uns führen, sondern wird uns alle gemeinsam tiefer in das Leben hineinführen, in dem wir auf Ihn ausgerichtet bleiben und um Ihn kreisen.&lt;/p></description></item><item><title>Our GitOps book is available</title><link>https://jscheytt.github.io/p/our-gitops-book-is-available/</link><pubDate>Wed, 01 May 2024 10:26:25 +0200</pubDate><guid>https://jscheytt.github.io/p/our-gitops-book-is-available/</guid><description>&lt;p>We did it:
Our &lt;a class="link" href="https://gitops-book.dev/" target="_blank" rel="noopener"
>full-length book about GitOps in German&lt;/a> is now finally out!
You can order it anywhere in book stores both physical and online.&lt;/p>
&lt;p>In fall 2023, Baris, Johannes, and me started writing this book with a vision for enabling German-speaking software teams to use GitOps so they can ship changes faster and with more confidence.
It is both the first book about GitOps in German, and from our research it seems like it is also by far the longest book &lt;em>in any language&lt;/em> about GitOps (about 350 pages).&lt;/p>
&lt;p>Are we going to translate it to English?
We sure are interested in doing so but we are still discussing how to do it in a consistent and cost-effective way.&lt;/p></description></item><item><title>Documentation as Scaled Communication</title><link>https://jscheytt.github.io/p/documentation-as-scaled-communication/</link><pubDate>Tue, 24 Oct 2023 08:21:20 +0200</pubDate><guid>https://jscheytt.github.io/p/documentation-as-scaled-communication/</guid><description>&lt;p>Technical documentation is important, but almost no one enjoys writing it.
At least, I have yet to meet anyone who shares my passion for writing docs.
To me, documentation is not just a chore you do to check a compliance box.
In fact, I believe it can even be a rewarding experience.&lt;/p>
&lt;p>I am also convinced that writing documentation is a &lt;em>core skill for Platform Engineers&lt;/em> running any &lt;a class="link" href="https://internaldeveloperplatform.org" target="_blank" rel="noopener"
>Internal Developer Platforms&lt;/a>.
Developer Platforms need a product mindset, and products need documentation so that users can understand usage and discover features.
And I believe that &lt;strong>technical documentation is a means to scale up your communication&lt;/strong>, especially in the platform context.&lt;/p>
&lt;p>Let me explain with an example:
If someone pings me directly and asks about a specific technical problem in using the platform (e.g. &amp;ldquo;How do I restart my application in staging?&amp;rdquo;), I could respond via a video call (most expensive option, but sometimes necessary) or by giving them the necessary steps directly.
As an alternative, I could also take a few extra minutes to write a documentation article (e.g. a runbook) about it and send the person a link to the article.
The next time someone asks about this specific problem, I can &lt;em>save a lot of time&lt;/em> by not writing out the steps in all detail again.
Instead, I can get into the habit of responding to common questions with links to documentation.&lt;/p>
&lt;p>This can not only reduce the time &lt;em>you alone&lt;/em> spend handling requests:
If your documentation platform has a good search functionality, you may eventually be able to &lt;em>teach people to search through the docs&lt;/em> before making requests, saving time for both Platform Engineers and Developers.
If your documentation tools are configured as openly as possible for contributions, you might even get people to &lt;em>actively participate&lt;/em> in improving your articles, perhaps even writing new ones themselves.&lt;/p>
&lt;p>I have witnessed some of these effects firsthand.
Let me name this observation &lt;strong>Documentation as Scaled Communication&lt;/strong> (or DASC, if you feel like using acronyms).
I am sure that this principle applies very broadly, but I want to keep the focus of this post on &lt;em>technical documentation&lt;/em> and on &lt;em>Platform Engineers&lt;/em> because that is my primary background.&lt;/p>
&lt;h2 id="challenges">Challenges
&lt;/h2>&lt;p>So why is writing docs so &lt;em>hard&lt;/em>?
From my point of view, we have several challenges to address:&lt;/p>
&lt;ol>
&lt;li>We need to learn &lt;strong>communication&lt;/strong> through practice, review, and feedback.&lt;/li>
&lt;li>We also need to learn &lt;strong>writing&lt;/strong> (again, through practice, review, and feedback).&lt;/li>
&lt;li>Documentation tools need &lt;strong>extremely low friction&lt;/strong> (i.e. very good UX).&lt;/li>
&lt;li>Tools need to be &lt;strong>configured as wide open&lt;/strong> as possible for contributions.&lt;/li>
&lt;/ol>
&lt;h3 id="practicing-communication">Practicing Communication
&lt;/h3>&lt;p>How can you communicate effectively?
Effectiveness is always determined by the goals of your communication.
Let&amp;rsquo;s say we have the following goals for platform engineering:&lt;/p>
&lt;ul>
&lt;li>Enable developers to be highly productive&lt;/li>
&lt;li>Enable development teams to deploy to production quickly and with confidence&lt;/li>
&lt;/ul>
&lt;p>These goals put us in a position where &lt;strong>empathy&lt;/strong> plays a critical role.
I am not talking specifically about &lt;em>technical means&lt;/em> like surveys or specific SLOs.
What I am talking about is a certain &lt;em>attitude&lt;/em> towards the consumers of our services.&lt;/p>
&lt;p>Raw data and measurements are helpful, and they can certainly guide us as we try to learn from incidents or understand certain usage patterns.
But numbers have their limits, and the people who use our services are not distant technical entities, but &lt;em>blood and flesh humans struggling to deploy features and fix bugs&lt;/em>.
Learning to empathize with our users can include the following:&lt;/p>
&lt;ul>
&lt;li>Sit down with a user (maybe even in person, if possible) and ask for feedback on how they use the platform.
&lt;ul>
&lt;li>&lt;strong>Asking proactively&lt;/strong> is radically different from waiting for bug tickets and incident reports.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Listen actively:
&lt;ul>
&lt;li>First, listen (you may even want to take notes).
Then keep asking questions to find out what the user is &lt;em>really&lt;/em> trying to accomplish.&lt;/li>
&lt;li>Your primary focus should not be to get fodder for your bug tracker.
(Take notes, though, if something comes up that you did not know about.)
Instead, **focus on understanding the user&amp;rsquo;s overall interaction with your services:&lt;/li>
&lt;li>How do they develop and generally work as a team?
What is their workflow like?
Where are they least productive?
Are they using tools outside your platform that could or should be integrated?&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Don&amp;rsquo;t insist on your preferences&lt;/strong>.
The platform is not there for its own sake, but to enable the developers.
&lt;ul>
&lt;li>This is most evident when I answer complaints with &amp;ldquo;But that&amp;rsquo;s not how the system is supposed to be used! Did you even read xyz?&amp;rdquo;&lt;/li>
&lt;li>I struggle with this point a lot.
When you build a platform, you design for certain usage patterns.
But you can never anticipate how those needs might change in the future.
And if those needs change drastically, you may have to refactor your platform to a greater extent (which will cause you a lot of work).&lt;/li>
&lt;li>I&amp;rsquo;m not advocating blindly following every user suggestion &amp;mdash; your product owner will have to prioritize things anyway.
I am also not discouraging helping people understand how to use the existing platform effectively.
My point is:
If you scold people for trying to get things done, you will discourage them.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>There are a few more resources I recommend for learning to communicate effectively as a Platform Engineer:&lt;/p>
&lt;ul>
&lt;li>Watch this talk about &amp;ldquo;&lt;a class="link" href="https://www.infoq.com/presentations/incidents-investigation" target="_blank" rel="noopener"
>How did it make sense at the time?&lt;/a>&amp;rdquo; (HDIMSATT).
It is focused on incidents but the same reasoning is helpful for learning empathy with your users.&lt;/li>
&lt;li>&lt;em>&lt;a class="link" href="https://sre.google/sre-book/operational-overload" target="_blank" rel="noopener"
>SRE Embedding&lt;/a>&lt;/em>:
Sometimes, you can take empathy to a more extreme level by embedding a Platform Engineer into an app dev team for a period of time.
You as a Platform Engineer will put on your SRE hat and work alongside the developer team in their everyday challenges.&lt;/li>
&lt;li>Read about and learn from some of the great models of empathy, such as Jesus of Nazareth (e.g. in the first four books of the New Testament), the God who became human (this allowed Him to empathize more with us, but also us to empathize more with Him).&lt;/li>
&lt;/ul>
&lt;h3 id="practicing-writing">Practicing Writing
&lt;/h3>&lt;p>Everyone at work communicates all the time.
Working remotely has forced us to do so in more written form than ever before &amp;mdash; and I think this is a good thing overall!
Sure, it&amp;rsquo;s faster to work together in the office, where it&amp;rsquo;s super easy to quickly ask questions and show things, but asynchronous written communication is much more inclusive and promotes transparency.&lt;/p>
&lt;p>There are many ways to improve your written communication (e.g. &lt;a class="link" href="https://nohello.net" target="_blank" rel="noopener"
>don&amp;rsquo;t make people wait&lt;/a>).
Your written communication will always be better the more you &lt;em>empathize&lt;/em> with the other person(s) (see previous point).
Still, you can practice the following skills to improve your writing in chats:&lt;/p>
&lt;ol>
&lt;li>Write &lt;strong>complete sentences&lt;/strong> by default.&lt;/li>
&lt;li>Adhere to &lt;strong>basic grammar and syntax&lt;/strong> (just as you would when writing code).
&lt;ul>
&lt;li>You can use AI assistance for this like &lt;a class="link" href="https://www.deepl.com/de/write" target="_blank" rel="noopener"
>DeepL Write&lt;/a>.
(Hint: I refined this blog post using DeepL Write.)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Write &lt;strong>short and clear sentences&lt;/strong>.
&lt;ul>
&lt;li>If your message gets longer, use bullets and headings to break your message into more readable chunks.&lt;/li>
&lt;li>Familiarize yourself with the &lt;strong>formatting options&lt;/strong> your chat tool offers.
Some tools allow Markdown, for example.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;em>In group chats&lt;/em> (i.e. when communicating with several people at once):
&lt;ol>
&lt;li>Avoid using &lt;strong>literal backreferences&lt;/strong> (&amp;ldquo;this thing&amp;rdquo;, &amp;ldquo;that&amp;rdquo;).
Use the &amp;ldquo;reply to&amp;rdquo; feature (or better yet, if available, start a &lt;strong>thread&lt;/strong>) to maintain/restore context.&lt;/li>
&lt;li>Use @-&lt;strong>mentions&lt;/strong> to notify a subset of people in the current chat, if your message does not address everyone.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;p>In the spirit of SRE and &lt;a class="link" href="https://www.learningfromincidents.io" target="_blank" rel="noopener"
>Learning From Incidents&lt;/a>, we can also look back at past communications and learn from them.
Feel free to try these steps as an example:&lt;/p>
&lt;ol>
&lt;li>Search through your chat history, especially group chats where there are a lot of people and a lot of communication.&lt;/li>
&lt;li>Try to find situations where misunderstandings occurred.
Pick a situation and think about the following questions:
&lt;ol>
&lt;li>What were the basic assumptions that the different people involved had?&lt;/li>
&lt;li>To what extent were the different mental models of these people wrong? Why?&lt;/li>
&lt;li>How could the mismatch between mental model and reality have been uncovered earlier?&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;h3 id="low-friction-editing">Low-Friction Editing
&lt;/h3>&lt;p>Now we turn briefly to the tool side of things:
If you do not make editing pages and creating documents &lt;em>as fast and convenient as possible&lt;/em>, you will frustrate people and lose potential editors.
Those editors could be people on the platform team &lt;em>and&lt;/em> on the development teams!&lt;/p>
&lt;p>I see this as a very limiting factor when trying to choose a documentation tool.
One category of documentation tools I have specifically avoided &lt;em>for internal development platforms&lt;/em> are &lt;em>Static Site Generators (SSGs) fed from a Git repo&lt;/em>.&lt;/p>
&lt;p>Let me be clear about this:
I am a huge fan of Git!
&lt;a class="link" href="https://www.linkedin.com/feed/update/urn:li:activity:7120420743795892225" target="_blank" rel="noopener"
>My writing a book about GitOps&lt;/a> should leave no doubt about that.
But even if you have a template where editing any single page is just a click away &lt;em>and&lt;/em> you link directly to a web IDE &lt;em>and&lt;/em> you can enable automerge on the instantly created feature branch, you still have to wait for a green build to pass.
(Allowing commits directly to the default branch would be careless, because it might break the build &amp;mdash; and you will never get around waiting for the build pipeline on the default branch anyway).
And that wait is (I think) still way too long, and makes the barrier to contributing way too high.&lt;/p>
&lt;p>My current preference is Confluence Cloud (Cloud, not self-hosted!), but my experience is very limited.
Please send suggestions!&lt;/p>
&lt;h3 id="a-culture-of-contributing">A Culture of Contributing
&lt;/h3>&lt;p>Whenever I see organizations talking about &lt;em>approval processes in documentation tools&lt;/em>, I get sad.
Because sure enough, they will get exactly what they asked for:
Documentation that is picture perfect and set in stone &amp;mdash; it cannot be changed unless you explicitly ask for permission.
But at the same time they &lt;strong>lose everything that makes documentation valuable&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Documentation becomes &lt;strong>outdated&lt;/strong> extremly quickly because you cannot live a &lt;em>Culture of Contributing&lt;/em>.&lt;/li>
&lt;li>&lt;strong>RBAC&lt;/strong> becomes difficult, and those who maintain it may not always be available.
This will make even users who have permission to edit and manage certain parts of the content to feel reluctant to write shareable documentation instead of directly responding to requests.&lt;/li>
&lt;li>People will &lt;strong>always make direct requests&lt;/strong> because they can get a faster response.
&lt;ul>
&lt;li>They may &lt;em>not always&lt;/em> get it faster because everyone is busy, but by texting a human you at least have a small chance that someone will respond faster than you will find something in the potentially outdated docs.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>When documentation becomes outdated and permissions are complex to obtain, you end up with &lt;em>shadow documentation&lt;/em> (e.g. in Word documents on shared drives) or (by default and by far the worst) &lt;em>no documentation at all&lt;/em> happens and &lt;strong>valuable knowledge is lost&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;p>I have never seen an organization suffer from vandalism or other malicious overuse of documentation tools.
The only organizations I have encountered are those with typical people who are just trying to do their jobs well and are naturally reluctant to write anything down unless they are forced to.&lt;/p>
&lt;p>For this reason, I believe that &lt;strong>documentation tools should be configured with maximum editability&lt;/strong> to encourage a Culture of Contributing.
You may want to disable deletion and only allow archiving to protect content from disappearing accidentally, but otherwise everything should be as &lt;em>welcoming&lt;/em> towards contributions as possible!
Choose a tool that allows versioning / page history so that you can revert to a known good state if any unwanted changes are made.&lt;/p>
&lt;h2 id="documentation-devices-for-platform-engineers">Documentation Devices for Platform Engineers
&lt;/h2>&lt;p>I have identified a few types of technical documentation that, in my experience, are particularly valuable in the context of Platform Engineering:&lt;/p>
&lt;ol>
&lt;li>Runbooks
&lt;ul>
&lt;li>By giving step-by-step instructions you enable people to perform certain typical actions themselves.
For an example of a very simple runbook, see the list at the end of &lt;a class="link" href="#practicing-writing" >Practicing Writing&lt;/a>.&lt;/li>
&lt;li>If the amount of code snippets in a runbook gets too large, you might consider writing a script, putting it into a Git repo and creating an automated runbook that can be triggered by any user through a manual pipeline.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a class="link" href="https://adr.github.io" target="_blank" rel="noopener"
>Architectural Decision Records&lt;/a> (ADRs)
&lt;ul>
&lt;li>This is in the spirit of HDIMSATT (see &lt;a class="link" href="#practicing-communication" >Practicing Communication&lt;/a>) and allows you to foster collaboration and structured discussion around important technical decisions.&lt;/li>
&lt;li>It allows you to better understand the assumptions and constraints that were in place at the time.
When you return later, you can re-evaluate whether those assumptions still hold true and revisit the decision in light of new constraints.
(Remember to create another ADR for the new decision you take.)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a class="link" href="https://app.diagrams.net" target="_blank" rel="noopener"
>draw.io&lt;/a> or &lt;a class="link" href="https://mermaid.js.org" target="_blank" rel="noopener"
>Mermaid&lt;/a> for diagrams
&lt;ul>
&lt;li>Many documentation tools come with integrations for these.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>In addition, there are also overarching documentation frameworks such as &lt;a class="link" href="https://arc42.org/overview" target="_blank" rel="noopener"
>arc42&lt;/a>.
At &lt;a class="link" href="https://www.mimacom.com" target="_blank" rel="noopener"
>Mimacom&lt;/a>, we have used arc42 in several projects and found the structure very helpful.
To keep the momentum though, don&amp;rsquo;t think too much about which section a single page belongs to; you can always restructure later after writing your current piece of content.
Fortunately, there are &lt;a class="link" href="https://arc42.org/download" target="_blank" rel="noopener"
>downloads available&lt;/a> for Asciidoc, Markdown, LaTeX, and a few other formats.&lt;/p></description></item><item><title>Eine neue Psalmen-Liturgie</title><link>https://jscheytt.github.io/p/eine-neue-psalmen-liturgie/</link><pubDate>Sat, 21 Oct 2023 13:28:49 +0200</pubDate><guid>https://jscheytt.github.io/p/eine-neue-psalmen-liturgie/</guid><description>&lt;p>&lt;em>In diesem Post stelle ich eine 2-Wochen-Liturgie basierend auf den Psalmen vor.
Dieses Stundengebet verwende ich selbst privat; es ist aber durchaus für den Gebrauch in Gemeinschaften gedacht, die das Leben im Reich Gottes einüben wollen.&lt;/em>&lt;/p>
&lt;p>&lt;strong>Wenn du die Hintergründe überspringen willst, spule direkt vor zur &lt;a class="link" href="#die-liturgie" >eigentlichen Liturgie&lt;/a>.&lt;/strong>&lt;/p>
&lt;p>Die Psalmen sind ein besonderer Schatz in der Bibel, sind sie doch gleichzeitig das Wort Gottes und Worte von Menschen.
Mithilfe dieser verschriftlichen Gespräche mit Gott, die Menschen lange vor uns geführt und festgehalten haben, haben wir eine extrem praktische Hilfe, um unser ganzes Innenleben vor Gott auszubreiten und dadurch Beziehung zu Ihm zu führen.&lt;/p>
&lt;p>Vor einigen Jahren habe ich angefangen, diesen Schatz bewusst zu entdecken und in meinen eigenen Gebetszeiten zu verwenden.
Da ich sowieso meine Beziehung zu Gott viel dadurch führe, dass ich Sein Wort verwende (vor allem durch lautes Lesen und Auswendiglernen), fiel mir das nicht sonderlich schwer.
Ich begann mit einer fortlaufenden Lesung (&amp;ldquo;Lectio continua&amp;rdquo;), bei der ich mit Psalm 1 begann, am nächsten Tag Psalm 2 las, am nächsten Tag Psalm 3 und so weiter, bis ich nach Psalm 150 wieder von vorne anfing.&lt;/p>
&lt;p>So ging es mehrere Jahre, bis ich merkte, dass ich einen Stopp oder eine Veränderung brauchte, um nicht betriebsblind für die Inhalte der Psalmen zu werden.
Ich wusste nicht, wie eine gesunde Alternative zur Lectio continua aussehen könnte, aber ich pausierte mein kontinuierliches Psalmengebet und suchte nun nach neuen Möglichkeiten, mit dem ganzen Psalter in meinem Alltag zu beten.&lt;/p>
&lt;h2 id="stundengebete">Stundengebete
&lt;/h2>&lt;p>Durch verschiedene Ansatzpunkte und Gespräche mit Freunden traf ich auf Stundengebete.
Damit sind Gebetsformen gemeint, bei denen man (ähnlich der rituellen Gebetszeiten der Muslime) zu mehreren festgelegten Zeiten am Tag betet, oftmals mit vorformulierten Gebeten.
Das fand ich ansprechend, da ich von meiner Persönlichkeit her sehr strukturiert bin und gleichzeitig immer mehr lernen will, in meinem &lt;em>ganzen&lt;/em> Alltag mit Gott verbunden zu sein.&lt;/p>
&lt;p>Leider waren die ersten Gebetsbücher mit vorformulierten Gebeten, auf die ich traf, für meinen Geschmack zu einseitig und zu wenig auf Gott beziehend.
Durch Gottes Gnade landete ich irgendwann beim Mönchstum und fand einen Orden, deren Gebetsbuch zum Haupteil aus den Psalmen besteht.&lt;/p>
&lt;p>Dieser Orden sind die &lt;strong>&lt;a class="link" href="https://de.wikipedia.org/wiki/Benediktiner" target="_blank" rel="noopener"
>Benediktiner&lt;/a>&lt;/strong>, einer der weltweit größten Mönchsorden, beheimatet in der katholischen Kirche und benannt nach ihrem Gründer Benedikt von Nursia (6. Jahrhundert).
In der &lt;a class="link" href="https://de.wikipedia.org/wiki/Stundengebet#Benediktsregel" target="_blank" rel="noopener"
>Ordensregel&lt;/a> schreibt der Heilige Benedikt seinen Ordensbrüdern vor, dass sie &lt;a class="link" href="https://www.intratext.com/IXT/DEU0017/_PJ.HTM" target="_blank" rel="noopener"
>einmal in der Woche den ganzen Psalter durchbeten sollen&lt;/a> - jede Woche in jedem Jahr.
In dieser Regel sind auch &lt;a class="link" href="http://individual.utoronto.ca/aaronorear/psalmody.html" target="_blank" rel="noopener"
>einige konkrete Aufteilungen&lt;/a> der Psalmen auf Wochentage und Gebetszeiten enthalten, worauf Benedikt allerdings nicht streng beharrt (siehe &lt;a class="link" href="https://www.intratext.com/IXT/DEU0017/_PJ.HTM" target="_blank" rel="noopener"
>RB 18,20&lt;/a>).
Ebenso schreibt die Benedikts-Regel &lt;a class="link" href="https://www.intratext.com/IXT/DEU0017/_PH.HTM" target="_blank" rel="noopener"
>sieben tägliche Gebetszeiten&lt;/a> vor (wobei die meisten heutigen Klöster nur 4 - 5 Gebetszeiten ausüben, indem sie einige der vorgeschriebenen Zeiten kombinieren).&lt;/p>
&lt;h2 id="benediktinische-psalmenliturgie">Benediktinische Psalmenliturgie
&lt;/h2>&lt;p>Eines der bekannteren Benediktinerklöster in Deutschland steht in Münsterschwarzach.
Bekannt ist es unter anderem durch den schriftstellerisch sehr aktiven und dort ansässigen Benediktinermönch Anselm Grün.
Was ebenfalls von dort stammt, ist das &amp;ldquo;&lt;strong>&lt;a class="link" href="https://www.vier-tuerme.de/benediktinisches-antiphonale-komplettpaket-mit-baenden-i-bis-iii" target="_blank" rel="noopener"
>Benediktinische Antiphonale&lt;/a>&lt;/strong>&amp;rdquo;, ein mehrbändiges Gebetsbuch mit fast 2.000 Seiten.
Dieses Gebetsbuch enthält eine Liturgie, bei der alle Psalmen in einer sorgfältig aufeinander abgestimmten Reihenfolge zusammengestellt und mit gottesdienstlichen Elementen aus der katholischen Tradition verwoben sind.
Die liturgische Zusammenstellung aus diesem Kloster wird mittlerweile in vielen deutschsprachigen Benediktinerklöstern verwandt.&lt;/p>
&lt;p>Nicht nur die Positionierung der Psalmen ist in diesem Fall besonders (wir betrachten gleich genauer, warum), sondern auch der Text:
Auch wenn die Mönche ihrer Kirche treu sein und die Einheitsübersetzung verwenden wollten, taten sie sich doch sehr schwer damit, weil sie so wenig singbar war.
Deswegen entschlossen sich einige Benediktiner aus verschiedenen Klöstern, gemeinsam eine &lt;strong>komplett eigene Übersetzung der Psalmen aus dem hebräischen Urtext&lt;/strong> zu erstellen.
Diese Neuübersetzung sollte einerseits der poetischen Form der Psalmen Rechnung tragen (durch Klarheit, Kürze und Sprachrhythmus) und sich andererseits auch für ihren gregorianischen Gesang im Kloster eignen.
Diese Übersetzung der Psalmen, deren Redaktion in Münsterschwarzach stattfand, ist mittlerweile auch getrennt von der restlichen Liturgie erhältlich als &amp;ldquo;&lt;em>&lt;a class="link" href="https://www.bookfinder.com/isbn/9783878682363/?st=sr&amp;amp;ac=qr&amp;amp;mode=basic&amp;amp;author=&amp;amp;title=&amp;amp;isbn=9783878682363&amp;amp;lang=de&amp;amp;destination=de&amp;amp;currency=EUR&amp;amp;binding=*&amp;amp;keywords=&amp;amp;publisher=&amp;amp;min_year=&amp;amp;max_year=&amp;amp;minprice=&amp;amp;maxprice=" target="_blank" rel="noopener"
>Münsterschwarzacher Psalter&lt;/a>&lt;/em>&amp;rdquo;.&lt;/p>
&lt;p>Bei der Zusammenstellung der Psalmen gingen die Mönche (darunter sticht am meisten &lt;a class="link" href="https://de.wikipedia.org/wiki/Notker_F%C3%BCglister" target="_blank" rel="noopener"
>Notker Füglister&lt;/a> hervor) mit tiefem Verständnis von Literatur und großer Liebe zu Gott und Seinem Wort vor:&lt;/p>
&lt;ol>
&lt;li>Sie ordneten die Psalmen (so weit möglich) bestimmten &lt;strong>Tageszeiten&lt;/strong> zu. Beispiele:
&lt;ul>
&lt;li>Psalm 5 &amp;ldquo;Am Morgen wirst du mein Rufen hören&amp;rdquo; für morgens&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Sie setzten sie auch bewusst an bestimmte &lt;strong>Wochentage&lt;/strong>. Beispiele:
&lt;ul>
&lt;li>Messianische Psalmen (z. B. Psalm 2) an die Sonntage&lt;/li>
&lt;li>Psalm 22 &amp;ldquo;Mein Gott, mein Gott, warum hast du mich verlassen?&amp;rdquo; an den Freitagmittag (wegen Karfreitag)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Ihrer Ansicht nach stehen &lt;strong>alle Psalmen in Beziehung zueinander&lt;/strong> und &amp;ldquo;sind miteinander im Gespräch&amp;rdquo;. Beispiele:
&lt;ul>
&lt;li>Psalm 100 und 95 stehen fast benachbart in einer Gebetszeit und enthalten beide die Zeile &amp;ldquo;Wir sind das Volk Deiner Weide, die Herde Deiner Hand&amp;rdquo;.&lt;/li>
&lt;li>Psalm 58 und 82 stehen benachbart und klagen ungerecht handelnde Mächtige an.&lt;/li>
&lt;li>Psalm 29, 1 und 19 stehen zusammen und bestaunen Gottes Reden und Sein Gesetz.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Jeder Psalm wurde &lt;strong>am Stück&lt;/strong> gebetet und nicht in einzelne Versabschnitte zerstückelt
&lt;ul>
&lt;li>Einzige Ausnahme ist Psalm 119, den mit Abstand längsten Psalm, der allerdings natürlicherweise aus 22 Strophen besteht.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>Weiterhin machten die Mönche an manchen Stellen Vereinfachungen bei der &lt;strong>Zählung und Aufteilung der Psalmen&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Drei Psalmen werden ausgelassen&lt;/strong>, weil sie vollständig in anderen Psalmen enthalten sind:
&lt;ul>
&lt;li>Psalm 53 = Psalm 14&lt;/li>
&lt;li>Psalm 70 = Psalm 40,14-18&lt;/li>
&lt;li>Psalm 108 = Psalm 57,8-12 = Psalm 60,7-14&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Manche Psalmen werden &lt;strong>zusammengefasst&lt;/strong>:
&lt;ul>
&lt;li>Psalm 9 und 10 sind einer der alphabetischen Psalmen, bei denen jeder Vers (oder jeder x-te Vers) mit dem nächsten Buchstaben des hebräischen Alphabets beginnt, sodass 9 und 10 generell als Einheit betrachtet werden.&lt;/li>
&lt;li>Psalm 42 und 43 haben einen identischen Refrain und werden ebenfalls als Einheit betrachtet.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Psalm 119&lt;/strong> als der längste Psalm besteht aus 22 Strophen und wird nicht komplett am Stück gelesen.
Stattdessen werden die einzelnen Strophen an bestimmten Stellen in der Liturgie als sogenanntes &amp;ldquo;Responsorium&amp;rdquo; eingebaut.
(Ich konnte leider nicht genauer herausfinden, wo sie eingebaut wurden und ob es dabei irgendein bewusstes Muster gab.)&lt;/li>
&lt;/ul>
&lt;h2 id="eine-eigene-liturgie-entsteht">Eine eigene Liturgie entsteht
&lt;/h2>&lt;h3 id="antiphonale-brevier-psalter">Antiphonale, Brevier, Psalter
&lt;/h3>&lt;p>Dank der Unibibliothek in unserer Nähe konnte ich sowohl den Münsterschwarzacher Psalter als auch eine Kurzfassung des Antiphonale, das &amp;ldquo;&lt;a class="link" href="https://www.bookfinder.com/isbn/9783736501263/?st=sr&amp;amp;ac=qr&amp;amp;mode=basic&amp;amp;author=&amp;amp;title=&amp;amp;isbn=9783736501263&amp;amp;lang=de&amp;amp;destination=de&amp;amp;currency=EUR&amp;amp;binding=*&amp;amp;keywords=&amp;amp;publisher=&amp;amp;min_year=&amp;amp;max_year=&amp;amp;minprice=&amp;amp;maxprice=" target="_blank" rel="noopener"
>Benediktinische Brevier&lt;/a>&amp;rdquo; ausleihen.
Das Brevier enthält alle Liturgieteile außer die Vigilien (die Vigil ist die allererste Gebetszeit).
Die Vigilien enthalten allerdings 54 Psalmen; dadurch fehlt im Brevier mehr als ein Drittel aller Psalmen.&lt;/p>
&lt;p>Dennoch konnte ich mithilfe des Breviers auch ohne direkten Zugriff auf ein Kloster oder Mönche die Antiphonale-Liturgie in ihrer Vollständigkeit ausprobieren.
Kurz gesagt war es als Nichtkatholik zu viel Neues für mich, auch wenn sie sehr viele wertvolle Elemente enthält wie schriftbasierte Gesänge, Schuldbekenntnisse und Fürbitte.
Spannenderweise sind für hohe Feiertage besondere Zusatztexte oder Abweichungen im Ablauf vorgesehen, was wiederum zeigt, aus welch reichem Schatz an Tradition und Kirchengeschichte die Mönche schöpfen.&lt;/p>
&lt;p>Im Münsterschwarzacher Psalter hingegen fand ich dann zum ersten Mal eine Kurzbeschreibung der Psalmenaufteilung des Benediktinischen Antiphonale.
Die Aufteilung ist wie folgt:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Wochentag&lt;/th>
&lt;th>Vigil Inv.&lt;/th>
&lt;th>Vigil I&lt;/th>
&lt;th>Vigil II&lt;/th>
&lt;th>Laudes&lt;/th>
&lt;th>MH I&lt;/th>
&lt;th>MH II&lt;/th>
&lt;th>Abendhore&lt;/th>
&lt;th>Nachthore&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Sonntag&lt;/td>
&lt;td>81&lt;/td>
&lt;td>110&lt;/td>
&lt;td>45&lt;/td>
&lt;td>93&lt;/td>
&lt;td>118&lt;/td>
&lt;td>136&lt;/td>
&lt;td>113&lt;/td>
&lt;td>4&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>18&lt;/td>
&lt;td>9/10&lt;/td>
&lt;td>3&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>114&lt;/td>
&lt;td>91&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>2&lt;/td>
&lt;td>72&lt;/td>
&lt;td>30&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>115&lt;/td>
&lt;td>134&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>147&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>116&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Montag&lt;/td>
&lt;td>29&lt;/td>
&lt;td>1&lt;/td>
&lt;td>94&lt;/td>
&lt;td>100&lt;/td>
&lt;td>25&lt;/td>
&lt;td>120&lt;/td>
&lt;td>33&lt;/td>
&lt;td>34&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>104&lt;/td>
&lt;td>105&lt;/td>
&lt;td>63&lt;/td>
&lt;td>&lt;/td>
&lt;td>121&lt;/td>
&lt;td>61&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>71&lt;/td>
&lt;td>112&lt;/td>
&lt;td>101&lt;/td>
&lt;td>&lt;/td>
&lt;td>122&lt;/td>
&lt;td>28&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>135&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>48&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Dienstag&lt;/td>
&lt;td>67&lt;/td>
&lt;td>6&lt;/td>
&lt;td>74&lt;/td>
&lt;td>98&lt;/td>
&lt;td>42/43&lt;/td>
&lt;td>123&lt;/td>
&lt;td>75&lt;/td>
&lt;td>139&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>107&lt;/td>
&lt;td>73&lt;/td>
&lt;td>90&lt;/td>
&lt;td>&lt;/td>
&lt;td>124&lt;/td>
&lt;td>140&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>7&lt;/td>
&lt;td>77&lt;/td>
&lt;td>65&lt;/td>
&lt;td>&lt;/td>
&lt;td>125&lt;/td>
&lt;td>26&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>117&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>145&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Mittwoch&lt;/td>
&lt;td>46&lt;/td>
&lt;td>78&lt;/td>
&lt;td>58&lt;/td>
&lt;td>97&lt;/td>
&lt;td>44&lt;/td>
&lt;td>126&lt;/td>
&lt;td>103&lt;/td>
&lt;td>32&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>132&lt;/td>
&lt;td>19&lt;/td>
&lt;td>36&lt;/td>
&lt;td>&lt;/td>
&lt;td>127&lt;/td>
&lt;td>86&lt;/td>
&lt;td>62&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>49&lt;/td>
&lt;td>57&lt;/td>
&lt;td>&lt;/td>
&lt;td>128&lt;/td>
&lt;td>85&lt;/td>
&lt;td>133&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>82&lt;/td>
&lt;td>149&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>87&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Donnerstag&lt;/td>
&lt;td>24&lt;/td>
&lt;td>39&lt;/td>
&lt;td>50&lt;/td>
&lt;td>47&lt;/td>
&lt;td>55&lt;/td>
&lt;td>129&lt;/td>
&lt;td>11&lt;/td>
&lt;td>102&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>37&lt;/td>
&lt;td>68&lt;/td>
&lt;td>76&lt;/td>
&lt;td>&lt;/td>
&lt;td>130&lt;/td>
&lt;td>23&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>41&lt;/td>
&lt;td>83&lt;/td>
&lt;td>5&lt;/td>
&lt;td>&lt;/td>
&lt;td>131&lt;/td>
&lt;td>84&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>148&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>40&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Freitag&lt;/td>
&lt;td>8&lt;/td>
&lt;td>88&lt;/td>
&lt;td>60&lt;/td>
&lt;td>96&lt;/td>
&lt;td>22&lt;/td>
&lt;td>11&lt;/td>
&lt;td>144&lt;/td>
&lt;td>31&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>69&lt;/td>
&lt;td>106&lt;/td>
&lt;td>143&lt;/td>
&lt;td>&lt;/td>
&lt;td>12&lt;/td>
&lt;td>141&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>38&lt;/td>
&lt;td>79&lt;/td>
&lt;td>64&lt;/td>
&lt;td>&lt;/td>
&lt;td>13&lt;/td>
&lt;td>142&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>146&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>27&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Samstag&lt;/td>
&lt;td>95&lt;/td>
&lt;td>59&lt;/td>
&lt;td>137&lt;/td>
&lt;td>99&lt;/td>
&lt;td>35&lt;/td>
&lt;td>52&lt;/td>
&lt;td>66&lt;/td>
&lt;td>15&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>109&lt;/td>
&lt;td>89&lt;/td>
&lt;td>51&lt;/td>
&lt;td>&lt;/td>
&lt;td>14&lt;/td>
&lt;td>20&lt;/td>
&lt;td>16&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>56&lt;/td>
&lt;td>80&lt;/td>
&lt;td>92&lt;/td>
&lt;td>&lt;/td>
&lt;td>54&lt;/td>
&lt;td>21&lt;/td>
&lt;td>17&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>150&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>138&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>In dieser Zusammenstellung sind die Psalmen verteilt auf fünf Gebetszeiten:&lt;/p>
&lt;ol>
&lt;li>Vigil mit Invitatorium und Teil I (in 1. Wochen) oder Teil II (in 2. Wochen)
&lt;ul>
&lt;li>Meist um 05:30&lt;/li>
&lt;li>In einigen Klöstern folgt die Laudes direkt im Anschluss auf die Vigil.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Laudes&lt;/li>
&lt;li>Mittagshore (abgekürzt mit &amp;ldquo;MH&amp;rdquo;) mit Teil I (in 1. Wochen) oder Teil II (in 2. Wochen)
&lt;ul>
&lt;li>Meist um 12:00&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Abendhore (auch &amp;ldquo;Vesper&amp;rdquo;)
&lt;ul>
&lt;li>Meist um 17:30&lt;/li>
&lt;li>Das Wort &amp;ldquo;Hore&amp;rdquo; bedeutet wörtlich &amp;ldquo;Stunde&amp;rdquo; (wie engl. &amp;ldquo;hour&amp;rdquo;) und steht für eine einzelne Gebetszeit.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Nachthore (auch &amp;ldquo;Komplet&amp;rdquo;)
&lt;ul>
&lt;li>Meist um 19:00&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>Ursprünglich hatte ich fälschlicherweise angenommen, dass Vigil I/II und Mittagshore I/II immer zusammen gebetet werden.
Erst bei einem kürzlichen Besuch in einem Kloster stellte ich meinen Irrtum fest:
Es werden alternierend Vigil I mit Mittagshore I und in der anschließenden Woche Vigil II mit Mittagshore II gebetet, während die restlichen Elemente gleich bleiben.
Dadurch werden doch nicht alle Psalmen in exakt einer Woche gebetet; es sind durchschnittlich 110 Psalmen pro Woche (also ungefähr 75 %).&lt;/p>
&lt;h3 id="ziele-und-gestaltungsprinzipien">Ziele und Gestaltungsprinzipien
&lt;/h3>&lt;p>Mit dieser obigen Tabelle hatte ich einen extrem wertvollen Startpunkt für eine eigene Liturgie.
Bei der Gestaltung dieser Psalmenliturgie waren mir folgende Dinge besonders wichtig:&lt;/p>
&lt;ol>
&lt;li>Der Psalter soll mit &lt;strong>vertretbarem Zeitaufwand&lt;/strong> nutzbar sein, sowohl für Einzelpersonen als auch für geistliche Gemeinschaften, die täglich gemeinsame Gebetszeiten pflegen wollen.
&lt;ol>
&lt;li>Deswegen habe ich ihn auf &lt;strong>zwei Wochen&lt;/strong> verteilt.
&lt;ul>
&lt;li>Grobe Rechnung dazu:&lt;/li>
&lt;li>Bei 145 Psalmen (siehe die obigen Auslassungen) und 14 Tagen kommt man auf 10 bis 11 Psalmen am Tag.&lt;/li>
&lt;li>In der Audioversion der &amp;ldquo;Hoffnung für alle&amp;rdquo; dauern die Psalmen in Summe ziemlich genau sechs Stunden.
Damit sind wir bei durchschnittlich ca. &lt;em>25 Minuten reiner Lesezeit pro Tag&lt;/em>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Ebenfalls aus Gründen der Machbarkeit habe ich &lt;strong>drei Horen&lt;/strong> gewählt:
Morgen, Mittag, Abend.
&lt;ul>
&lt;li>Die Mittagshore soll kürzer sein, weil in Gemeinschaften womöglich nicht alle Mitglieder mittags anwesend sein können.&lt;/li>
&lt;li>Bei drei Horen und zwei Wochen ergibt sich eine Psalmenanzahl von durchschnittlich &lt;em>3 - 4 Psalmen pro Hore&lt;/em>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Außerdem sollen die &lt;strong>Horen ungefähr gleich lang&lt;/strong> sein für bessere Planbarkeit und um Zeitdruck zu vermeiden.
&lt;ul>
&lt;li>Als Ausnahme können die Horen an Samstagen und Sonntagen länger sein, weil wir hier davon ausgehen können, dass wir mehr Zeit zur Verfügung haben.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>&lt;strong>Biblische Texte&lt;/strong> sollen die Grundlage bilden.
Bei außerbiblische Gebeten haben wir eine zu schwer überschaubare Auswahl.&lt;/li>
&lt;li>Die &lt;strong>Anordnung der Psalmen&lt;/strong> zueinander aus dem Antiphonale soll so weit wie möglich &lt;strong>erhalten&lt;/strong> bleiben, um aus dem reichen Erfahrungsschatz der benediktinischen Mönche zu schöpfen.&lt;/li>
&lt;li>Als Ergänzung sollen auch &lt;strong>neutestamentliche Texte&lt;/strong> mit einfließen.
Nur Psalmen zu lesen ohne den Bezug zu Christus ist auf Dauer unausgewogen.&lt;/li>
&lt;li>&lt;strong>Psalm 119&lt;/strong> soll am Ende der Morgen- und Mittagshoren stehen.
Damit können wir zum Start in den Vormittag und dann zum Start in den Nachmittag jeweils bekräftigen, dass wir unter Jesu Herrschaft und im Einklang mit Seinem Willen leben möchten.
&lt;ul>
&lt;li>Zu Psalm 119 habe ich ein &lt;a class="link" href="https://jscheytt.github.io/p/the-beauty-of-the-law/" >besonderes Verhältnis&lt;/a>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3 id="erste-schritte">Erste Schritte
&lt;/h3>&lt;p>Die Umstrukturierung des Antiphonale begann anfänglich mit Fokus auf der Umverteilung der fünf bestehenden Horen auf die drei neuen Horen:&lt;/p>
&lt;ul>
&lt;li>Die &lt;em>neue Laudes&lt;/em> nimmt die originale Laudes und von den Vigilien das Invitatorium und Teil I.
&lt;ul>
&lt;li>Die Vigil und die Laudes des Sonntags blieb an ihrem Platz (die Laudes an Sonntag I, die Vigil an Sonntag II).&lt;/li>
&lt;li>An den anderen Tagen wechseln sich Laudes und Vigil Inv+I ab.
(Dieses Abwechseln hat sich insgesamt bewährt, damit vollständig erhaltene Segmente aus dem Antiphonale sich abwechseln können mit stärker umsortierten Horen.)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Die &lt;em>neue Mittagshore&lt;/em> nimmt die originale Mittagshore I und II und den Sonntag, Montag und Dienstag der Vigil II.&lt;/li>
&lt;li>Die &lt;em>neue Abendhore&lt;/em> nimmt die originale Abendhore, Nachthore und Mittwoch bis Samstag (die übrigen Tage) der Vigil II.&lt;/li>
&lt;li>Jede Hore besteht aus drei Teilen:
&lt;ol>
&lt;li>Ein oder mehrere Psalmen als Hauptteil&lt;/li>
&lt;li>Eine Schriftlesung aus dem Neuen Testament&lt;/li>
&lt;li>Ein Abschlusspsalm&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;p>Als ich eine erste Version zusammengebaut hatte, testete ich sie umgehend im Alltag.
Über viele Wochen hinweg verfeinerte ich die Zusammenstellung an vielen Stellen:&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://docs.google.com/spreadsheets/d/14AuC6JHy1GkDbFyaH_jHxm-OzG-m8ZMW?rtpof=true" target="_blank" rel="noopener"
>Dank Excel&lt;/a> konnte ich den Mittelwert und die Standardabweichung der Leselängen der einzelnen Horen bestimmen.
Dadurch konnte ich diese Werte in immer besseres Fahrwasser bringen für eine möglichst einheitliche Länge.&lt;/li>
&lt;li>Die Aufteilung der 22 Strophen von Psalm 119 war anfänglich auf allen Morgenden und Mittagen und zusätzlich auf dem Samstagmorgen.
Allerdings waren einige der späteren 119-Strophen inhaltlich besser für den Abend bzw. Morgen geeignet.
Deswegen sortierte ich sie um, sodass der Samstag I jetzt keine 119-Strophen mehr enthält, aber dafür der Samstag II.&lt;/li>
&lt;li>Für die NT-Texte nutzte ich die Texte, die bereits im Antiphonale vorkamen und einige NT-Texte, die uns als Hauskreis wichtig sind.&lt;/li>
&lt;li>Manche Konstellationen von Psalmen waren sehr bitter und hoffnungslos.
Das darf unsere Seele auch so empfinden.
Und dennoch war bspw. Psalm 88 direkt gefolgt von Psalm 39 ziemlich heftige Kost, sodass bei einigen Morgen- und Abendhoren noch viel umsortiert wurde.&lt;/li>
&lt;li>Der Abschlusspsalm der Abendhore ist direkt als letzte Lektüre vor dem Schlafengehen gedacht.
Nicht alle Psalmen bieten sich dafür gleich gut an.
Auch an dieser Stelle waren einige Umverteilungen angebracht.&lt;/li>
&lt;li>Als einzige alttestamentliche Schriftlesung kam 1. Mose 2,1-3 an den Samstagabenden hinzu.
Im Judentum beginnt der neue Tag am Abend und der erste Tag der Woche ist für Christen der Sonntag.
Diese Verse aus dem Schöpfungsbericht sollen uns helfen, die neue Woche aus dem Ruhen in unserem Schöpfer zu beginnen.&lt;/li>
&lt;/ul>
&lt;p>Nach vielen Wochen kam ich an einer Zusammenstellung an, welche die gesteckten Ziele meiner Ansicht nach gut erfüllt.&lt;/p>
&lt;h2 id="die-liturgie">Die Liturgie
&lt;/h2>&lt;p>Keinesfalls ist diese Liturgie als ein sklavisch einzuhaltendes und lebloses Ritual zu verstehen.
Sie soll vielmehr als ein hilfreicher Bezugsrahmen dienen, der uns das Hinwenden zum unsichtbaren Gott, der sich in Jesus sichtbar gemacht hat, erleichtern kann.
Wenn sie dir oder euch dazu nicht dient, ändert sie nach Belieben ab.&lt;/p>
&lt;p>Diese Liturgie ist grundsätzlich sehr simpel aufgebaut:&lt;/p>
&lt;ul>
&lt;li>Es gibt &lt;strong>drei Gebetszeiten&lt;/strong>: Morgen, Mittag, Abend
&lt;ul>
&lt;li>Gemäß der monastischen Tradition nennen wir sie &lt;em>Laudes&lt;/em> (&amp;ldquo;Lobgesänge&amp;rdquo;), Mittagshore und Abendhore.&lt;/li>
&lt;li>In der Tabelle sind sie bezeichnet mit &amp;ldquo;L&amp;rdquo;, &amp;ldquo;M&amp;rdquo; und &amp;ldquo;A&amp;rdquo;.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Jede Gebetszeit (Hore) besteht aus &lt;strong>drei Teilen&lt;/strong>:
&lt;ol>
&lt;li>Psalmen (Teil 1)&lt;/li>
&lt;li>Lesung aus dem Neuen Testament (Teil NT)&lt;/li>
&lt;li>Abschlusspsalm (Teil 2)&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>Die Bibeltexte sind über &lt;strong>zwei Wochen&lt;/strong> verteilt.&lt;/li>
&lt;li>Kleine Besonderheiten:
&lt;ul>
&lt;li>Psalm 119 besteht aus 22 Strophen und wird nie am Stück gelesen.
Stattdessen sind die einzelnen Strophen über die zwei Wochen verteilt.&lt;/li>
&lt;li>Einige Psalmen (53, 70, 108) fehlen, weil sie vollständig in anderen Psalmen enthalten sind (siehe &lt;a class="link" href="#benediktinische-psalmenliturgie" >Benediktinische Psalmenliturgie&lt;/a>).&lt;/li>
&lt;li>Die Samstage enthalten nach dem Abschlusspsalm noch einen Abschnitt aus 1. Mose, um die neue Woche aus Gottes Schöpfungsruhe heraus zu beginnen.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>Die Psalmen und NT-Texte teilen sich folgendermaßen auf:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Wochentag&lt;/th>
&lt;th>L 1&lt;/th>
&lt;th>L NT&lt;/th>
&lt;th>L 2&lt;/th>
&lt;th>M 1&lt;/th>
&lt;th>M NT&lt;/th>
&lt;th>M 2&lt;/th>
&lt;th>A 1&lt;/th>
&lt;th>A NT&lt;/th>
&lt;th>A 2&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Sonntag I&lt;/td>
&lt;td>93&lt;/td>
&lt;td>&lt;a class="link" href="https://www.bibleserver.com/NG%C3%9C/Joh1,1-18" target="_blank" rel="noopener"
>Joh1,1-18&lt;/a>&lt;/td>
&lt;td>92&lt;/td>
&lt;td>118&lt;/td>
&lt;td>&lt;a class="link" href="https://www.bibleserver.com/NG%C3%9C/Joh17" target="_blank" rel="noopener"
>Joh17&lt;/a>&lt;/td>
&lt;td>150&lt;/td>
&lt;td>60&lt;/td>
&lt;td>&lt;a class="link" href="https://www.bibleserver.com/NG%C3%9C/1Joh2,28ff" target="_blank" rel="noopener"
>1Joh2,28&lt;/a>-&lt;a class="link" href="https://www.bibleserver.com/NG%C3%9C/1Joh3,1-3" target="_blank" rel="noopener"
>3,3&lt;/a>&lt;/td>
&lt;td>116&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>3&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>136&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>113&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>30&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>114&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>147&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>115&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Montag I&lt;/td>
&lt;td>29&lt;/td>
&lt;td>&lt;a class="link" href="https://www.bibleserver.com/NG%C3%9C/Mt5,17ff" target="_blank" rel="noopener"
>Mt5,17ff&lt;/a>&lt;/td>
&lt;td>119-I&lt;/td>
&lt;td>25&lt;/td>
&lt;td>&lt;a class="link" href="https://www.bibleserver.com/NG%C3%9C/Eph1,15ff" target="_blank" rel="noopener"
>Eph1,15ff&lt;/a>&lt;/td>
&lt;td>119-II&lt;/td>
&lt;td>32&lt;/td>
&lt;td>&lt;a class="link" href="https://www.bibleserver.com/NG%C3%9C/1Joh4,7ff" target="_blank" rel="noopener"
>1Joh4,7ff&lt;/a>&lt;/td>
&lt;td>139&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>1&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>120&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>62&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>19&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>121&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>133&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>71&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>122&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Dienstag I&lt;/td>
&lt;td>63&lt;/td>
&lt;td>&lt;a class="link" href="https://www.bibleserver.com/NG%C3%9C/Of4" target="_blank" rel="noopener"
>Of4&lt;/a>&lt;/td>
&lt;td>119-III&lt;/td>
&lt;td>9/10&lt;/td>
&lt;td>&lt;a class="link" href="https://www.bibleserver.com/NG%C3%9C/Joh16,19ff" target="_blank" rel="noopener"
>Joh16,19ff&lt;/a>&lt;/td>
&lt;td>119-IV&lt;/td>
&lt;td>33&lt;/td>
&lt;td>&lt;a class="link" href="https://www.bibleserver.com/NG%C3%9C/Joh15,1-17" target="_blank" rel="noopener"
>Joh15,1-17&lt;/a>&lt;/td>
&lt;td>48&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>101&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>61&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>135&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>28&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>96&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Mittwoch I&lt;/td>
&lt;td>67&lt;/td>
&lt;td>&lt;a class="link" href="https://www.bibleserver.com/NG%C3%9C/1Kor1,18ff" target="_blank" rel="noopener"
>1Kor1,18ff&lt;/a>&lt;/td>
&lt;td>119-V&lt;/td>
&lt;td>42/43&lt;/td>
&lt;td>&lt;a class="link" href="https://www.bibleserver.com/NG%C3%9C/2Kor5,14ff" target="_blank" rel="noopener"
>2Kor5,14ff&lt;/a>&lt;/td>
&lt;td>119-VI&lt;/td>
&lt;td>102&lt;/td>
&lt;td>&lt;a class="link" href="https://www.bibleserver.com/NG%C3%9C/Mt6,1-18" target="_blank" rel="noopener"
>Mt6,1-18&lt;/a>&lt;/td>
&lt;td>17&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>6&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>123&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>15&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>107&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>124&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>16&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>7&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>125&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Donnerstag I&lt;/td>
&lt;td>88&lt;/td>
&lt;td>&lt;a class="link" href="https://www.bibleserver.com/NG%C3%9C/Phil3,7-14" target="_blank" rel="noopener"
>Phil3,7-14&lt;/a>&lt;/td>
&lt;td>119-VII&lt;/td>
&lt;td>11&lt;/td>
&lt;td>&lt;a class="link" href="https://www.bibleserver.com/NG%C3%9C/Mt6,19ff" target="_blank" rel="noopener"
>Mt6,19ff&lt;/a>&lt;/td>
&lt;td>119-VIII&lt;/td>
&lt;td>75&lt;/td>
&lt;td>&lt;a class="link" href="https://www.bibleserver.com/NG%C3%9C/1Kor13" target="_blank" rel="noopener"
>1Kor13&lt;/a>&lt;/td>
&lt;td>145&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>90&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>94&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>140&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>99&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>112&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>26&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Freitag I&lt;/td>
&lt;td>100&lt;/td>
&lt;td>&lt;a class="link" href="https://www.bibleserver.com/NG%C3%9C/Phil4,4-13" target="_blank" rel="noopener"
>Phil4,4-13&lt;/a>&lt;/td>
&lt;td>119-IX&lt;/td>
&lt;td>69&lt;/td>
&lt;td>&lt;a class="link" href="https://www.bibleserver.com/NG%C3%9C/Mt16,24ff" target="_blank" rel="noopener"
>Mt16,24ff&lt;/a>&lt;/td>
&lt;td>119-X&lt;/td>
&lt;td>49&lt;/td>
&lt;td>&lt;a class="link" href="https://www.bibleserver.com/NG%C3%9C/Mt11,25ff" target="_blank" rel="noopener"
>Mt11,25ff&lt;/a>&lt;/td>
&lt;td>46&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>51&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>12&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>31&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>95&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>13&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>41&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Samstag I&lt;/td>
&lt;td>36&lt;/td>
&lt;td>&lt;a class="link" href="https://www.bibleserver.com/NG%C3%9C/Tit3,3-7" target="_blank" rel="noopener"
>Tit3,3-7&lt;/a>&lt;/td>
&lt;td>117&lt;/td>
&lt;td>54&lt;/td>
&lt;td>&lt;a class="link" href="https://www.bibleserver.com/NG%C3%9C/R%c3%b6m3,21-26" target="_blank" rel="noopener"
>Röm3,21-26&lt;/a>&lt;/td>
&lt;td>52&lt;/td>
&lt;td>103&lt;/td>
&lt;td>&lt;a class="link" href="https://www.bibleserver.com/NG%C3%9C/Mt18,1-5" target="_blank" rel="noopener"
>Mt18,1-5&lt;/a>.&lt;a class="link" href="https://www.bibleserver.com/NG%C3%9C/Mt18,10-14" target="_blank" rel="noopener"
>10-14&lt;/a>&lt;/td>
&lt;td>87&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>57&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>58&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>77&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;a class="link" href="https://www.bibleserver.com/ELB.HFA/1Mo1,31" target="_blank" rel="noopener"
>1Mo1,31&lt;/a>-&lt;a class="link" href="https://www.bibleserver.com/ELB.HFA/1Mo2,1-3" target="_blank" rel="noopener"
>2,3&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>149&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>82&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>86&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>81&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>14&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>85&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Sonntag II&lt;/td>
&lt;td>110&lt;/td>
&lt;td>&lt;a class="link" href="https://www.bibleserver.com/NG%C3%9C/Kol1,15-23.27" target="_blank" rel="noopener"
>Kol1,15-23.27&lt;/a>&lt;/td>
&lt;td>47&lt;/td>
&lt;td>45&lt;/td>
&lt;td>&lt;a class="link" href="https://www.bibleserver.com/NG%C3%9C/Lk1,46-55" target="_blank" rel="noopener"
>Lk1,46-55&lt;/a>&lt;/td>
&lt;td>148&lt;/td>
&lt;td>68&lt;/td>
&lt;td>&lt;a class="link" href="https://www.bibleserver.com/NG%C3%9C/2Kor2,14-16a" target="_blank" rel="noopener"
>2Kor2,14-16a&lt;/a>&lt;/td>
&lt;td>134&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>18&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>72&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>34&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>2&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Montag II&lt;/td>
&lt;td>76&lt;/td>
&lt;td>&lt;a class="link" href="https://www.bibleserver.com/NG%C3%9C/R%c3%b6m11,33ff" target="_blank" rel="noopener"
>Röm11,33&lt;/a>-&lt;a class="link" href="https://www.bibleserver.com/NG%C3%9C/R%c3%b6m12,1-2" target="_blank" rel="noopener"
>12,2&lt;/a>&lt;/td>
&lt;td>119-XI&lt;/td>
&lt;td>44&lt;/td>
&lt;td>&lt;a class="link" href="https://www.bibleserver.com/NG%C3%9C/Mt5,1-16" target="_blank" rel="noopener"
>Mt5,1-16&lt;/a>&lt;/td>
&lt;td>119-XII&lt;/td>
&lt;td>79&lt;/td>
&lt;td>&lt;a class="link" href="https://www.bibleserver.com/NG%C3%9C/Joh10,1-18" target="_blank" rel="noopener"
>Joh10,1-18&lt;/a>&lt;/td>
&lt;td>23&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>5&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>126&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>50&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>104&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>127&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>111&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>24&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>128&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Dienstag II&lt;/td>
&lt;td>39&lt;/td>
&lt;td>&lt;a class="link" href="https://www.bibleserver.com/NG%C3%9C/Kol3,1-17" target="_blank" rel="noopener"
>Kol3,1-17&lt;/a>&lt;/td>
&lt;td>119-XIII&lt;/td>
&lt;td>105&lt;/td>
&lt;td>&lt;a class="link" href="https://www.bibleserver.com/NG%C3%9C/Eph1,3-8" target="_blank" rel="noopener"
>Eph1,3-8&lt;/a>&lt;/td>
&lt;td>119-XIV&lt;/td>
&lt;td>83&lt;/td>
&lt;td>&lt;a class="link" href="https://www.bibleserver.com/NG%C3%9C/2Kor3,18" target="_blank" rel="noopener"
>2Kor3,18&lt;/a>.&lt;a class="link" href="https://www.bibleserver.com/NG%C3%9C/2Kor4,16ff" target="_blank" rel="noopener"
>4,16ff&lt;/a>&lt;/td>
&lt;td>4&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>37&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>84&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>40&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Mittwoch II&lt;/td>
&lt;td>143&lt;/td>
&lt;td>&lt;a class="link" href="https://www.bibleserver.com/NG%C3%9C/Phil2,5-13" target="_blank" rel="noopener"
>Phil2,5-13&lt;/a>&lt;/td>
&lt;td>119-XV&lt;/td>
&lt;td>55&lt;/td>
&lt;td>&lt;a class="link" href="https://www.bibleserver.com/NG%C3%9C/Hebr12,1-3" target="_blank" rel="noopener"
>Hebr12,1-3&lt;/a>&lt;/td>
&lt;td>119-XVI&lt;/td>
&lt;td>144&lt;/td>
&lt;td>&lt;a class="link" href="https://www.bibleserver.com/NG%C3%9C/R%c3%b6m8,31ff" target="_blank" rel="noopener"
>Röm8,31ff&lt;/a>&lt;/td>
&lt;td>27&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>64&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>129&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>141&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>146&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>130&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>142&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>8&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>131&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Donnerstag II&lt;/td>
&lt;td>38&lt;/td>
&lt;td>&lt;a class="link" href="https://www.bibleserver.com/NG%C3%9C/1Joh1" target="_blank" rel="noopener"
>1Joh1,1&lt;/a>-&lt;a class="link" href="https://www.bibleserver.com/NG%C3%9C/1Joh2,1-2" target="_blank" rel="noopener"
>2,2&lt;/a>&lt;/td>
&lt;td>119-XVII&lt;/td>
&lt;td>74&lt;/td>
&lt;td>&lt;a class="link" href="https://www.bibleserver.com/NG%C3%9C/Hebr4,12ff" target="_blank" rel="noopener"
>Hebr4,12ff&lt;/a>&lt;/td>
&lt;td>119-XVIII&lt;/td>
&lt;td>106&lt;/td>
&lt;td>&lt;a class="link" href="https://www.bibleserver.com/NG%C3%9C/R%c3%b6m8,1-17" target="_blank" rel="noopener"
>Röm8,1-17&lt;/a>&lt;/td>
&lt;td>91&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>65&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>73&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>98&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>97&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Freitag II&lt;/td>
&lt;td>78&lt;/td>
&lt;td>&lt;a class="link" href="https://www.bibleserver.com/NG%C3%9C/Lk1,67-79" target="_blank" rel="noopener"
>Lk1,67-79&lt;/a>&lt;/td>
&lt;td>119-XIX&lt;/td>
&lt;td>22&lt;/td>
&lt;td>&lt;a class="link" href="https://www.bibleserver.com/NG%C3%9C/Of5" target="_blank" rel="noopener"
>Of5&lt;/a>&lt;/td>
&lt;td>119-XX&lt;/td>
&lt;td>66&lt;/td>
&lt;td>&lt;a class="link" href="https://www.bibleserver.com/NG%C3%9C/Eph3,14ff" target="_blank" rel="noopener"
>Eph3,14ff&lt;/a>&lt;/td>
&lt;td>138&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>20&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>21&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Samstag II&lt;/td>
&lt;td>59&lt;/td>
&lt;td>&lt;a class="link" href="https://www.bibleserver.com/NG%C3%9C/Joh14,15ff" target="_blank" rel="noopener"
>Joh14,15ff&lt;/a>&lt;/td>
&lt;td>119-XXI&lt;/td>
&lt;td>35&lt;/td>
&lt;td>&lt;a class="link" href="https://www.bibleserver.com/NG%C3%9C/Hebr13,9-17" target="_blank" rel="noopener"
>Hebr13,9-17&lt;/a>.&lt;a class="link" href="https://www.bibleserver.com/NG%C3%9C/Hebr13,20f" target="_blank" rel="noopener"
>20f&lt;/a>&lt;/td>
&lt;td>119-XXII&lt;/td>
&lt;td>137&lt;/td>
&lt;td>&lt;a class="link" href="https://www.bibleserver.com/NG%C3%9C/Hebr1,1-3" target="_blank" rel="noopener"
>Hebr1,1-3&lt;/a>.&lt;a class="link" href="https://www.bibleserver.com/NG%C3%9CHebr2,9f" target="_blank" rel="noopener"
>2,9f&lt;/a>&lt;/td>
&lt;td>80&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>109&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>132&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>89&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;a class="link" href="https://www.bibleserver.com/ELB.HFA/1Mo1,31" target="_blank" rel="noopener"
>1Mo1,31&lt;/a>-&lt;a class="link" href="https://www.bibleserver.com/ELB.HFA/1Mo2,1-3" target="_blank" rel="noopener"
>2,3&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>56&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="eine-gebrauchsanweisung">Eine Gebrauchsanweisung
&lt;/h2>&lt;p>Wie verwende ich diese Liturgie mit Gewinn?&lt;/p>
&lt;p>Ich empfehle folgende Schritte als &lt;strong>Vorbereitung&lt;/strong>:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Druck dir die Tabelle aus&lt;/strong>, beispielsweise von &lt;a class="link" href="https://drive.google.com/open?id=14J46EmJiwxjxVElZVYyhl81lPT_moS1P" target="_blank" rel="noopener"
>diesem PDF&lt;/a>.&lt;/li>
&lt;li>Besorg dir gut &lt;strong>lesbare Bibelübersetzungen&lt;/strong>.
Ich empfehle besonders diese Übersetzungen:
&lt;ul>
&lt;li>Den &lt;strong>&lt;a class="link" href="https://www.bookfinder.com/isbn/9783878682363/?st=sr&amp;amp;ac=qr&amp;amp;mode=basic&amp;amp;author=&amp;amp;title=&amp;amp;isbn=9783878682363&amp;amp;lang=de&amp;amp;destination=de&amp;amp;currency=EUR&amp;amp;binding=*&amp;amp;keywords=&amp;amp;publisher=&amp;amp;min_year=&amp;amp;max_year=&amp;amp;minprice=&amp;amp;maxprice=" target="_blank" rel="noopener"
>Münsterschwarzacher Psalter&lt;/a>&lt;/strong> für die Psalmen
&lt;ul>
&lt;li>Die neuesten Ausgaben sind manchmal nicht gut erhältlich.
Gebrauchte Ausgaben in älteren Editionen sind oft besser verfügbar und enthalten meist den identischen Text.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Die &lt;strong>Neue Genfer Übersetzung&lt;/strong> (NGÜ) für die NT-Texte&lt;/li>
&lt;li>Eine &lt;em>Elberfelder&lt;/em> oder eine &lt;em>Elberfelder Studienbibel&lt;/em> als genauere Referenz&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Falls es dir hilft:
Setze dir (oder euch, wenn ihr als Gemeinschaft betet) &lt;strong>Zeiten&lt;/strong> für die drei Horen fest.
Ich habe mit verschiedenen Rhythmen experimentiert und fand folgendes hilfreich:
&lt;ol>
&lt;li>Laudes 1 und NT nach dem Aufstehen
&lt;ul>
&lt;li>Wer bereits eine morgendliche Gebetszeit hat, kann die Texte darin einbauen.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Laudes 2 direkt vor dem Start in den Arbeitstag&lt;/li>
&lt;li>Mittagshore 1 und NT nach dem Mittagessen&lt;/li>
&lt;li>Mittagshore 2 zum Ende der Mittagspause, direkt vor dem Wiedereinstieg in den restlichen Arbeitstag&lt;/li>
&lt;li>Abendhore 1 und NT entweder direkt nach dem Ende des Arbeitstags oder vor dem Abendessen&lt;/li>
&lt;li>Abendhore 2 direkt vor dem Zubettgehen&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;p>Für die &lt;strong>Gebetszeiten selbst&lt;/strong> empfehle ich folgende Herangehensweise:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Bete kurz, bevor du mit dem Lesen beginnst&lt;/strong>.
Danke Gott für den Schatz Seines Wortes und bitte Ihn darum, dass Er diese Texte lebendig macht und direkt zu dir/euch spricht.
&lt;ul>
&lt;li>Der Apostel Johannes bezeichnet Jesus als &amp;ldquo;das Wort&amp;rdquo; (siehe Johannes 1).
Wenn du die Bibel liest, liest du Jesus und wirst Ihm (über kurz oder lang) begegnen.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Lies die Psalmen und Texte laut&lt;/strong>.
Es macht einen Unterschied, ob du die Texte nur innerlich bewegst oder das Wort Gottes tatsächlich &amp;ldquo;in den Mund nimmst&amp;rdquo; und damit zu einem Teil von dir machst.
&lt;ul>
&lt;li>Lautes Vorlesen braucht Übung.
Lass dich nicht entmutigen, wenn du anfangs viele Minuten für einen einzigen Psalm brauchst.
Gott freut sich an dem Weg und unsere Fehler überraschen Ihn nicht, noch schmälern sie in geringster Weise Seine unfassbare Liebe zu uns!&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Geh nicht analytisch an den Text heran, sondern &lt;strong>beziehungsorientiert&lt;/strong>.
Wir lesen diese Texte nicht mit dem primären Fokus, um &lt;em>Informationen über Gott&lt;/em> zu gewinnen, sondern um &lt;em>Beziehung zu Gott&lt;/em> zu lernen und zu führen.
Und das tun wir im Fall der Psalmen, indem wir wie Kinder zuerst nachsprechen.&lt;/li>
&lt;li>Antworte Ihm nach dem Vorlesen &lt;strong>mit deinen eigenen Worten&lt;/strong>.
&lt;ul>
&lt;li>Als wir kleine Kinder waren, haben wir nur nachgeplappert, haben viele Fehler gemacht und dabei über weite Strecken ganz mühelos das Sprechen gelernt.
Je mehr wir unsere Muttersprache in uns aufgesogen und praktiziert haben, desto leichter wurde es für uns, auch zunehmend eigene Sätze zu bilden und eigenständig zu sprechen.
Ich bin überzeugt, dass es beim Gebet nicht anders ist.&lt;/li>
&lt;li>Antworte Gott an den Stellen innerhalb der Liturgie, wo du in dir eine &lt;strong>Reaktion&lt;/strong> spürst.
Das mag an einer bestimmten Stelle innerhalb eines Psalms sein, nachdem du einen Psalm ganz gelesen hast oder am Ende der Gebetszeit.&lt;/li>
&lt;li>Deine Antwort kann in verschiedenstem bestehen, zum Beispiel im wörtlichen Wiederholen eines einzelnen Verses, indem du einen Vers in eigenen Worten ausdrückst, indem du Bedürfnisse, Sehnsüchte, Ängste vor Ihm ausbreitest.&lt;/li>
&lt;li>Nachdem du gesprochen hast, heb den Blick und schau Gott in die Augen, als ob er körperlich direkt vor dir oder neben dir wäre.
Wir sind an jedem Ort in Seine liebende und freudige Gegenwart eingehüllt und können ein Gespräch mit Ihm führen wie Abraham (siehe 1. Mose 18).
Wenn du eine Reaktion oder Antwort von Gott wahrnimmst, führe das Gespräch fort.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Lies &lt;strong>so viele&lt;/strong> Texte, wie &lt;strong>für dich gut möglich&lt;/strong> ist.
Jede Person hat ihr grundsätzliches Maß, und jeder von uns hat auch pro Tag und pro Tageszeit unterschiedlich viel Kraft.
&lt;ul>
&lt;li>Ich empfehle, pro Hore mindestens einen Psalm und den NT-Text zu lesen.&lt;/li>
&lt;li>&lt;strong>Lass dich nicht entmutigen&lt;/strong>, wenn du einzelne Texte oder eine ganze Gebetszeit aus Müdigkeit auslässt.
In zwei Wochen begegnen dir diese Texte wieder.
Nimm einfach die nächste Gebetszeit kindlich und dankbar aus Gottes Hand entgegen.
Gott freut sich unbändig über jede noch so kleine und noch so unbeholfene Hinwendung!&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>Wenn ihr die &lt;strong>Liturgie in Gemeinschaft&lt;/strong> betet, dann können euch womöglich folgende Ergänzungen helfen:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Lest die Psalmen abwechselnd&lt;/strong>.
Dadurch wird es leichter zu einem Gemeinschaftsgebet.
Dafür gibt es verschiedenste Herangehensweisen:
&lt;ol>
&lt;li>Teilt euch in &lt;strong>zwei Gruppen&lt;/strong> (A/B), die abwechselnd vorlesen werden.
Oder bestimmt einen Vorbetenden, und bei der Abwechslung betet der Rest der Gemeinschaft - oder die ganze Gemeinschaft antwortet inkl. der/dem Vorbetendem.&lt;/li>
&lt;li>Teilt die Texte in &lt;strong>Verspaare&lt;/strong> auf.
Der Münsterschwarzacher Psalter hat bereits Verspaare:
Die Mitte eines Verspaares ist durch ein Sternchen (*) gekennzeichnet.
Entsprechend bieten sich dabei folgende Aufteilungen an:
&lt;ol>
&lt;li>Ihr könnt entweder die Verspaare abwechselnd beten (so machen es die Benediktiner):
Gruppe A (oder Vorbetende/r) liest ein Verspaar, Gruppe B (oder alle) lesen das nächste Verspaar&lt;/li>
&lt;li>Oder Gruppe A / Vorbetende/r liest die erste Hälfte eines Verspaares (bis zum Sternchen) und Gruppe B / alle lesen die zweite Hälte des Paares.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>Sprecht euch vorher ab, wann ihr &lt;strong>Antwortzeiten&lt;/strong> einbauen wollt (siehe Punkt 4 in der vorherigen Liste).
Eine einfache Möglichkeit wäre zum Beispiel, dass nach jedem vollständig gelesenen Psalm und NT-Text Zeit ist, um Gott laut zu antworten.&lt;/li>
&lt;li>Lasst den &lt;strong>NT-Text von einer einzelnen Person&lt;/strong> vorlesen.&lt;/li>
&lt;/ol>
&lt;p>Ich wünsche Gottes reichen Segen beim Gebrauch Seines Wortes!&lt;/p></description></item><item><title>The Whole Universe Is His Pillow</title><link>https://jscheytt.github.io/p/the-whole-universe-is-his-pillow/</link><pubDate>Wed, 11 Oct 2023 20:43:51 +0200</pubDate><guid>https://jscheytt.github.io/p/the-whole-universe-is-his-pillow/</guid><description>&lt;p>In &lt;a class="link" href="https://www.biblegateway.com/passage/?search=Matthew&amp;#43;8%3A18-27&amp;amp;version=NIV" target="_blank" rel="noopener"
>Matthew 8:18-27&lt;/a> we see Jesus in a crowd.
Because of the multitudes, He decides to go to the other shore and tells His disciples to prepare their boat for departure.
In the midst of this hustle and bustle, a scribe approaches Jesus and expresses his willingness to follow Him wherever He goes.
Jesus does not rebuke the man, but He does tell him what he cannot expect if he really followed Him:&lt;/p>
&lt;blockquote>
&lt;p>Foxes have dens and birds have nests, but &lt;strong>the Son of Man has no place to lay his head.&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;p>A few moments later, Jesus and His disciples leave the shore.
And just sentences later, we read that the situation had changed dramatically:&lt;/p>
&lt;blockquote>
&lt;p>Suddenly a furious storm came up on the lake, so that the waves swept over the boat.
&lt;strong>But Jesus was sleeping.&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;p>There are only 4 verses between Jesus saying that He had no place to lay His head and then &lt;em>actually laying His head down&lt;/em> and sleeping completely relaxed in the middle of an extremely dangerous storm.
I believe this teaches us two things:&lt;/p>
&lt;p>First, Jesus has no &lt;strong>place&lt;/strong> to lay His head.
Instead, He has &lt;strong>Someone&lt;/strong> where He can relax, lean back, and sleep peacefully even in the most difficult circumstances.
He knows His Father well enough and has experienced His abundant love and protection to such an extent that He has no trouble falling asleep in the midst of the storm.&lt;/p>
&lt;p>Second, Jesus does not have a &lt;strong>single static&lt;/strong> place to lay His head.
Instead, He has &lt;strong>an entire universe&lt;/strong> that fells &amp;ldquo;homey&amp;rdquo; because the &lt;em>Father in the heavens&lt;/em> pervades even the farthest corners of all the galaxies.&lt;/p>
&lt;p>My prayer is that we would all learn to rest in the love of the Triune God, just as Jesus had learned (and apparently practiced routinely).&lt;/p></description></item><item><title>Lieder übersetzen: Warum hören wir einander nicht mehr zu?</title><link>https://jscheytt.github.io/p/lieder-%C3%BCbersetzen-warum-h%C3%B6ren-wir-einander-nicht-mehr-zu/</link><pubDate>Sun, 19 Mar 2023 10:54:57 +0100</pubDate><guid>https://jscheytt.github.io/p/lieder-%C3%BCbersetzen-warum-h%C3%B6ren-wir-einander-nicht-mehr-zu/</guid><description>&lt;p>&lt;em>Normalerweise schreibe ich meine Blogbeiträge auf Englisch, aber für dieses Thema bietet es sich deutlich mehr an, auf Deutsch zu schreiben.&lt;/em>&lt;/p>
&lt;p>Ich möchte über zwei Lieder schreiben, die für mich in ihrer ursprünglichen englischen Fassung geistlich wertvoll sind und bei denen die offizielle deutsche Übersetzung ein paar wenige, aber entscheidende Inhalte völlig entstellt hat.
Und ich möchte darüber schreiben, was das für mich an Mangel in unserer (auch unserer christlichen) Kultur offenbart, einander ernsthaft zuzuhören.&lt;/p>
&lt;h2 id="1-phil-wickham--battle-belongs">1) Phil Wickham — Battle Belongs
&lt;/h2>&lt;p>Der &lt;a class="link" href="https://youtu.be/johgSkNj3-A?t=58" target="_blank" rel="noopener"
>Chorus&lt;/a> fängt so an:&lt;/p>
&lt;blockquote>
&lt;p>And when I fight I fight on my knees&lt;br>
With my hands lifted high&lt;br>
Oh God, the &lt;strong>battle&lt;/strong> belongs to You&lt;/p>
&lt;/blockquote>
&lt;p>Die &lt;a class="link" href="https://youtu.be/WOBvZ5h0cFI?t=62" target="_blank" rel="noopener"
>deutsche Übersetzung&lt;/a> klingt so:&lt;/p>
&lt;blockquote>
&lt;p>Und wenn ich kämpf, dann auf meinen Knien&lt;br>
Heb die Hände zu Dir&lt;br>
Mein Gott, der &lt;strong>Sieg&lt;/strong> gehört Dir allein&lt;/p>
&lt;/blockquote>
&lt;p>&amp;ldquo;&lt;a class="link" href="https://www.dict.cc/?s=battle" target="_blank" rel="noopener"
>Battle&lt;/a>&amp;rdquo; bedeutet &amp;ldquo;Kampf&amp;rdquo; und &lt;strong>nicht&lt;/strong> &amp;ldquo;Sieg&amp;rdquo; — klarer kann ich es nicht ausdrücken.
Der Sieg ist das, was &lt;em>nach&lt;/em> dem Kampf kommt.
Ja, es ist wahr, dass wir Siege in jedem Kampf nur durch Gottes Gnade und Kraft erringen können.
Aber dieses Lied dreht sich ja eben gerade darum, dass ich nicht &lt;strong>erst dann&lt;/strong> Gott die Ehre ausspreche und mein Vertrauen auf ihn setze, wenn der &lt;strong>Kampf vorbei&lt;/strong> ist, sondern &lt;strong>gerade mitten im Kampf&lt;/strong>.&lt;/p>
&lt;p>Ich weiß, dass Übersetzen nicht einfach ist — diesen Blog normalerweise auf Englisch, also nicht in meiner Muttersprache zu schreiben, ist auch nicht immer leicht.
Und bei Liedern muss man auf viele Dinge zusätzlich achten:
Die Silbenanzahlen sollten aufeinander passen, damit keine Lücken oder Zusatznoten entstehen im Vergleich zur Originalmelodie, damit man das Lied leichter mitsingen kann, falls man es auch im Original kennt.
Auch die Betonungen von Wörtern müssen auf den Rhythmus der Melodie passen.&lt;/p>
&lt;p>Aber an dieser spezifischen Stelle, die noch dazu die &lt;strong>textlich zentralste Stelle des Liedes&lt;/strong> ist (ansonsten wäre sie nicht der Titel des Liedes), kann ich keinen einzigen Grund erkennen, warum man absichtlich den &lt;em>Inhalt des Liedes abändert&lt;/em>.
Die Silbenanzahl ist identisch, es wäre kein extremer Zungenbrecher, auch mit der Betonung gäbe es keine Probleme.&lt;/p>
&lt;h2 id="2-meredith-andrews--make-room">2) Meredith Andrews — Make Room
&lt;/h2>&lt;p>Ein kleineres Beispiel aus der &lt;a class="link" href="https://youtu.be/QxubPpU-iIA?t=145" target="_blank" rel="noopener"
>Bridge&lt;/a>, das für mich weniger schlimm ist, aber dennoch die gleichen Symptome aufweist:&lt;/p>
&lt;blockquote>
&lt;p>Shake up the ground of all my tradition&lt;br>
Break down the walls of all my religion&lt;br>
&lt;strong>Your way is better&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;p>Im &lt;a class="link" href="https://youtu.be/TlWcXMdovHg?t=193" target="_blank" rel="noopener"
>Deutschen&lt;/a> wird daraus:&lt;/p>
&lt;blockquote>
&lt;p>Reiß Mauern ein, die mich von Dir trennen&lt;br>
Brich alles auf, was Dich in mir eingrenzt&lt;br>
&lt;strong>Dein Plan ist größer&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;p>Ist Sein &lt;em>Weg&lt;/em> wirklich nur das, was Er &lt;em>plant&lt;/em>?
Beinhaltet Sein Weg nicht vielmehr auch &lt;em>Seine Art zu handeln und Seinen Charakter&lt;/em>?
Warum berauben wir den ursprünglichen Text seiner Bandbreite und Tiefe und verengen ihn auf das, was wir meinen verstanden zu haben?&lt;/p>
&lt;p>Auch hier sehe ich keinen musikalischen Grund, wegen dem die wörtliche Übersetzung &amp;ldquo;Dein Weg ist besser&amp;rdquo; deutlich schlechter wäre.&lt;/p>
&lt;h2 id="symptome-von-gegenseitiger-ignoranz">Symptome von gegenseitiger Ignoranz
&lt;/h2>&lt;p>Wenn wir Lieder aus anderen Sprachen in unsere eigene übersetzen, dann legen wir den Autoren dieser Lieder &lt;em>unsere Worte in den Mund&lt;/em>.
Warum fällt es uns offensichtlich so leicht, einfach über das hinwegzugehen, was die Autoren klar und deutlich in ihren Texten geschrieben haben?
Nehmen wir uns einfach nicht die Zeit den Text genau zu lesen und damit umzugehen?
Wollen wir einfach nur möglichst schnell ein schön klingendes Lied in unser Repertoire aufnehmen und uns (ganz wortwörtlich) &amp;ldquo;aneignen&amp;rdquo; statt zuerst die Worte des Liedes in der Tiefe &lt;em>zu uns selbst&lt;/em> reden zu lassen?&lt;/p>
&lt;p>Wenn wir das tun, dann ist klar, dass bei unserem Versuch Anbetungslieder zu übersetzen, letztlich nur eigene Lieder mit anderer Theologie und geklauter Melodie dabei herauskommen!
Ich empöre mich darüber.
Und zwar nicht zuallererst, weil ich sehr genau bin.&lt;/p>
&lt;p>Ich glaube, dass wir an vielen Stellen verlernt haben, einander wirklich ernsthaft zuzuhören.
Und dieser Mangel an &amp;ldquo;geöffneten Ohren des Herzens&amp;rdquo; wird niemals nur unsere Kommunikation untereinander als Menschen betreffen, sondern immer auch unsere Bereitschaft, Gott mit offenen Ohren und Herzen zuzuhören.
Ich bin überzeugt, dass es einen &amp;ldquo;besseren Weg&amp;rdquo; gibt.&lt;/p>
&lt;h2 id="wie-kehren-wir-davon-um">Wie kehren wir davon um?
&lt;/h2>&lt;p>Dieser Weg besteht nicht zuallererst darin, dass wir sklavisch jedes Anbetungslied so wortwörtlich wie nur irgend möglich übersetzen, selbst wenn man es dann nicht mehr singen kann.
Stattdessen liegt meiner Ansicht nach die Lösung darin von Jesus zu lernen.
Wie war er mit Menschen im Gespräch?
Auf welche Weise hat Er ihnen zugehört hat, ihnen geantwortet, ihnen Fragen gestellt?&lt;/p>
&lt;p>Wenn wir das lernen, dann lernen wir ganz generell einen anderen Umgang miteinander, einen Umgang, der dem Reich Gottes unter uns entspricht.
Und im natürlichsten Fall befähigt uns das, wie wir uns Jesus zuwenden, Ihm zuhören und von Ihm lernen dazu, auch anderen Gehör zu schenken und ihre Worte ernst zu nehmen.&lt;/p>
&lt;p>Lasst mich zwei Beispiele dafür aufzeigen, an denen wir von Ihm, dem Meister, lernen können:&lt;/p>
&lt;h2 id="a-jesus-im-erbstreit">A) Jesus im Erbstreit
&lt;/h2>&lt;p>In Lukas 12,13-15 (NGÜ):&lt;/p>
&lt;blockquote>
&lt;p>Einer aus der Menge bat Jesus: »Meister, sag doch meinem Bruder, er soll das väterliche Erbe mit mir teilen!«&lt;br>
Jesus entgegnete ihm: »Lieber Mann, wer hat mich denn zum Richter über euch eingesetzt oder zum Vermittler in euren Erbangelegenheiten?«&lt;br>
Dann wandte er sich an alle und sagte: »Nehmt euch in Acht! Hütet euch vor aller Habgier! Denn das Leben eines Menschen hängt nicht von seinem Wohlstand ab.«&lt;/p>
&lt;/blockquote>
&lt;p>Jesus hört genau, was der Mann sagt.
Aber Er hört auch &lt;em>mehr als nur das&lt;/em>, was der Mann sagt.
Dass Jesus direkt nach Seiner Antwort an den Mann zur Menge über Habgier spricht, ist nicht einfach ein geschickter rhetorischer Move, sondern Jesus weiß genau, dass sowohl bei dem Mann als auch bei vielen in der Menge (und auch wir sind darunter!) Habgier in den Herzen herrscht.
Deshalb geht Er nicht einfach nur oberflächlich auf das ein, was Ihm der Mann sagt.
Er antwortet vielmehr &lt;em>zutiefst&lt;/em> auf der Ebene, auf welcher der Mann &lt;em>wirklich&lt;/em> eine Antwort braucht, damit nicht länger der Neid sein Leben bestimmt!&lt;/p>
&lt;h2 id="b-jesus-und-martha">B) Jesus und Martha
&lt;/h2>&lt;p>In Lukas 10,40ff (ELB):&lt;/p>
&lt;blockquote>
&lt;p>Marta aber war sehr beschäftigt mit vielem Dienen; sie trat aber hinzu und sprach: »Herr, kümmert es dich nicht, dass meine Schwester mich allein gelassen hat zu dienen? Sage ihr doch, dass sie mir helfe!«&lt;br>
Jesus aber antwortete und sprach zu ihr: »Marta, Marta! Du bist besorgt und beunruhigt um viele Dinge; eins aber ist nötig.
Maria aber hat das gute Teil erwählt, das nicht von ihr genommen werden wird.«&lt;/p>
&lt;/blockquote>
&lt;p>Das Muster ist das gleiche:
Jesus hört die Worte und nimmt darüber hinaus die ganze Person wahr — und Er spricht zur ganzen Person.&lt;/p>
&lt;p>Lasst uns Jesus auf die Art und Weise dieser Menschen suchen (also ganz ehrlich und unvollkommen) und lernen, Ihm wirklich zuzuhören und zu gehorchen.
Und wenn wir Ihn selber so erlebt haben und &lt;em>beständig&lt;/em> erleben (wie konnten wir so blind sein zu denken, wir könnten auch nur &lt;em>einen&lt;/em> Handgriff gut tun, ohne uns dabei Seiner kostbaren Gegenwart bewusst zu sein!), dann wird unser Umgang miteinander automatisch ein anderer werden, in dem sowohl die Worte als auch der Mensch dahinter für uns lebendig und nah und wertvoll werden.
Und wenn wir dann sprechen, dann gilt uns die &lt;a class="link" href="https://www.bibleserver.com/ELB.HFA.NG%C3%9C/Johannes7%2C38" target="_blank" rel="noopener"
>Zusage von Jesus selbst&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>Wenn jemand an Mich glaubt, werden aus seinem Inneren, wie es in der Schrift heißt, Ströme von lebendigem Wasser fließen.&lt;/p>
&lt;/blockquote></description></item><item><title>Jesus Is My Certificate</title><link>https://jscheytt.github.io/p/jesus-is-my-certificate/</link><pubDate>Sun, 29 Jan 2023 17:35:37 +0100</pubDate><guid>https://jscheytt.github.io/p/jesus-is-my-certificate/</guid><description>&lt;p>One area I struggle with a lot is the tendency to seek my &lt;em>righteousness&lt;/em> outside of Jesus.
I try to justify my existence or declare myself good by trying to do good or impressive things or by trying to be someone other than I am.
(The Greek word &lt;em>dikaiosyne&lt;/em> in the New Testament is commonly translated with &lt;em>righteousness&lt;/em> and means precisely this: What it is about a person that makes them &amp;ldquo;right&amp;rdquo; or &amp;ldquo;good&amp;rdquo;?)&lt;/p>
&lt;p>When Jesus entered the scene of human history, He announced the availability of the Kingdom of God to all humans, especially the ones we normally think are completely out of luck in this life (including me).
This means we can step into a different kind of life of eternal quality (He is even so bold as to call it &lt;em>The&lt;/em> Life), and we can do that here and now.
And part of that eternal reality of &amp;ldquo;God always present with us&amp;rdquo; is that we no longer have to try justifying our lives on our own.&lt;/p>
&lt;p>Recently, I came upon a wonderful metaphor or analogy for how Jesus justifies us:
&lt;strong>SSL Certificates&lt;/strong>.&lt;/p>
&lt;p>You may remember that many websites run on HTTPS.
(The &amp;ldquo;S&amp;rdquo; in HTTPS stands for SSL (or rather TLS, the more current version of SSL).)
If you check the address bar in your browser, it should show a padlock 🔐 symbol.
That means the communication with a website (e.g. this blog) is secured and the information you send to a website (e.g. to this blog which is hosted on GitHub) is only readable by you and the receiver (and no third party, possibly malicious, in between).&lt;/p>
&lt;p>Part of this secure communication are &lt;em>SSL certificates&lt;/em>.
They basically state that a &lt;em>server&lt;/em> hosting a certain website on a &lt;em>domain&lt;/em> (e.g. on the domain &lt;code>jscheytt.github.io&lt;/code>) is really the &lt;em>owner&lt;/em> of that domain.
To establish a certain level of trust, these certificates are &lt;em>signed&lt;/em> by a &lt;em>Certificate Authority&lt;/em> (CA) or multiple CAs.
These are legal entities that basically everybody on the internet has agreed upon to be trustworthy.&lt;/p>
&lt;p>You can of course easily create a certificate and &lt;em>sign it yourself&lt;/em>.
But if you try to access a website secured by such a self-signed certificate, you are going to see lots of warnings (because browsers don&amp;rsquo;t trust such certificates by default — and you should not either!).
This also applies to our personal &lt;em>dikaiosyne&lt;/em>:
We simply cannot justify ourselves.
We need someone external, someone &lt;em>who is not us&lt;/em> to approve of us and call us good.
Just like the saying goes in &lt;a class="link" href="https://www.bibleserver.com/ESV.NIV/2%20Corinthians10%3A18" target="_blank" rel="noopener"
>2 Corinthians 10&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>For it is not the one who commends himself who is approved, but the one whom the Lord commends.&lt;/p>
&lt;/blockquote>
&lt;p>Every SSL certificate is only valid for a certain &lt;em>domain&lt;/em> or range of domains.
Short recap:
A domain consists of multiple strings (&amp;ldquo;elements&amp;rdquo;) that are delimited by dots.
The further to the right an element stands, the more importance it has.
The rightmost element is the Top-Level Domain (TLD), e.g. &lt;code>.com&lt;/code>.
Next come the second- and third-level domains.
(Everything below the second level is colloquially called a &amp;ldquo;subdomain&amp;rdquo;.)
If you wanted to secure this website, you could either create a certificate for &lt;code>jscheytt.github.io&lt;/code> or a so-called &lt;em>wildcard certificate&lt;/em> for &lt;code>*.github.io&lt;/code>.
With the latter you could secure all domains running as direct subdomains of &lt;code>github.io&lt;/code>.&lt;/p>
&lt;p>Now if I try to justify my life on my own (e.g. by relying on my own efforts), I am running my life on &lt;em>my own domain&lt;/em> (e.g. &lt;code>josia-schey.tt&lt;/code>), basically my own kingdom.
I can try as hard as I want to get someone to sign my SSL certificate, and maybe sometimes someone might even approve of me.
But in the end the best I can achieve is an untrustworthy self-signed certificate for my existence.&lt;/p>
&lt;p>However, what Jesus achieved through His life, death on the cross, and resurrection is a &lt;strong>wildcard certificate&lt;/strong> for &lt;code>*.eternal.life&lt;/code>.
He as the Highest Authority in the universe &lt;strong>signed this certificate with His blood&lt;/strong>.
And He invites everybody to &lt;strong>host their lives under His domain&lt;/strong>.
Everybody who places their trust in Him, dies to themselves, and chooses to live in His loving dominion, will have a valid SSL certificate that cannot be corrupted and will never expire.
They just have give up their life (or rather half-life) which they have tried living so far on their own domain (e.g. &lt;code>josia-schey.tt&lt;/code>) and choose to live instead under e.g. &lt;code>josia-scheytt.eternal.life&lt;/code>.&lt;/p>
&lt;p>There is another neat small catch implied here:
I recently learned that a wildcard certificate is &lt;em>only valid for one level of depth&lt;/em>.
You cannot secure domains with it that sit deeper than the asterisk.
That is, if I have a wildcard certificate for &lt;code>*.eternal.life&lt;/code>, it is only valid for domains like &lt;code>josia-scheytt.eternal.life&lt;/code> but not for any domain like &lt;code>my-personal-kingdom.josia-scheytt.eternal.life&lt;/code> or &lt;code>the-things-from-my-old-life-i-still-try-to-keep.josia-scheytt.eternal.life&lt;/code>.
(To do that I would need another wildcard certificate for &lt;code>*.josia-scheytt.eternal.life&lt;/code>.)
When I submit to Him and let Him live His life through me, there will be no room left for establishing my own kingdom, trying to get things or other people under my control.
God really wanted to have a big family of brothers and sisters all on eye level, and with Him at the center and as the Head — and praise Him for getting it!&lt;/p></description></item><item><title>Short Notes on the Song of Solomon</title><link>https://jscheytt.github.io/p/short-notes-on-the-song-of-solomon/</link><pubDate>Wed, 28 Dec 2022 11:29:10 +0100</pubDate><guid>https://jscheytt.github.io/p/short-notes-on-the-song-of-solomon/</guid><description>&lt;p>While listening to the Song of Songs recently, the following things stuck with me:&lt;/p>
&lt;p>The Bridegroom marvels at the beauty of the Bride more than the Bride marvels at the beauty of the Bridegroom.&lt;/p>
&lt;p>In chapter 4, the bridegroom praises the beauty of His bride for half the chapter.
At the end of chapter 5, she in turn marvels at His beauty and strength.
In chapter 6, the Bridegroom again speaks of her beauty, sometimes using similar or identical phrases as in chapter 4.
And in chapter 7 the praise from His mouth increases and intensifies, partially even beyond the intimate circle of the two.&lt;/p>
&lt;p>For me, this unfolds the following:
Jesus knows our weakness and how much we depend on His affirmation.
His constant and recurring attention is the foundation of our lives.
Telling us the same thing multiple times does not tire Him.
His love for us is unbroken, and He rejoices in every small step we take in devotion to Him.&lt;/p>
&lt;p>And the more steps we take toward Him and with Him, the more we grow in love for Him.
Equally, the more we grow in love for Him, the more He can lavish His love upon us.&lt;/p>
&lt;p>But in &lt;a class="link" href="https://www.bibleserver.com/ELB.HFA/Hoheslied7%2C1" target="_blank" rel="noopener"
>chapter 7&lt;/a> we see even more:&lt;/p>
&lt;blockquote>
&lt;p>👏 Turn, Sulamith, turn in circles as you dance, for we want to admire you!&lt;br>
😄 What is there to see when I dance the dance of Mahanajim?&lt;/p>
&lt;/blockquote>
&lt;p>The beauty of the bride is not just for the Groom.
Those outside the community get to see her beauty as well.
&amp;ldquo;Creation waits in eager expectation for the children of God to be revealed.&amp;rdquo; (&lt;a class="link" href="https://www.bibleserver.com/ESV.NIV/Romans8%3A19" target="_blank" rel="noopener"
>Romans 8:19&lt;/a>)
And Jesus delights in this - the beauty of His bride displayed is glory for Him, too!&lt;/p>
&lt;p>But this beauty is not made visible to the public by the bride &lt;em>aiming&lt;/em> at it — neither at having the beauty for her own sake nor at being seen.
She asks: &amp;ldquo;What&amp;rsquo;s the matter? I&amp;rsquo;m just dancing for joy as usual!&amp;rdquo;
This is the beauty of life in the Kingdom of God:
We become so rooted in God and in His love for us that real beauty and redeemed joy (even with dancing) grow naturally out of it.&lt;/p></description></item><item><title>Zechariah — Fasting and Eating for God</title><link>https://jscheytt.github.io/p/zechariah-fasting-and-eating-for-god/</link><pubDate>Mon, 12 Dec 2022 20:28:12 +0100</pubDate><guid>https://jscheytt.github.io/p/zechariah-fasting-and-eating-for-god/</guid><description>&lt;p>I recently heard a sermon about fasting and I was reminded of a dialogue between some Israelites and God in Zechariah 7 and 8:&lt;/p>
&lt;p>A group of Israelites have returned from exile in Babylon a little while ago.
During the more than 70 years of exile, they developed a habit of holding fasting days on specific months — a fasting of lament about the destruction of Jerusalem.
They ask if they should continue this practice in light of the ongoing rebuilding of Jerusalem and the temple.
&lt;a class="link" href="https://www.bibleserver.com/ESV.NIV/Zechariah7%3A5-6" target="_blank" rel="noopener"
>The answer God gives&lt;/a> is highly instructive about not just fasting but about our lives as a whole:&lt;/p>
&lt;blockquote>
&lt;p>When you fasted and mourned in the fifth month and in the seventh, for these seventy years, &lt;strong>was it for me that you fasted&lt;/strong>?&lt;br>
 And when you eat and when you drink, &lt;strong>do you not eat for yourselves and drink for yourselves&lt;/strong>?&lt;/p>
&lt;/blockquote>
&lt;h2 id="fasting-and-eating-for-whom">Fasting and Eating For Whom?
&lt;/h2>&lt;p>There seems to be a way of fasting where you are not fasting for God.
(Let&amp;rsquo;s keep in mind: Fasting is not the mere outward act of abstaining from food, it&amp;rsquo;s abstinence from what normally physically satifies me so I am more receptive for God nourishing me directly.)&lt;/p>
&lt;p>But not only is there a way of &lt;strong>fasting without God&lt;/strong>, but there is also a way of &lt;strong>eating without God&lt;/strong>.
So you can do &lt;em>everything&lt;/em> in your daily life either with or without God — no matter if one activity seems &amp;ldquo;more holy&amp;rdquo; on the outside than another.&lt;/p>
&lt;p>This is crucial:
We always have a choice of either doing things &lt;em>for ourselves&lt;/em> — i.e. doing things alone, doing things just the way we want, trusting in our own strength — or &lt;em>for God&lt;/em>.
What is so wonderful about doing things for God is that we are not first and foremost doing something &lt;em>for&lt;/em> Him (although that is certainly part of it) — it&amp;rsquo;s about doing everything &lt;strong>with Him&lt;/strong> and in harmony or symphony with Him.&lt;/p>
&lt;p>That is just another way of stating what the New Testament writers describe as:&lt;/p>
&lt;blockquote>
&lt;p>And whatever you do, in word or deed, &lt;strong>do everything in the name of the Lord Jesus&lt;/strong>, giving thanks to God the Father through him.&lt;/p>
&lt;/blockquote>
&lt;h2 id="redeeming-our-grief-and-contortions">Redeeming Our Grief and Contortions
&lt;/h2>&lt;p>God could have left it there, saying &amp;ldquo;First learn living in the ways of My goodness, then we can talk about fasting&amp;rdquo; (see the rest of Zechariah 7 after the top verse).
But he does not simply cut off the false practice!
In &lt;a class="link" href="https://www.bibleserver.com/ESV.NIV/Zechariah8%3A19" target="_blank" rel="noopener"
>chapter 8&lt;/a> he revisits the topic and says:&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>The fast&lt;/strong> of the fourth, fifth, seventh, and tenth month shall be to the house of Judah &lt;strong>seasons of joy and gladness and cheerful feasts&lt;/strong>.
Therefore love truth and peace!&lt;/p>
&lt;/blockquote>
&lt;p>When we return to God, all our sorrow and lament and even all our mislead religious efforts of trying to please Him are redeemed.
He takes it all — all our authentic grief and hurt but also all our perversions of what is good — and turns it into feasts of joy!&lt;/p></description></item><item><title>Music</title><link>https://jscheytt.github.io/music/</link><pubDate>Sun, 13 Nov 2022 18:04:28 +0100</pubDate><guid>https://jscheytt.github.io/music/</guid><description>&lt;p>I play keys and drums (and a bit of bass and ukulele), mostly in church.
I also occassionally write songs, sometimes together with others (e.g. in church or in my small group).
My songs are almost exclusively in German.&lt;/p>
&lt;p>The following table is an inventory of those songs that I consider shareable with a larger audience:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Title&lt;/th>
&lt;th>Sheet&lt;/th>
&lt;th>Audios&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Bis an den Himmel (Psalm 36)&lt;/td>
&lt;td>&lt;a class="link" href="https://docs.google.com/document/d/1vyg2aqFltNL4eDSmRCfpqqitfg6y4n0YhrPNrAjLxQQ/edit?usp=share_link" target="_blank" rel="noopener"
>Google Doc in E&lt;/a>&lt;/td>
&lt;td>&lt;a class="link" href="https://drive.google.com/file/d/1m7UuatsP9pPZ-aFwFQpN9nMntWCnOsnh/view?usp=share_link" target="_blank" rel="noopener"
>Demo in F/G&lt;/a>, &lt;a class="link" href="https://www.youtube.com/watch?v=Y4AEU2JQsXw&amp;amp;t=1848s" target="_blank" rel="noopener"
>Live in F/G&lt;/a>, &lt;a class="link" href="https://www.youtube.com/watch?v=7togaxjUEYklink_placeholdert=1444s" target="_blank" rel="noopener"
>Live in E&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Singt dem Herrn ein neues Lied (Psalm 96)&lt;/td>
&lt;td>&lt;a class="link" href="https://docs.google.com/document/d/1u-Y7P3u5rtYWSuvOXXjsUGOqFXo3GV0eTQIzpOBj7hI/edit?usp=share_link" target="_blank" rel="noopener"
>Google Doc in E&lt;/a>&lt;/td>
&lt;td>&lt;a class="link" href="https://drive.google.com/file/d/1UrdADSZrAl1Xi2xuWLb5mDOkXlTpGooN/view?usp=share_link" target="_blank" rel="noopener"
>Demo in E&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Ich sage Ja&lt;/td>
&lt;td>&lt;a class="link" href="https://docs.google.com/document/d/1bKDPCm1Rf2TP3WG3T_UqRgZlJBAfW7WeI2IfKXW3OB0/edit?usp=share_link" target="_blank" rel="noopener"
>Google Doc in E&lt;/a>&lt;/td>
&lt;td>&lt;a class="link" href="https://drive.google.com/file/d/12dhqfpejJrK_DdiOdLs9DYl4dFWDdwv8/view?usp=share_link" target="_blank" rel="noopener"
>Demo in E&lt;/a>, &lt;a class="link" href="https://www.youtube.com/watch?v=z5h6nTA034o&amp;amp;t=2060s" target="_blank" rel="noopener"
>Live in E&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Offenbare mir die Wunder (Psalm 119)&lt;/td>
&lt;td>&lt;a class="link" href="https://docs.google.com/document/d/1_iSwzNoUgVRHZdd4xYYk_znuy1ai_zK74yqjq4rSm6w/edit?usp=share_link" target="_blank" rel="noopener"
>Google Doc in E&lt;/a>&lt;/td>
&lt;td>&lt;a class="link" href="https://drive.google.com/file/d/12Ii32KXemec5d8WG5NBPuu-M5dY7wRtH/view?usp=share_link" target="_blank" rel="noopener"
>Demo in E&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Aus Ihm (Röm11,33ff)&lt;/td>
&lt;td>&lt;a class="link" href="https://docs.google.com/document/d/13I3hvKmcrALmZ-5uLEjeq4F7daMOG_DRBjr4gZuSbQY/edit?usp=sharing" target="_blank" rel="noopener"
>Google Doc in F&lt;/a>&lt;/td>
&lt;td>&lt;a class="link" href="https://drive.google.com/file/d/14l7laBP_fk4QMVR42TpK-jj2fpFFx3Ve/view?usp=sharing" target="_blank" rel="noopener"
>Demo in F&lt;/a>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;blockquote>
&lt;p>☝️ Tip:
&lt;strong>Export a PDF&lt;/strong> from a Google Doc by using File &amp;gt; Download &amp;gt; PDF.
(In German: Datei &amp;gt; Herunterladen &amp;gt; PDF-Datei.)&lt;/p>
&lt;/blockquote></description></item><item><title>I Install Washing Machines (My Latest Job Metaphor)</title><link>https://jscheytt.github.io/p/i-install-washing-machines-my-latest-job-metaphor/</link><pubDate>Tue, 04 Oct 2022 14:30:29 +0100</pubDate><guid>https://jscheytt.github.io/p/i-install-washing-machines-my-latest-job-metaphor/</guid><description>&lt;h2 id="so-what-exactly-do-you-do-for-a-living">So What Exactly Do You Do For A Living?
&lt;/h2>&lt;p>Whenever we meet new people (or good friends, it sometimes doesn&amp;rsquo;t make a big difference 😄), the above question will come up.
My wife (who is a doctor and has understably fewer problems explaining her job) is always excited to get yet another chance to &amp;ldquo;finally understand&amp;rdquo; what it is that I am doing at work as a &lt;strong>Cloud Automation Engineer&lt;/strong>.&lt;/p>
&lt;p>That is the fancy title we at &lt;a class="link" href="https://flowable.wd3.myworkdayjobs.com/de-DE/mimacom/details/Cloud-Automation-Engineer--m-f-d-_JR100074?q=cloud%20automation%20engineer" target="_blank" rel="noopener"
>mimacom&lt;/a> give to people working in &lt;em>Site Reliability Engineering&lt;/em> and &lt;em>DevOps Engineering&lt;/em>, and I have grown to really like it because it starts to convey a lot of meaning right away.
Unfortunately, it&amp;rsquo;s also long and not particularly established (yet).&lt;/p>
&lt;p>In this blog post I will explore one analogy that came to my mind recently.
I have not tried it out in the wild yet, but I am fascinated by the similarities between deploying washing machines and deploying web applications.&lt;/p>
&lt;h2 id="my-latest-metaphor">My Latest Metaphor
&lt;/h2>&lt;p>Let&amp;rsquo;s say I work in a company that builds, delivers, and maintains washing machines for laundromats.
The colleagues in my team whom I work most closely with design new washing machine models.
You could say they design or &amp;ldquo;develop&amp;rdquo; the washing machines.&lt;/p>
&lt;p>They do this very frequently — even so frequently, that they tweak the current model mostly on a daily basis.
Whenever they change the model, we want to bring these improvements to our customers as quickly as possible.&lt;/p>
&lt;p>And here begins my responsibility as Laundry Automation Engineer™️.&lt;/p>
&lt;h3 id="delivering-new-washing-machines">Delivering New Washing Machines
&lt;/h3>&lt;p>There are several steps that now need to happen in succession until the new model lands at our customers (the laundromats).
We also call this a &lt;strong>pipeline&lt;/strong>:&lt;/p>
&lt;ol>
&lt;li>The designers/developers wrote some simulations to check if the models they produce really work as they should.
I run these simulations on a computer.&lt;/li>
&lt;li>I send the model to the factory to let some construction robots assemble it.&lt;/li>
&lt;li>I take the assembled model, plug it into current and water and run some standard washing programs and test for potential leaks and similar problems.&lt;/li>
&lt;li>I package up the assembled model (together with its necessary accessories) and put it into a van.&lt;/li>
&lt;li>And finally, I drive the new washing machine to the customer, connect the new washing machine, disconnect the old one and dispose of it.&lt;/li>
&lt;/ol>
&lt;p>But a good Laundry Automation Engineer™️ will normally not do any of these steps above themselves.
Instead, he or she will build robots to do it for them.
Robots are a lot more reliable, faster, and cheaper when it comes to repetitive tasks.&lt;/p>
&lt;p>So, in short:
&lt;strong>I build robots that automate all the above steps.&lt;/strong>&lt;/p>
&lt;p>And if there is an error during any of the above steps, the pipeline for the current model change will stop (so we don&amp;rsquo;t deliver broken machines).
I will then look what caused the error and fix it.&lt;/p>
&lt;p>Let&amp;rsquo;s zoom in on a few details around the last step when the robots install the new machines:&lt;/p>
&lt;h3 id="zero-downtime">Zero-Downtime
&lt;/h3>&lt;p>Our laundromats are very highly frequented, basically around the clock, even on weekends.
People come and go all the time.
They put their clothes into a machine, select a program, pay with coins or by card, set it off running, and return when their laundry is supposed to be ready.&lt;/p>
&lt;p>For simplicity, I will now switch back to me as the one doing the actual work (instead of the robots).
Whenever I install a new washing machine to replace a currently running one, I have to be very careful:
The people running the laundromat want to have as few interruptions as possible so that people can start washing programs all the time.
They know that if they have to many interruptions, potential customers will get annoyed because a queue will form, and if they have to wait for too long they will go elsewhere.&lt;/p>
&lt;p>So normally, I will install the new washing machine first (connect to current and water), mark the old machine as &amp;ldquo;stale&amp;rdquo; (so customers can only get their laundry from it but not start any new programs), then disconnect the old one.
This does introduce a little bit of energy and water overhead for the laundromat, but they happily pay that price.
And good for me that in reality I have robots managing all this for me.&lt;/p>
&lt;h2 id="behind-the-scenes-a-glossary">Behind The Scenes: A Glossary
&lt;/h2>&lt;dl>
&lt;dt>Washing Machine:&lt;/dt>
&lt;dd>A web application that communicates over HTTP.
It receives requests (dirty laundry and some program parameters) and delivers responses (clean laundry in the happy path).&lt;/dd>
&lt;dt>Laundromat:&lt;/dt>
&lt;dd>A company that makes most of its business value through running web applications and processing data in a value-adding way.&lt;/dd>
&lt;dt>Designer/Developer:&lt;/dt>
&lt;dd>An application developer writing code in a programming language.&lt;/dd>
&lt;dt>Bringing Improvements To The Customer Asap:&lt;/dt>
&lt;dd>We call this Continuous Delivery or Continuous Deployment.&lt;/dd>
&lt;dt>Laundry Automation Engineer:&lt;/dt>
&lt;dd>Just made this up. This would be the Cloud Automation Engineer / DevOps Engineer.&lt;/dd>
&lt;dt>Pipeline:&lt;/dt>
&lt;dd>The above example describes a Continuous Integration pipeline that also deploys at the end.&lt;/dd>
&lt;dt>Pipeline Step 1:&lt;/dt>
&lt;dd>This step could map to linting, unit testing, and static code analysis.&lt;/dd>
&lt;dt>Pipeline Step 2:&lt;/dt>
&lt;dd>This is a &amp;ldquo;build&amp;rdquo; or &amp;ldquo;compile&amp;rdquo; step.&lt;/dd>
&lt;dt>Pipeline Step 3:&lt;/dt>
&lt;dd>This step could map to integration testing, end-to-end-testing, fuzzying, and security testing of sorts.&lt;/dd>
&lt;dt>Pipeline Step 4:&lt;/dt>
&lt;dd>This is a &amp;ldquo;container image build&amp;rdquo; step.&lt;/dd>
&lt;dt>Pipeline Step 5:&lt;/dt>
&lt;dd>This is a &amp;ldquo;deploy&amp;rdquo; or &amp;ldquo;release&amp;rdquo; step.&lt;/dd>
&lt;dt>Robot:&lt;/dt>
&lt;dd>A script with prescribed steps which is executed automatically whenever a new change is published.&lt;/dd>
&lt;dt>Zero-Downtime:&lt;/dt>
&lt;dd>This is just a rough description of how I understand the default &lt;code>Deployment.spec.strategy.type=RollingUpdate&lt;/code>.
I think it&amp;rsquo;s not perfect but still fits good because in both situations you have the (somewhat conflicting) unbroken, continuous streams of requests/people and electricity.&lt;/dd>
&lt;/dl></description></item><item><title>The Ten Commandments — An Invitation Into Life Itself</title><link>https://jscheytt.github.io/p/the-ten-commandments-an-invitation-into-life-itself/</link><pubDate>Sun, 18 Sep 2022 18:28:05 +0200</pubDate><guid>https://jscheytt.github.io/p/the-ten-commandments-an-invitation-into-life-itself/</guid><description>&lt;p>&lt;em>This is the second part of a series about &lt;a class="link" href="https://jscheytt.github.io/p/the-beauty-of-the-law/" >The Beauty of the Law&lt;/a>.&lt;/em>&lt;/p>
&lt;p>What is &lt;em>the Law&lt;/em> in the Bible?
In a general sense, the Hebrew word &amp;ldquo;Torah&amp;rdquo; means &amp;ldquo;teaching&amp;rdquo; or &amp;ldquo;instruction&amp;rdquo;.
This word often refers to the &lt;em>Pentateuch&lt;/em>, the first five books of the Old Testament.
In a stricter sense, the Law is just the roughly 600 commandments in these five books.
(In Hebrew these are called the &amp;ldquo;Mitzwot&amp;rdquo;.)&lt;/p>
&lt;p>In &lt;a class="link" href="https://www.bibleserver.com/ESV.NIRV/Exodus20" target="_blank" rel="noopener"
>Exodus 20&lt;/a> we read the beginning of these commandments, and it is precisely here that we find the famous &lt;strong>Ten Commandments&lt;/strong>.
The previous part of this series showed how everything in the Law is not only a call to action but also a revelation of God&amp;rsquo;s character.
This part of the series will simply elaborate further on that, this time looking into the Ten Commandments.&lt;/p>
&lt;blockquote>
&lt;p>&lt;em>Quotation blocks in this article &lt;strong>with quotes&lt;/strong> are from the Bible, quotation blocks &lt;strong>without quotes&lt;/strong> are my interpretation.&lt;/em>&lt;/p>
&lt;/blockquote>
&lt;h2 id="the-setting">The Setting
&lt;/h2>&lt;p>Before we dive into the precise commandments, let&amp;rsquo;s take a few moments to picture the scene:&lt;/p>
&lt;p>Israel has lived many hundreds of years in Egypt, first as free people, then at the end as slaves because they thrived too much.
God then calls His servant Moses to liberate His people.
He leads the whole nation out among powerful signs, demonstrating His power and love for Israel.
The biggest of these signs was when God rescued Israel by parting the Red Sea and leading them through it unscathed while their enemies drowned wholesale.&lt;/p>
&lt;p>Having rescued these people, He now calls them into the desert.
Moses brings them to Mount Sinai so they can encounter God because He wants to &lt;strong>reveal Himself to every single Israelite personally&lt;/strong> — not just to Moses!&lt;/p>
&lt;p>The Israelites prepare for three days, purifying themselves.
The encounter at the third day is radical and overwhelming:
The mountain is on fire, dark clouds surround it, a trumpet blows ever louder and louder.
They cannot see the Holy, Invisible God, but they hear His voice, saying:&lt;/p>
&lt;h2 id="i-am-the-lord-your-god">I Am The Lord Your God
&lt;/h2>&lt;blockquote>
&lt;p>&amp;ldquo;I am the Lord your God.
I brought you out of Egypt. That is the land where you were slaves.&amp;rdquo;&lt;/p>
&lt;/blockquote>
&lt;p>This is how God addresses His beloved people.
This is what He first says to Israel, the nation with whom He wants to enter into a marriage-like covenant.
He does not start by commanding anything.
His first words answer the questions &amp;ldquo;Who am I?&amp;rdquo; and &amp;ldquo;Who are you &lt;em>in relation to Me&lt;/em>?&amp;rdquo;&lt;/p>
&lt;p>I think this is more important than we often recognize.
We humans are so often confused about who we are.
We need someone outside of ourselves to tell us who we are, to speak identity into our lives so that we can become who we were always meant to be.
We see this &lt;a class="link" href="https://www.bibleserver.com/ESV.NIRV/Matthew16%3A18" target="_blank" rel="noopener"
>with Peter where Jesus tells him&lt;/a> that he is a rock upon whom He will build His church.&lt;/p>
&lt;p>God says that He is &amp;ldquo;the Lord your God&amp;rdquo;.
&amp;ldquo;Lord&amp;rdquo;, in this instance, is the typical rephrasing &amp;ldquo;Adonai&amp;rdquo; instead of the &amp;ldquo;Yahweh&amp;rdquo; name.
And although &amp;ldquo;Yahweh&amp;rdquo; means &amp;ldquo;I am&amp;rdquo;, I want to talk about &lt;strong>lords&lt;/strong> for a moment:&lt;/p>
&lt;p>In the Old Testament language, being a slave to a master or lord did not only mean &amp;ldquo;working for someone&amp;rdquo;.
It also included &lt;strong>&amp;ldquo;belonging to someone&amp;rdquo;&lt;/strong>.
If God says that He is the Lord then we are His slaves and we &lt;strong>belong to Him&lt;/strong>.
But I think this extends even further:
Not only do we belong to Him (because He liberated us from the slavery of sin), but &lt;strong>He&lt;/strong> also belongs &lt;strong>to us&lt;/strong>.&lt;/p>
&lt;p>This is not what we necessarily see &lt;em>precisely&lt;/em> in this part of scripture, but read the prophets and it&amp;rsquo;s all over the place:
God entered into a marriage covenant with Israel at Mount Sinai.
He tied Himself to this group of people, and in a marriage both spouses &lt;strong>possess each other&lt;/strong>.
They have committed to each other for a lifetime and everything either does will affect the other, both for good and for bad.&lt;/p>
&lt;p>Let this sink in:
The Eternal God who made the universe lowers Himself to talk to His creation, those shaky bones and Holy Breath which He formed into humans, and deeply desires to &lt;strong>become one&lt;/strong> with them.
He offers up Himself to these small beings He created in His likeness, telling them &amp;ldquo;You &lt;strong>possess&lt;/strong> Me, and I possess you.&amp;rdquo;&lt;/p>
&lt;h3 id="i-brought-you-out-of-slavery">I Brought You Out Of Slavery
&lt;/h3>&lt;blockquote>
&lt;p>You were not born in freedom.
You were living under the slavery of sin — remember this.&lt;/p>
&lt;p>You have not liberated yourself from this slavery on your own.
It was not your politicians (Moses), your money, your connections that saved you from eternal slavery.
It was I who rescued you — so you could become Mine and I could become yours!&lt;/p>
&lt;p>Remember Egypt and the signs and miracles with which I lead you out from there.
This is how much you are worth to Me!&lt;/p>
&lt;/blockquote>
&lt;h2 id="you-will-have-no-other-gods-beside-me">You Will Have No Other Gods Beside Me
&lt;/h2>&lt;blockquote>
&lt;p>&amp;ldquo;You shall have no other gods beside Me.&amp;rdquo;&lt;/p>
&lt;/blockquote>
&lt;p>The Hebrew word for &amp;ldquo;beside Me&amp;rdquo; here means &amp;ldquo;on the same level as Me&amp;rdquo; or &amp;ldquo;next to My face&amp;rdquo;.
We hear the same &lt;em>Jealous Husband&lt;/em> here that we also encounter in prophetical books like &lt;a class="link" href="https://www.bibleserver.com/ESV.NIRV/Hosea2" target="_blank" rel="noopener"
>Hosea&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>I want to be the highest priority in your life.
&lt;strong>I am Life&lt;/strong>, and I want to be &lt;em>your life&lt;/em>.&lt;/p>
&lt;/blockquote>
&lt;p>One interesting thing in the whole passage in Exodus 20 is that all the &amp;ldquo;You shall&amp;rdquo; phrases in this chapter can also be translated as &amp;ldquo;&lt;strong>You will&lt;/strong>&amp;rdquo;.
For me this makes the whole section sound not only like &lt;em>commandments&lt;/em> but also like a &lt;strong>promise&lt;/strong> of a different kind of life:&lt;/p>
&lt;blockquote>
&lt;p>When you say &amp;ldquo;Yes&amp;rdquo; to Me and enter into this covenant relationship with Me, then this is the kind of life you will lead:
You &lt;em>will&lt;/em> have no other Gods beside Me, you &lt;em>will&lt;/em> not abuse My name, you &lt;em>will&lt;/em> rejoice in the Sabbath, you &lt;em>will&lt;/em> honor your parents, &amp;hellip;&lt;/p>
&lt;/blockquote>
&lt;h2 id="you-will-not-make-yourself-idol-images">You Will Not Make Yourself Idol Images
&lt;/h2>&lt;blockquote>
&lt;p>&amp;ldquo;You will not make for yourself a statue or any likeness of anything that is in the sky, on the earth or in the waters.
You will not adore them or serve them.&lt;/p>
&lt;p>For I, the Lord your God, am a jealous God, afflicting the guilt of the fathers on the children and grandchildren of those who despise me —
but showing steadfast love to thousands of generations of those who love me and keep my commandments.&amp;rdquo;&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>When you enter into this covenant with Me, you will love first of all &lt;strong>Me&lt;/strong> and not the signs of My grace towards you.
You were not made to be the bride or the servant of anybody else but &lt;em>Me&lt;/em> who made you and who has always loved you.&lt;/p>
&lt;p>I desire your love!
Your love or disinterest makes a tremendous difference for me.
When you love Me, I will love you back ever more lavishly.
And I will also pour out my kindness and goodness on thousands of generations after you.&lt;/p>
&lt;p>If you run after others, I will be most jealous and relentless in my pursuit to get back your whole attention.
When you reject me, then I will shake you so you wake up and recognize that all the good in your life which you rely upon comes only from Me.
And you will recognize that &lt;strong>My grace is a thousand times greater&lt;/strong> than the punishment I may enact to bring you back to Me &amp;hellip;&lt;/p>
&lt;/blockquote>
&lt;h2 id="you-will-not-exploit-my-name">You Will Not Exploit My Name
&lt;/h2>&lt;blockquote>
&lt;p>&amp;ldquo;You will not pronounce the name of the Lord your God in vain, for the Lord will not hold anyone guiltless who pronounces His name in vain.&amp;rdquo;&lt;/p>
&lt;/blockquote>
&lt;p>Let&amp;rsquo;s look at the words &amp;ldquo;pronounce&amp;rdquo; and &amp;ldquo;in vain&amp;rdquo; a bit closer:
The Hebrew verb &lt;a class="link" href="https://www.csv-bibel.de/strongs/h5375" target="_blank" rel="noopener"
>&lt;em>nasa&lt;/em>&lt;/a> (for &amp;ldquo;pronounce&amp;rdquo;) mainly means &amp;ldquo;carry&amp;rdquo;, &amp;ldquo;lift up&amp;rdquo; or &amp;ldquo;take&amp;rdquo;.
I guess that to &lt;em>nasa&lt;/em> God&amp;rsquo;s name means to &amp;ldquo;take His name into our mouths&amp;rdquo; (i.e. pronounce His name out loud) or &amp;ldquo;exalt His name&amp;rdquo;.&lt;/p>
&lt;p>The Hebrew adjective &lt;a class="link" href="https://www.csv-bibel.de/strongs/h7723" target="_blank" rel="noopener"
>&lt;em>shav&lt;/em>&lt;/a> (for &amp;ldquo;vain&amp;rdquo;) is used to describe things that are &amp;ldquo;vain/futile&amp;rdquo;, &amp;ldquo;wrong&amp;rdquo;, &amp;ldquo;nothing&amp;rdquo;, or even &amp;ldquo;fraud&amp;rdquo;.
On top of that, we know that names in the Jewish culture are not mere words:
They always express the character of that person.&lt;/p>
&lt;p>Additionally, we see Jesus making an important point in the &lt;a class="link" href="https://www.bibleserver.com/ESV.NIRV/Matthew5%3A33-37" target="_blank" rel="noopener"
>Sermon on the Mount&lt;/a>:
We should never manipulate others by overriding their free will, as we would do e.g. by appealing to God or any high authority so we could make the things we say &lt;em>sound better than what they actually are&lt;/em>.&lt;/p>
&lt;p>In conjunction, for me this &amp;ldquo;name commandment&amp;rdquo; unfolds like this:&lt;/p>
&lt;blockquote>
&lt;p>Do not exploit My name and My character to foster your vain projects or — even worse — your fraud!
If you try to simply &lt;em>have your own way&lt;/em> by abusing Me and My love, especially by coercing others to trust your shiny words, you are no longer living from the Tree of Life — and you will reap accordingly.&lt;/p>
&lt;p>But when you live in My Kingdom, you can completely afford to openly and vulnerably speak the truth, and you have no need to say anything beyond it.
For I am The Truth, and under My loving reign you will become more and more like Me.&lt;/p>
&lt;/blockquote>
&lt;h2 id="keep-the-sabbath">Keep The Sabbath
&lt;/h2>&lt;blockquote>
&lt;p>&amp;ldquo;Remember to keep the Sabbath day, to keep it holy.
Six days you shall labor and do all your work, but the seventh day is a day of rest for the Lord your God.
You shall not do any work on it, neither you nor your children, neither your male nor your female servant, not even the animals or the foreigners living in your towns.&lt;/p>
&lt;p>For in six days the Lord made the heavens and the earth, the sea and all that is in them, and He rested on the seventh day.
Therefore the Lord blessed the Sabbath day and made it holy.&amp;rdquo;&lt;/p>
&lt;/blockquote>
&lt;p>Among all the commandments in Exodus 20, this is the one that makes it the most obvious that &lt;strong>we should act in certain ways because God does so&lt;/strong> — and not primarily because He &lt;em>says&lt;/em> so.
Children will always learn more deeply by imitating what their parents do.
And we have the greatest and best Father there is and ever will be:
His words and actions will never contradict each other!&lt;/p>
&lt;p>How refreshing and clarifying are the words of the &lt;a class="link" href="https://www.bibleserver.com/ESV.NIRV/Isaiah58" target="_blank" rel="noopener"
>prophet Isaiah about the Sabbath&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>&amp;ldquo;You will call out to to Me for help and I will answer you.
I will always guide you.
I will satisfy your needs in a land baked by the sun.
You will be like a garden that has plenty of water.
If you keep your foot from the Sabbath, from doing your pleasure on my holy day, and call the Sabbath a delight and the holy day of the Lord honorable, then you will find your joy in Me.&amp;rdquo;&lt;/p>
&lt;/blockquote>
&lt;p>This is the kind of life we are invited into:
In His Kingdom, we are untied from our reliance upon earthly things and upon our hard work.
By learning to place our trust in Him, we can truly start to enjoy one full day of rest every week because we have learned that &lt;strong>our lives are not in our own hands&lt;/strong>.
There is Someone Infinitely Good providing for us and inviting us into intimacy with Him.
This is truly the place where we find abundant life that is available nowhere else.&lt;/p>
&lt;h2 id="honor-your-parents">Honor Your Parents
&lt;/h2>&lt;blockquote>
&lt;p>&amp;ldquo;Honor your father and your mother.
Then you will live a long time in the land the Lord your God is giving you.&amp;rdquo;&lt;/p>
&lt;/blockquote>
&lt;p>God is a father and He wants to be honored.
On the other hand, God is also a son and wants to honor his father.
We can imitate Him by honoring the people who brought us into this life on a biological level, showing them our deep respect and love — even though our families are often the places where we are wounded the most.&lt;/p>
&lt;blockquote>
&lt;p>You have learned to honor Me and obey what I say.
Now, you can subject yourself to your mother and father freely, knowing you are not in their hands but in My loving care first.
In Me, you are finally able to respect them and keep your heart vulnerably open at the same time.&lt;/p>
&lt;/blockquote>
&lt;h2 id="you-will-not-kill">You Will Not Kill
&lt;/h2>&lt;blockquote>
&lt;p>&amp;ldquo;You will not murder&amp;rdquo; —
for I am The Life.
You will not take life away from others to secure your own life.&lt;/p>
&lt;p>Remember: &lt;a class="link" href="https://www.bibleserver.com/ESV.NIRV/Galatians2%3A19-21" target="_blank" rel="noopener"
>Your life ended&lt;/a> when you entered into a covenant with Me, and what you live now, you live in and through Me.
And through Me, &lt;strong>your life will become a place&lt;/strong> where others thrive, &lt;strong>where they come alive&lt;/strong> and their lives start to unfold and blossom.&lt;/p>
&lt;/blockquote>
&lt;h2 id="you-will-not-break-marriage">You Will Not Break Marriage
&lt;/h2>&lt;blockquote>
&lt;p>&amp;ldquo;You will not commit adultery&amp;rdquo; —
for I am Faithfulness.
&lt;strong>You will be faithful&lt;/strong> to your spose — not because he or she &lt;em>deserves&lt;/em> it but because you have learned to be faithful to Me, and because you are becoming more and more like Me.&lt;/p>
&lt;p>The way you lead your marriage and all your relationships with the other sex &lt;em>will display My relationship with My bride&lt;/em>.&lt;/p>
&lt;/blockquote>
&lt;h2 id="you-will-not-steal">You Will Not Steal
&lt;/h2>&lt;blockquote>
&lt;p>&amp;ldquo;You will not steal&amp;rdquo; —
for I am your Provider.
I give you more than enough.
You are no longer poor because &lt;a class="link" href="https://www.bibleserver.com/ESV.NIRV/Romans10%3A12" target="_blank" rel="noopener"
>I am rich for all who call on me&lt;/a>.
In this deep bond with Me, you share in this wealth and this fullness of life.&lt;/p>
&lt;p>You don&amp;rsquo;t have to live in fear any longer and grasp feverishly for &lt;em>things&lt;/em> to secure your survival.
You are no longer bound to a self-centered and ultimately self-destroying life:
&lt;a class="link" href="https://www.bibleserver.com/ESV.NIRV/Hebrews10%3A34" target="_blank" rel="noopener"
>Out of My riches&lt;/a> &lt;strong>you can totally afford to generously give&lt;/strong> to others around you and &lt;strong>love lavishly&lt;/strong>.&lt;/p>
&lt;/blockquote>
&lt;h2 id="you-will-not-lie-against-others">You Will Not Lie Against Others
&lt;/h2>&lt;blockquote>
&lt;p>&amp;ldquo;You will not be a false witness against your neighbor&amp;rdquo; —
for I am The Truth.
You no longer have to fight against others at all.
&lt;strong>You can simply say the truth, and say it in Love&lt;/strong>.&lt;/p>
&lt;p>You can afford to be honest and vulnerable because when you are in Me, nobody can ultimately harm you.
Yes, you can afford to speak the truth even about your enemies, and even if it causes you disadvantage or harm at first — because you are not living from your limited resources but from Me, Life Himself.&lt;/p>
&lt;/blockquote>
&lt;h2 id="you-will-not-envy">You Will Not Envy
&lt;/h2>&lt;blockquote>
&lt;p>&amp;ldquo;You will not covet your neighbor&amp;rsquo;s house or wife, male or female servant, ox or donkey or anything that is your neighbor&amp;rsquo;s&amp;rdquo; —
for I am &lt;a class="link" href="https://www.bibleserver.com/ESV.NIRV/Genesis15%3A1" target="_blank" rel="noopener"
>your Great Reward&lt;/a> and the one who satisfies all your deepest needs.&lt;/p>
&lt;p>Envy for others&amp;rsquo; success, happiness or wealth will not be part of your life because you are not living from a reality of poverty anymore.
No, even better:
You will be free to &lt;strong>genuinely rejoice in the good that others around you experience&lt;/strong>, maybe even more than they themselves enjoy it!&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;p>&lt;em>This is the second part of a series about &lt;a class="link" href="https://jscheytt.github.io/p/the-beauty-of-the-law/" >The Beauty of the Law&lt;/a>.&lt;/em>
&lt;em>Here is &lt;a class="link" href="https://jscheytt.github.io/p/the-beauty-of-the-law/" >Part 1&lt;/a>.&lt;/em>&lt;/p></description></item><item><title>The Beauty of the Law</title><link>https://jscheytt.github.io/p/the-beauty-of-the-law/</link><pubDate>Mon, 05 Sep 2022 10:32:01 +0200</pubDate><guid>https://jscheytt.github.io/p/the-beauty-of-the-law/</guid><description>&lt;img src="https://images.pexels.com/photos/5192347/pexels-photo-5192347.jpeg?cs=srgb&amp;dl=pexels-maor-attias-5192347.jpg&amp;fm=jpg&amp;w=1000" alt="Featured image of post The Beauty of the Law" />&lt;p>&lt;em>This is the first part of a series about The Beauty of the Law.&lt;/em>&lt;/p>
&lt;p>About two years ago God began revealing &lt;a class="link" href="https://www.bibleserver.com/ESV.NIV/Psalm119" target="_blank" rel="noopener"
>Psalm 119&lt;/a> to me.
This longest of all Psalms with its almost 200 verses is often feared for its length and especially its seemingly bizarre praise of &amp;ldquo;The Law&amp;rdquo;.
This refers to the Torah (the first 5 books of the Bible) and in a stricter sense to the commandments of the Torah.&lt;/p>
&lt;p>I was always among those with whom this chapter never rang.
But what I then started realizing is that there is so much personal &lt;strong>closeness&lt;/strong> to God pulsing throughout this Psalm.
The writer is not just &lt;em>talking about&lt;/em> the Law in a general, abstract sense but instead he is constantly addressing God.
This Psalm is a &lt;strong>place of encounter&lt;/strong> with the God of the Law.
And the writer desires to know Him more and endlessly reflects upon the goodness of the whole of Scripture:&lt;/p>
&lt;blockquote>
&lt;p>The sum of Your Word is truth, and every one of Your righteous rules endures forever!&lt;/p>
&lt;/blockquote>
&lt;p>We have come to know that truth is not &lt;em>mere facts&lt;/em> — truth is &lt;strong>Someone&lt;/strong>, a person we can know; you might even say He is &lt;em>The Person&lt;/em>.
Just like the apostle John writes in the prologue of his gospel:
Jesus is the Word In Person.
So when reading Scripture — any part of the Bible, even the Torah and its commandments — you are bound to encounter Him everywhere, all over the place!&lt;/p>
&lt;p>Out of this marvelling I suddenly realized that I effectively had no idea what the Law is, even after having read through the whole Bible multiple times in my life.
So I started reading the Torah, exploring it and falling in love with it.
Let me share some beautiful findings from my journey so far:&lt;/p>
&lt;h2 id="god-reveals-his-character-in-the-law">God Reveals His Character In The Law
&lt;/h2>&lt;p>Leviticus in the Old Testament and the gospel of John in the New Testament are &lt;em>the&lt;/em> books of the Bible where the phrase &lt;a class="link" href="https://www.csv-bibel.de/suche/%22ich%20bin%22" target="_blank" rel="noopener"
>&amp;ldquo;I am&amp;rdquo;&lt;/a> appears most often (about 50 times in each book).
In John, these are mostly the famous &amp;ldquo;I am&amp;rdquo; sentences by Jesus like &amp;ldquo;I am the Bread of Life,&amp;rdquo; &amp;ldquo;I am the Good Shepherd,&amp;rdquo; or &amp;ldquo;I am the Resurrection and the Life.&amp;rdquo;
In Leviticus, the most common phrase is &amp;ldquo;(For) I am the Lord (your God).&amp;rdquo;
Although in John the speaker of each &amp;ldquo;I am&amp;rdquo; phrase is not always Jesus, we can get a feeling that the &lt;strong>identity&lt;/strong> of God and His people is front and center in both of these books.&lt;/p>
&lt;p>The chapter with the highest density of &amp;ldquo;I am&amp;rdquo; in Leviticus is &lt;a class="link" href="https://www.bibleserver.com/ESV.NIV/Leviticus19" target="_blank" rel="noopener"
>chapter 19&lt;/a>.
This has become one of my favorite chapters in the Bible:
We read all kinds of commandments there, and almost every second or third sentence is &amp;ldquo;(For) I am YHWH (your God)&amp;rdquo;.
It&amp;rsquo;s almost as if these were not mere commands but that they instead reveal something about the very character of God.
Everything in this chapter (and by extension, the whole of the Torah) therefore becomes not just a statement about &lt;strong>what we should do&lt;/strong> but also about &lt;strong>who He is&lt;/strong>.&lt;/p>
&lt;h3 id="examples-from-leviticus-19">Examples From Leviticus 19
&lt;/h3>&lt;p>Let&amp;rsquo;s try a few excerpts from this chapter:&lt;/p>
&lt;blockquote>
&lt;p>Every one of you shall revere his mother and his father, and you shall keep my Sabbaths: I am the Lord your God.&lt;/p>
&lt;/blockquote>
&lt;p>Not only are we told to honor our parents and lay down our working on the Sabbath, but we also learn that this has something to do with God&amp;rsquo;s nature:
Focussing only on the Sabbath for now, we read in the &lt;a class="link" href="https://www.bibleserver.com/ESV.NIV/Exodus20%3A11" target="_blank" rel="noopener"
>Ten Commandments&lt;/a> that &amp;ldquo;in six days the Lord made the heavens and the earth, and He rested on the seventh day.&amp;rdquo;
God wants us to share this resting in Himself, He wants us to rest in that same Peace.&lt;/p>
&lt;p>He gives us commandments not because He is a tyrant who changes His plans at whim but because He is infinitely good and &lt;strong>wants us to share in His character and actions&lt;/strong>.
He made us in His likeness, and Jesus is the one who came to open up God&amp;rsquo;s Kingdom to us so we can truly &lt;a class="link" href="https://www.bibleserver.com/ESV.NIV/Matthew5%3A45" target="_blank" rel="noopener"
>&amp;ldquo;be children of your Father in the Heavens.&amp;rdquo;&lt;/a>&lt;/p>
&lt;p>Here is another &amp;ldquo;law&amp;rdquo; from chapter 19:&lt;/p>
&lt;blockquote>
&lt;p>You shall not strip your vineyard bare, you shall leave the fallen grapes for the poor: I am the Lord your God.&lt;/p>
&lt;/blockquote>
&lt;p>God loves the poor and cares for them.
He will look after them and provision for them, even when people around them ignore them.
Of course we are to act just like Him!
He adopted us in Jesus and we are His sons and daughters, and children learn naturally by imitating their parents.&lt;/p>
&lt;p>This way of imitating is something Jesus frequently talks about in the &lt;a class="link" href="https://www.bibleserver.com/ESV.NIV/John5%3A19" target="_blank" rel="noopener"
>Gospel of John&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>The Son can do nothing of his own accord, but only what He sees the Father doing.&lt;br>
For wathever the Father does, that the Son does likewise.&lt;/p>
&lt;/blockquote>
&lt;p>Other verses in Leviticus 19 and the Torah in general are harder to discern for me currently.
However, the more you start to explore the Law in search for Him, the more you will find Him.
I don&amp;rsquo;t assume I get everything of the following completely right, but let&amp;rsquo;s take a look at the commandment in verses 6 through 8 about &lt;em>eating the sacrifice meat only during the 3 days&lt;/em> after the act of sacrificing:
At first this sounds illogical and the consequence of exclusion from the sacred community very harsh.&lt;/p>
&lt;p>However, God never meant for us to eat food from sacrificial acts &lt;em>alone&lt;/em>.
He always wanted those who sacrificed an animal for Him to celebrate &lt;strong>together in His presence&lt;/strong>.
By keeping some of this prepared, holy meat and eating it later — at any time of our own liking — we would treat something that was meant for communion and closeness with God and others as something we can exploit selfishly on our own.&lt;/p>
&lt;p>That is not the way He has meant for us to live — neither in the context of sacrifices nor in basically any other part of life.
He wants to make us into beings that can and will naturally live in loving harmony and interaction with Him every moment of each day.&lt;/p>
&lt;h2 id="jesus-is-the-fulfillment-of-the-law">Jesus Is The Fulfillment Of The Law
&lt;/h2>&lt;p>The initial followers of Jesus in the first century were Jews.
They knew the Law well, from learning to read and write in the Torah schools and from the synagogue.
It was probably in some sense easier for them than for us today to understand what Jesus meant when He said in Matthew 5:&lt;/p>
&lt;blockquote>
&lt;p>Do not think that I have come to abolish the Law or the Prophets;&lt;br>
I have not come to abolish them but to &lt;strong>fulfill&lt;/strong> them.&lt;/p>
&lt;/blockquote>
&lt;p>Does that only mean that Jesus simply &lt;em>obeyed&lt;/em> all the commandments in the Torah to the letter?
Is that all there is to Jesus in particular and, more generally, to the life we can lead through Him?&lt;/p>
&lt;p>The &lt;a class="link" href="https://www.bibleserver.com/ESV.NIV/Hebrews1" target="_blank" rel="noopener"
>letter to the Hebrews&lt;/a> helps to complete the picture:
It is directed to just such people that came from the Jewish tradition and had gotten to know God the Father through His Son Jesus.
And it draws from the rich imagery of the whole Old Testament to make an important point:
Jesus is the fulfillment of every part of the Old Covenant:&lt;/p>
&lt;p>He is higher than the angels, better than Moses, the 100 % perfect High Priest in the actual, original Sanctuary in the Heavens.
He has offered up Himself as the one ultimate and completely spotless sacrifice.
The Gospel of Matthew, as a complement, makes it clear that Jesus is not only the fulfillment of everything displayed in the &lt;em>Law&lt;/em> but also the fulfillment of everything announced in the &lt;em>Prophets&lt;/em>.&lt;/p>
&lt;p>So Jesus did not just comply with the Law, He is also The Original that preceded it.
Everything we see in the Old Covenant is ultimately an image, a reduced snapshot of the One True Savior.
It is not the real thing itself, it simply &lt;strong>points towards&lt;/strong> The One To Come and projects a pre-image of Him.&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>The beautiful thing we see in Hebrews is this:
Just because the Old Covenant was a reduced image and an imperfect projection of The Real Thing, we don&amp;rsquo;t have to throw away our Old Testaments because &amp;ldquo;we now have Jesus&amp;rdquo;.
Jesus also said (see above) that He was not going to abolish them, but fulfill them.
Rejecting the Old Testament because it was incomplete would be outright wrong, just as would be rejecting sex in marriage because it is an incomplete image of the union of Christ and His Bride.
Everything on this planet will be an incomplete image of God&amp;rsquo;s glory until He returns.&lt;/p>
&lt;h2 id="how-do-we-now-live-in-this-fulfillment">How Do We Now Live In This Fulfillment?
&lt;/h2>&lt;p>Romans and Galatians show clearly:
If you try to justify yourself by fulfilling the laws, you have to fulfill them all.
No person has ever managed to do that apart from Jesus.
And He knew perfectly well that our hearts cannot be deeply transformed by merely &amp;ldquo;checking all the boxes&amp;rdquo;.&lt;/p>
&lt;p>Discussing which of the Torah commandments are still relevant today and which are not would completely miss the point:
Living in the Kingdom of Jesus is just the opposite of justifying our lives on our own terms and through our own doing.
Instead, Jesus Himself has become our righteousness and the justification for our existence.&lt;/p>
&lt;p>He is inviting us to whole different kind of life:
Not eating from the Tree of Knowing Good and Evil but from Him, the &lt;a class="link" href="https://www.bibleserver.com/search/ESV.NIV/tree%20of%20life" target="_blank" rel="noopener"
>Tree of Life&lt;/a>.
By throwing away the ways of our own carefully engineered righteousness and placing our trust in Him, our hearts will be healed and we will no longer need a list of rules to comply with so we can make ourselves good.
Instead, we will live from Him, with Him, in Him.
This is what Jesus describes when He says &lt;a class="link" href="https://www.bibleserver.com/ESV.NIV/John17%3A3" target="_blank" rel="noopener"
>this&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>Now this is eternal life: to know you, the only true God, and to know Jesus Christ, whom You have sent!&lt;/p>
&lt;/blockquote>
&lt;p>With this in mind, we can turn towards the Old Testament and especially the Torah &lt;strong>and discover Jesus&lt;/strong> in there and &lt;strong>contemplate the beauty of the Law&lt;/strong> — because it displays His character.
This makes me say with the words of Psalm 119:&lt;/p>
&lt;blockquote>
&lt;p>Open my eyes and reveal to me the wonders in Your Law!&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;p>&lt;em>This is the first part of a series about The Beauty of the Law.&lt;/em>
&lt;em>Here is &lt;a class="link" href="https://jscheytt.github.io/p/the-ten-commandments-an-invitation-into-life-itself/" >Part 2&lt;/a>.&lt;/em>&lt;/p></description></item><item><title>Ruth and Boaz are Interlocking With God's Action</title><link>https://jscheytt.github.io/p/ruth-and-boaz-are-interlocking-with-gods-action/</link><pubDate>Sun, 28 Aug 2022 16:57:34 +0200</pubDate><guid>https://jscheytt.github.io/p/ruth-and-boaz-are-interlocking-with-gods-action/</guid><description>&lt;p>As part of my journey through the &lt;a class="link" href="https://en.wikipedia.org/wiki/Hebrew_Bible" target="_blank" rel="noopener"
>Tanakh&lt;/a>, I recently came across the book of Ruth.
I want to share some things from this book and its surroundings that really stood out to me afresh.&lt;/p>
&lt;h2 id="the-surrounding-context-of-scripture">The Surrounding Context of Scripture
&lt;/h2>&lt;p>In the Tanakh order of books, Ruth is directly preceded by the book of Proverbs.
The last chapter, Proverbs 31, talks about the &amp;ldquo;woman of noble character&amp;rdquo;.
And in Ruth 3, Boaz interestingly calls Ruth such an &amp;ldquo;woman of noble character&amp;rdquo; (he is using the exact same Hebrew word for &amp;ldquo;noble&amp;rdquo; as in Proverbs 31).
This alone starts showing how it&amp;rsquo;s not about being an Israelite in the first place that gives you God&amp;rsquo;s recognition but &lt;strong>by placing your full trust in Him&lt;/strong>.
We will see in a moment how Ruth is an example of this.&lt;/p>
&lt;p>The book directly after Ruth in the Tanakh order is the Song of Songs.
One of the main themes is how the woman and the man seek and chase each other.
Ruth in this story is not chasing any human lover however — she goes after God.
This sets the scene wonderfully to show how even the seemingly most earthly-romantic book in Scripture is not just about humans, it&amp;rsquo;s also about humans together with God:
&lt;strong>We as Jesus&amp;rsquo; bride are to seek Him and chase after Him in all that we do.&lt;/strong>&lt;/p>
&lt;h2 id="ruth-puts-her-trust-in-god">Ruth Puts Her Trust In God
&lt;/h2>&lt;p>When Ruth and her sister-in-law Orpah rise to accompany their mother-in-law Naomi back to Israel, Naomi tells them to leave for a better future in their homecountry, Moab.
Orpah leaves but &lt;a class="link" href="https://www.bibleserver.com/NIV/Ruth1%3A16-17" target="_blank" rel="noopener"
>Ruth proclaims her loyalty to Naomi&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>Don&amp;rsquo;t urge me to leave you or to turn back from you.
&lt;strong>Where you go&lt;/strong> I will go, and where you stay I will stay.
&lt;strong>Your people&lt;/strong> will be my people and &lt;strong>your God&lt;/strong> my God.
Where you die I will die, and there I will be buried.&lt;/p>
&lt;/blockquote>
&lt;p>This alone does not make it look a lot like Ruth would put her trust mostly in God.
But a few verses later, Boaz nails it by speaking out what was deep in Ruth&amp;rsquo;s heart (2:12):&lt;/p>
&lt;blockquote>
&lt;p>May the Lord repay you for what you have done!
May you be richly rewared by the Lord, the God of Israel, &lt;strong>under whose wings you have come to take refuge&lt;/strong>!&lt;/p>
&lt;/blockquote>
&lt;p>That&amp;rsquo;s right:&lt;/p>
&lt;ul>
&lt;li>Ruth did not come to &lt;strong>take refuge under Naomi&amp;rsquo;s wings&lt;/strong>:
&lt;ul>
&lt;li>This embittered mother-in-law, blinded by her self-centered grief, unable to care for herself as a widow, was in no way a future prospect for Ruth.&lt;/li>
&lt;li>Leaning unto this woman when you just lived through a tragic loss yourself was certainly not an easy task and one that &lt;em>you needed to rely on Someone Else&lt;/em>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Ruth would not come to take refuge under the wings of the &lt;strong>people of Israel&lt;/strong> either:
&lt;ul>
&lt;li>Going to Israel and trying to live there she would certainly face &lt;em>ostracism and poverty&lt;/em> because she was a foreigner, and a widow at that!&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>I suspect that during the 10 years she was married to Mahlon, &lt;em>Ruth got to know the God of Israel intimately&lt;/em> when she experienced the life of a Jewish family through the course of each day, week, and year.&lt;/p>
&lt;h2 id="clinging">Clinging
&lt;/h2>&lt;p>We read that Orpah leaves Naomi, but Ruth &amp;ldquo;clings to her&amp;rdquo;.
The Hebrew word for &amp;ldquo;clinging&amp;rdquo; here, &lt;a class="link" href="https://www.csv-bibel.de/strongs/h1692" target="_blank" rel="noopener"
>dabaq&lt;/a>, is interesting:&lt;/p>
&lt;ul>
&lt;li>It&amp;rsquo;s the same word used in Genesis 2 about how a man who will leave his parents and &amp;ldquo;cling to his wife&amp;rdquo; with the two becoming one.&lt;/li>
&lt;li>It&amp;rsquo;s also used for something that &amp;ldquo;sticks&amp;rdquo; to you like glue, just like stains on your hands or your tongue to the roof of your mouth.&lt;/li>
&lt;li>But it&amp;rsquo;s &lt;strong>not passive&lt;/strong>: The Philistine army &amp;ldquo;sticks to the heels&amp;rdquo; of the Israelites, and Ruth is also told to &amp;ldquo;stick to the maids&amp;rdquo; of Boaz.&lt;/li>
&lt;/ul>
&lt;p>This kind of &amp;ldquo;clinging&amp;rdquo; is the action of attaching yourself to someone and therefore being &lt;strong>very close&lt;/strong> to that person, up to &lt;em>intimacy&lt;/em>, and by being that close, &lt;strong>automatically following them&lt;/strong>.
For me, this is the kind of &amp;ldquo;glueing myself&amp;rdquo; to Jesus that I want to live more every day, just like David says in Psalm 63:&lt;/p>
&lt;blockquote>
&lt;p>My soul clings to You; Your right hand upholds me.&lt;/p>
&lt;/blockquote>
&lt;p>If we not only draw near to Him &lt;em>from time to time&lt;/em> but instead &lt;strong>live&lt;/strong> with Him and stick to His heels, obedience to His words and conformance to His loving character will follow as a natural fruit, just like we read in &lt;a class="link" href="https://www.bibleserver.com/ESV.NIV/2%20Corinthians3%3A18" target="_blank" rel="noopener"
>2 Corinthians 3:18&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>We all, as we contemplate the Lord&amp;rsquo;s glory with unveiled faces, are being transformed into His image with ever-increasing glory.
This transformation comes from the Lord, who is the Spirit.&lt;/p>
&lt;/blockquote>
&lt;h2 id="the-shortsightedness-of-all-the-others">The Shortsightedness Of All The Others
&lt;/h2>&lt;p>Elimelech only saw a famine and tried to secure physical survival for his family by moving to Moab — tragically, he and his sons died in spite of his best intentions.&lt;/p>
&lt;p>Naomi only sees her loss — although she later recognizes and praises God&amp;rsquo;s hand moving in favor of her and Ruth.&lt;/p>
&lt;p>The nameless &amp;ldquo;closer redeemer&amp;rdquo; &lt;a class="link" href="https://www.bibleserver.com/ESV.NIV/Ruth4%3A6" target="_blank" rel="noopener"
>only sees his own possession&lt;/a> and tries to secure his family&amp;rsquo;s inheritance and prosperity by relying on his riches.&lt;/p>
&lt;p>&lt;strong>But Ruth and Boaz see something far greater.&lt;/strong>
Their eyes are on God first.&lt;/p>
&lt;p>Ruth seems to have no problem in trusting God to completely take care of her in a foreign country with (from a human perspective) the outlook of a dim, impoverished existence at the margins of society.
She does not feverishly spring into action nor does she just sit back and do nothing.
Out of her trust in God, she faithfully gathers grain for her mother-in-law and herself throughout every working day, all day long, all the months of the harvest.
And it&amp;rsquo;s only when &lt;em>Naomi&lt;/em> suggests Ruth approach Boaz about the redeemer thing that she does it instead of doing it on her own account.&lt;/p>
&lt;p>Boaz does not venture on frantically either:
He understood all along that God was moving here and that he could fully trust Him to bring everything together at the right time.
When Ruth asks him to redeem them, he is not even afraid of the &amp;ldquo;closer redeemer&amp;rdquo;.&lt;/p>
&lt;p>They both see God is at work in everything:
In the famine, in the deaths of Ruth&amp;rsquo;s husband and other family men, in the whole harvest season, in the redemption story — and even beyond what they are going to see with their own eyes!
They see God at work and &lt;strong>willingly intertwine their actions with God&amp;rsquo;s movements&lt;/strong>.&lt;/p>
&lt;p>And Boaz does not even &amp;ldquo;endanger his family inheritance&amp;rdquo; like the &amp;ldquo;closer redeemer&amp;rdquo; feared.
He gets something far, far better:
A place in the family line of King David and ultimately Jesus, the Son of Man and Son of God.
Now that is a family inheritance!&lt;/p></description></item><item><title>ArgoCD is like the Kubernetes Dashboard but for GitOps</title><link>https://jscheytt.github.io/p/argocd-is-like-the-kubernetes-dashboard-but-for-gitops/</link><pubDate>Thu, 25 Aug 2022 15:00:09 +0200</pubDate><guid>https://jscheytt.github.io/p/argocd-is-like-the-kubernetes-dashboard-but-for-gitops/</guid><description>&lt;p>FluxCD was my first love in the GitOps space.
I worked with it when it was still v1, had no chance to use, and since about a year I returned to using it in its glorious, rewritten v2.&lt;/p>
&lt;p>I haven&amp;rsquo;t given ArgoCD a try so far until this week somebody suggested trying out &lt;a class="link" href="https://argocd-autopilot.readthedocs.io/en/stable/" target="_blank" rel="noopener"
>ArgoCD Autopilot&lt;/a>.
The process was super smooth and in less than 10 minutes I had a running ArgoCD dashboard in my local minikube cluster.&lt;/p>
&lt;p>And holy moly I have to say:
ArgoCD is awesome!
In the less than one hour I have seen it close up now, I already see so many possibilities that are hard to do when you try to scale Flux:&lt;/p>
&lt;ol>
&lt;li>Having a UI at all&lt;/li>
&lt;li>Managing applications in multiple clusters from 1 Git repo &lt;em>with explicit assignment to these clusters&lt;/em>&lt;/li>
&lt;li>The UI is basically the better &lt;a class="link" href="https://kubernetes.io/docs/tasks/access-application-cluster/web-ui-dashboard/" target="_blank" rel="noopener"
>Default Kubernetes Dashboard&lt;/a> but for GitOps:
&lt;ul>
&lt;li>The Kubernetes Dashboard gives you a very &amp;ldquo;relational&amp;rdquo; view of your resources, much like &lt;a class="link" href="https://k9scli.io/" target="_blank" rel="noopener"
>k9s&lt;/a> does (albeit with fewer resource types).&lt;/li>
&lt;li>I tried &lt;a class="link" href="https://github.com/kubevious/kubevious" target="_blank" rel="noopener"
>Kubevious&lt;/a> in some projects because it allows you to view &lt;strong>related resources hierarchically together&lt;/strong>.
&lt;ul>
&lt;li>But it is pretty buggy (especially the mysql DB deployed with it) and has not fulfilled its promise for me.&lt;/li>
&lt;li>Additionally, it&amp;rsquo;s read-only and does not show you a Events or container logs.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>ArgoCD however gives us the &lt;strong>best of both worlds&lt;/strong>:
&lt;ul>
&lt;li>Related resources are &lt;strong>shown hierarchically&lt;/strong> (e.g. Deployments create ReplicaSets create Pods).&lt;/li>
&lt;li>You can even group them into Apps, ApplicationSets, and Projects.&lt;/li>
&lt;li>If you open a Resource (e.g. Pod), you can see its Events and also its logs!&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a class="link" href="https://argo-cd.readthedocs.io/en/stable/operator-manual/applicationset/Generators-Pull-Request/" target="_blank" rel="noopener"
>Preview Environments&lt;/a> seem relatively straightforward.&lt;/li>
&lt;li>I have heard many rumors that Progressive Delivery is easier with ArgoCD (or at least involves less manually scripted yaml generation pipelines).&lt;/li>
&lt;/ol>
&lt;p>As a Cloud Automation Engineer, one of my main missions is to &lt;strong>deliver stable apps&lt;/strong>.
And this highly involves &lt;strong>stable processes&lt;/strong> for my team.
ArgoCD feels like the perfect fit:
I can deploy my apps with ArgoCD and everybody with access to it can debug resources, see which versions are currently deployed, and maybe even promote apps to the next environment!&lt;/p>
&lt;p>There also seem to be use cases (probably especially in a setup with separate platform and app dev teams) where &lt;a class="link" href="https://youtu.be/QNAiIJRIVWA?t=731" target="_blank" rel="noopener"
>deploying FluxCD and ArgoCD together&lt;/a> makes sense.
But I am definitively going to give ArgoCD a shot in some important environment soon.&lt;/p></description></item><item><title>Job and Truth in the Innermost</title><link>https://jscheytt.github.io/p/job-and-truth-in-the-innermost/</link><pubDate>Mon, 22 Aug 2022 20:27:09 +0200</pubDate><guid>https://jscheytt.github.io/p/job-and-truth-in-the-innermost/</guid><description>&lt;p>About 2 years ago I decided to start reading the Old Testament in the reading order of the &lt;a class="link" href="https://en.wikipedia.org/wiki/Hebrew_Bible" target="_blank" rel="noopener"
>Tanakh&lt;/a>, the Hebrew bible.
Recently, I came across the book of Job.
This was one among the many books in the Bible I found hard to read or make sense of.&lt;/p>
&lt;p>But as part of my journey into &lt;a class="link" href="https://jscheytt.github.io/p/rediscovering-our-hidden-life-in-god/" >rediscovering the abundant yet hidden life in Him&lt;/a> even all the seemingly strange books of the Old Testament start lighting up.
Let&amp;rsquo;s keep in mind that Jesus, the Son of God, was announced by John as &lt;a class="link" href="https://www.bibleserver.com/NIV/John1%3A14" target="_blank" rel="noopener"
>&amp;ldquo;the Word&amp;rdquo; Himself&lt;/a>.
What this encompasses for me is that whenever you read the Scriptures — fittingly called &lt;em>God&amp;rsquo;s Word&lt;/em> — you are &lt;strong>reading Jesus&lt;/strong>.
So when we read the Scriptures with the mindset of young Samuel in the temple, saying &lt;a class="link" href="https://www.bibleserver.com/NIV/1%20Samuel3%3A10" target="_blank" rel="noopener"
>&amp;ldquo;Speak Lord, Your servant is listening,&amp;rdquo;&lt;/a> and staying on the lookout for Jesus we can surely expect to find Him anywhere in Scripture!&lt;/p>
&lt;p>And thus, the book of Job started lighting up for me as a story about &lt;strong>how to treat one another in suffering&lt;/strong> according to Jesus&amp;rsquo; heart and the prayerful community of love (&lt;a class="link" href="https://jscheytt.github.io/p/rediscovering-our-hidden-life-in-god/" >see Chapter 7 of &amp;ldquo;The Divine Conspiracy&amp;rdquo;&lt;/a>).
It illustrates what a Kingdom way of treating each other in bad times looks like and shows how to truly love a friend who is suffering a great loss.&lt;/p>
&lt;h2 id="what-the-three-friends-get-right">What The Three Friends Get Right
&lt;/h2>&lt;p>When Job&amp;rsquo;s three friends hear about their friends great misfortune, they set out to find him, &lt;em>not leaving him alone&lt;/em>.
When they find him, they cry out in desperation.
They sit down with him and &lt;em>share his fate&lt;/em> — down in the dust, in the solitude, in the sickness.&lt;/p>
&lt;p>We read they even stay with him &lt;em>in silence&lt;/em> and fasting 7 days and nights.
They don&amp;rsquo;t start by saying anything, they start by &lt;em>making themselves one with Job&lt;/em> in his suffering, experiencing and feeling the same pain.
When the conversation starts, they don&amp;rsquo;t start giving wonderful advice on their own.
They &lt;em>let Job begin by sharing his heart&lt;/em>.&lt;/p>
&lt;h2 id="where-they-go-wrong">Where They Go Wrong
&lt;/h2>&lt;p>They are &lt;em>not truthful&lt;/em>.
Just like Job, neither of them effectively knows why the trouble and loss came.
But the three friends act as if they knew!&lt;/p>
&lt;p>They try to justify God&amp;rsquo;s actions, &lt;em>speaking on His behalf&lt;/em> motivated by fear.
As if the Great One had any need for small humans hastily jumping to His defense!
Of course God loves it when we honor Him and live out a deep reverence towards Him.
But we cannot force others to do so.
And more importantly, doing anything in our lives &lt;a class="link" href="https://www.bibleserver.com/NIV/Romans14%3A23" target="_blank" rel="noopener"
>out of fear instead of trust is effectively sin&lt;/a>.&lt;/p>
&lt;p>They say tons of &amp;ldquo;right&amp;rdquo; things — but also out of fear, not out of faith:
Each of them in their own way proclaims God&amp;rsquo;s faithfulness and loyalty towards the ones who stick to Him.
One of them even prophecies that God will reward Job back with double what he lost — and &lt;em>at the end&lt;/em> of the story this is even 100 % fulfilled!
But their &lt;strong>hearts&lt;/strong> are not right:
They just try to stand on the right side of the argument instead of loving their friend by being honest.&lt;/p>
&lt;p>The end of the story teaches us that you can say any amount of factually correct things that are legitimately right — but if your heart is not right, God will outright reject it!
&lt;a class="link" href="https://www.bibleserver.com/NIV/Job42%3A7" target="_blank" rel="noopener"
>In the final chapter of the book&lt;/a>, He even goes so far as saying:&lt;/p>
&lt;blockquote>
&lt;p>I am angry with you and your two friends, because you have not spoken the truth about me, &lt;strong>as my servant Job has&lt;/strong>!&lt;/p>
&lt;/blockquote>
&lt;p>Ponder this for a moment:
Job&amp;rsquo;s speeches are partially inconsistent, even contradictory about what God does or what God&amp;rsquo;s character is like.
But for God it is Job &lt;strong>in his truthfulness&lt;/strong> who speaks &lt;em>the truth&lt;/em> instead of his friends who emit &lt;em>true facts&lt;/em> &lt;strong>without truthfulness&lt;/strong>, not speaking from a place of vulnerable honesty.
This is what we also clearly see in Psalm 51 where David remarks that God &lt;a class="link" href="https://www.bibleserver.com/ESV/Psalm51%3A6" target="_blank" rel="noopener"
>&amp;ldquo;delights in truth in the inward being&amp;rdquo;&lt;/a>.&lt;/p>
&lt;h2 id="its-about-where-god-is-speaking">It&amp;rsquo;s About Where God Is Speaking
&lt;/h2>&lt;p>And then the fourth friend appears: Elihu.
He speaks from a point outside of the spectrum of Job and his friends.
He is not trying to position himself somewhere along the lines of &amp;ldquo;God is always just&amp;rdquo; or &amp;ldquo;Job has never done any wrong&amp;rdquo;.
Instead He finds the &amp;ldquo;third way&amp;rdquo; beyond their perspective, which is ultimately a perspective of extreme distance to God:&lt;/p>
&lt;p>He approaches Job &lt;a class="link" href="https://www.bibleserver.com/ESV/Job33%3A6-7" target="_blank" rel="noopener"
>in a resolute yet loving manner&lt;/a>.
He talks to both sides about their rights and wrongs.
And he emphasizes the point that this situation (and ultimately, all our lives) is not about who is right or wrong:
It&amp;rsquo;s about &lt;a class="link" href="https://www.bibleserver.com/ESV.NIV/Job33%3A14" target="_blank" rel="noopener"
>God speaking to us&lt;/a> through &lt;strong>all&lt;/strong> of life&amp;rsquo;s circumstances and events.&lt;/p>
&lt;p>We see the same pattern in &lt;a class="link" href="https://www.bibleserver.com/NIV/John9" target="_blank" rel="noopener"
>John 9&lt;/a> with Jesus and His disciples when they walk past a man who was born blind:
The disciples ask Jesus:&lt;/p>
&lt;blockquote>
&lt;p>Who has done wrong that this man is suffering so much, his parents or he himself?&lt;/p>
&lt;/blockquote>
&lt;p>But then Jesus rightfully asks:&lt;/p>
&lt;blockquote>
&lt;p>Wait a second — how did the idea enter your minds that this situation is about who sinned when and how?
All this trouble is a way for God to show His glory!&lt;/p>
&lt;/blockquote>
&lt;p>And then He goes ahead, heals him and we truly see how &amp;ldquo;the works of God are displayed in him&amp;rdquo;.&lt;/p>
&lt;p>We see that Job&amp;rsquo;s loss, the blindness and poverty of the blindborn, and the messes which are our own lifes are all about God constantly speaking to us, wanting to reach His goal of deep connection with us.
&lt;a class="link" href="https://www.bibleserver.com/NIV/Galatians2%3A19-21" target="_blank" rel="noopener"
>My life is not about myself anymore&lt;/a> but about learning to discern where God is working and speaking — and trusting that He is infinitely good.&lt;/p></description></item><item><title>Rediscovering Our Hidden Life In God</title><link>https://jscheytt.github.io/p/rediscovering-our-hidden-life-in-god/</link><pubDate>Mon, 15 Aug 2022 18:24:33 +0200</pubDate><guid>https://jscheytt.github.io/p/rediscovering-our-hidden-life-in-god/</guid><description>&lt;img src="https://vhx.imgix.net/studygateway/assets/7df85841-6e5b-4ba7-8e58-4563785d7aa6-0fcda344.jpg" alt="Featured image of post Rediscovering Our Hidden Life In God" />&lt;p>How can our lives really change?
How can we actually become good (and not only talk about being good)?
Is deep transformation of our characters on this side of eternity even possible?&lt;/p>
&lt;p>I was raised Charismatic/Pentecostal-Christian but the majority of my life often did not exhibit Christlikeness or actual trust in The One.
But in the last 3 years, there were two things that have deeply affected my live and changed my priorities and my heart:&lt;/p>
&lt;ol>
&lt;li>Being in a small group in our church with a shared focus and goal of following Jesus and practicing His presence and His teachings&lt;/li>
&lt;li>Reading the book &amp;ldquo;&lt;a class="link" href="https://dwillard.org/books/divine-conspiracy" target="_blank" rel="noopener"
>The Divine Conspiracy&lt;/a>&amp;rdquo; by Dallas Willard (and listening to sermons about topics of the book)&lt;/li>
&lt;/ol>
&lt;p>Much has been said about the striking outward similarity of the daily lives of professing Christians and non-Christians — and how we should actually expect to see something very different when we lead a life in accordance with God.
Sadly, none of this has ever helped me to a) identify the many areas in my life where I effectively did not place my reliance upon Jesus and b) learn to put my trust in Jesus.
What this book did for me — more than anything else — was to describe the beauty of God Himself, how well He has crafted this world in which we live, and what an extraordinary kind of life He has meant for us humans: a life in constant connectedness with Him, living out the life He would lead if He would live it here and now.&lt;/p>
&lt;p>From my experience, this book is capable of producing faith in Jesus by displaying Him as the all-competent Master of Life which He really is.
The core of the book (about two thirds) revolve around the Sermon on the Mount, the longest speech and the Master Lecture of Jesus.
These core teachings given by the Son of God never made sense to me in its entirety until I read the interpretations given by Dallas Willard.&lt;/p>
&lt;p>One word of caution:
The first 50 to 100 pages are not that easy to read.
On my first try at reading this book I stopped after about 50 pages because it felt too dry and it was not yet becoming clear what point Dallas Willard was trying to drive home.
But if you give him the benefit of the doubt you will get to the gold — that is, to discovering Jesus and the abundant life that He has and is for everyone who puts their complete trust in Him.&lt;/p>
&lt;p>One wonderful piece of news is that since a few months &lt;a class="link" href="https://www.fontis-shop.de/products/gott-du-musst-es-selbst-erleben" target="_blank" rel="noopener"
>a translation in German has become available&lt;/a>.
That has made it even more accessible for me, even though I read and write a sizable portion of my working day in English!&lt;/p></description></item><item><title>My default Makefile Boilerplate code</title><link>https://jscheytt.github.io/p/my-default-makefile-boilerplate-code/</link><pubDate>Wed, 01 Jun 2022 15:04:45 +0200</pubDate><guid>https://jscheytt.github.io/p/my-default-makefile-boilerplate-code/</guid><description>&lt;p>Most of my Makefiles nowadays start with the following stuff at the top of &lt;code>Makefile&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-make" data-lang="make">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># Remove default suffixes as we don&amp;#39;t use them.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">&lt;/span>&lt;span class="nf">.SUFFIXES&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># Set the Shell to Bash always to avoid surprises.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">&lt;/span>&lt;span class="nv">SHELL&lt;/span> &lt;span class="o">:=&lt;/span> /bin/bash
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># Auto-generate help texts from end-of-line comments.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># See https://marmelab.com/blog/2016/02/29/auto-documented-makefile.html
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">&lt;/span>&lt;span class="nf">.PHONY&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">help&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">USAGE_TEXT&lt;/span> &lt;span class="o">:=&lt;/span> Usage: make &lt;span class="o">[&lt;/span>make-options&lt;span class="o">]&lt;/span> &amp;lt;target&amp;gt; &lt;span class="o">[&lt;/span>options&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">HELPTEXT_HEADING&lt;/span> &lt;span class="o">:=&lt;/span> Common Targets:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nf">help&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="c">## Show this help info.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">&lt;/span> @printf &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="k">$(&lt;/span>USAGE_TEXT&lt;span class="k">)&lt;/span>&lt;span class="s2">\n&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> @for makefile in &lt;span class="k">$(&lt;/span>MAKEFILE_LIST&lt;span class="k">)&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> echo&lt;span class="p">;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> grep &lt;span class="s1">&amp;#39;^HELPTEXT_HEADING := &amp;#39;&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$$&lt;/span>&lt;span class="s2">makefile&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> sed -E &lt;span class="s1">&amp;#39;s#.* := (.*)#\1#&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> grep -E &lt;span class="s1">&amp;#39;^[a-zA-Z_\.-]+:.*?## .*$$&amp;#39;&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$$&lt;/span>&lt;span class="s2">makefile&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> sort &lt;span class="p">|&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> awk &lt;span class="s1">&amp;#39;BEGIN {FS = &amp;#34;:.*?## &amp;#34;}; {printf &amp;#34; %-27s %s\n&amp;#34;, $$1, $$2}&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> &lt;span class="k">done&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># Split out Make modules into `helpers/`.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">&lt;/span>&lt;span class="err">-include&lt;/span> &lt;span class="err">helpers/*.mk&lt;/span> &lt;span class="err">helpers/**/*.mk&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then I extend this either with targets directly in the &lt;code>Makefile&lt;/code> or, mostly later on, with separate &lt;code>.mk&lt;/code> files in the &lt;code>helpers/&lt;/code> directory.&lt;/p>
&lt;p>If I want to mark a target &amp;ldquo;public&amp;rdquo; or document its usage, I will just append &lt;code> ## Usage.&lt;/code> to the end of the target&amp;rsquo;s line.
One example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-make" data-lang="make">&lt;span class="line">&lt;span class="cl">&lt;span class="nf">bootstrap&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">cluster&lt;/span>.&lt;span class="n">local&lt;/span> &lt;span class="c">## Bootstrap base resources. Required parameters: cluster_name.
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>My First KubeCon/CloudNativeCon Experience</title><link>https://jscheytt.github.io/p/my-first-kubecon/cloudnativecon-experience/</link><pubDate>Fri, 20 May 2022 12:23:53 +0200</pubDate><guid>https://jscheytt.github.io/p/my-first-kubecon/cloudnativecon-experience/</guid><description>&lt;img src="https://events.linuxfoundation.org/wp-content/uploads/2022/03/kubecon-eu-2022-web-021621_snackable.jpg" alt="Featured image of post My First KubeCon/CloudNativeCon Experience" />&lt;p>&lt;img src="https://jscheytt.github.io/p/my-first-kubecon/cloudnativecon-experience/team-entry.jpg"
width="348"
height="465"
srcset="https://jscheytt.github.io/p/my-first-kubecon/cloudnativecon-experience/team-entry_hu14568617744362019523.jpg 480w, https://jscheytt.github.io/p/my-first-kubecon/cloudnativecon-experience/team-entry_hu4901296019766841102.jpg 1024w"
loading="lazy"
alt="Me and 4 colleagues standing in front of the main KubeCon entry"
class="gallery-image"
data-flex-grow="74"
data-flex-basis="179px"
>&lt;/p>
&lt;p>This week I went to KubeCon/CloudNativeCon in Valencia, Spain, together with four of my colleagues, both from mimacom Germany and mimacom Spain.&lt;/p>
&lt;blockquote>
&lt;p>Thanks a lot to mimacom for sponsoring our attending!&lt;/p>
&lt;/blockquote>
&lt;p>What I want to talk about in this blog post is not a summary of talks or topics but just how I experienced the whole event.
Is was the first KubeCon I have ever attended, and we came on Monday, left on Friday, so we effectively only attended Tuesday through Thursday (the middle 3 of the 5 days).&lt;/p>
&lt;h2 id="about-kubecon">About KubeCon
&lt;/h2>&lt;p>KubeCon is &lt;em>the&lt;/em> regular conference for all things Kubernetes and everything happening in the Cloud Native space.
Since the last few years, it has been held 2 times a year, always alternating between Europe and North America.&lt;/p>
&lt;p>It is &lt;strong>massive&lt;/strong>.
Really massive.
Imagine the biggest fair venue you know of, maybe double that area, and then fill it (and the surrounding city) with more than 6,000 developers - that&amp;rsquo;s how massive it is.&lt;/p>
&lt;p>But this mass of people only comes from day 3 to day 5 (Wednesday through Friday).
On the first two days it is &lt;em>a lot less crowded&lt;/em> because that is the time where the so called &amp;ldquo;&lt;strong>Co-located Events&lt;/strong>&amp;rdquo; take place.
These are smaller sub-conferences within KubeCon which focus on a specific topic.
Some of these events this time were: Service Mesh Con, Cloud Native Security Con, Kubernetes on Edge Day, and GitOpsCon.
(I think there were about 15 distinct events in total.)&lt;/p>
&lt;h2 id="disclaimers">Disclaimers
&lt;/h2>&lt;p>To be completely honest up-front, &lt;em>GitOpsCon was the main reason&lt;/em> I wanted to attend KubeCon at all in the first place, so my view on KubeCon as a whole is biased.&lt;/p>
&lt;p>Additionally, I am the type of person who easily gets overwhelmed when staying in very crowded places for longer periods of time.
I can handle it, but not without proper self-care and not very well for multiple days in a row.
This does, admittedly, not put me in a very well-equipped position for a fair like this - just wanted to mention this so you know which color the glasses have through which you now get a view unto this event 😉.&lt;/p>
&lt;p>&lt;img src="https://jscheytt.github.io/p/my-first-kubecon/cloudnativecon-experience/gitopscon-slide.jpg"
width="4032"
height="3024"
srcset="https://jscheytt.github.io/p/my-first-kubecon/cloudnativecon-experience/gitopscon-slide_hu9978890260749562480.jpg 480w, https://jscheytt.github.io/p/my-first-kubecon/cloudnativecon-experience/gitopscon-slide_hu659269314525248521.jpg 1024w"
loading="lazy"
alt="The first slide of GitOpsCon"
class="gallery-image"
data-flex-grow="133"
data-flex-basis="320px"
>&lt;/p>
&lt;h2 id="gitopscon">GitOpsCon
&lt;/h2>&lt;p>One lesson I have drawn from my first KubeCon is that &lt;strong>the Co-located Events are the real thing&lt;/strong>.
That, of course, only applies if there is a Co-located Event in which you have a deep interest 😉.&lt;/p>
&lt;p>My heart beats for GitOps and its much wider adoption, so I attended GitOpsCon, which is organized by &lt;a class="link" href="https://opengitops.dev/" target="_blank" rel="noopener"
>OpenGitOps&lt;/a> (or the GitOps Working Group (WG), which is sort of the official committee behind it).
GitOpsCon was one of the bigger Co-located Events and even offered multiple talks in parallel during some slots.&lt;/p>
&lt;p>One person I was very much looking forward to meeting was Chris Short from AWS EKS (formerly RedHat).
If you have not heard of him before, do check out his newsletter &lt;a class="link" href="https://devopsish.com/" target="_blank" rel="noopener"
>DevOps&amp;rsquo;ish&lt;/a>!
It is one of the three weekly newsletters I regularly read, and I do read very few.&lt;/p>
&lt;p>And &amp;hellip; it worked out!
He was holding the first keynote together with Dan Garfield (from Codefresh, ArgoCD maintainer) and Scott Rigby (from Weaveworks, both a Helm and a FluxCD maintainer), and I was able to just walk up to him in the time between two sessions and express my gratitude for his curating that newsletter 🤗!&lt;/p>
&lt;p>There were very interesting talks, but sometimes it&amp;rsquo;s funny how the things that stick with you after a talk are not what the talk was actually all about.
I was for instance sitting in a talk by Michael Irwin about creating a platform for campus students to run workloads in Kubernetes, but what the talk really did for me was losing my fair of Helm - simply because of the fast and uncomplicated way he ran &lt;code>helm create&lt;/code> during a demo in that talk.&lt;/p>
&lt;p>What was especially rewarding, engaging, and exciting was getting into conversation with the speakers after their talks.
I am convinced it really makes a huge difference that the barrier to asking is so low when you are together in one room in-person.
Sometimes you can easily get clarifications on unclear points, sometimes you discover together that something is not yet known for both of you, sometimes you discuss about the industry as a whole and in which direction it evolves or should evolve.
One speaker (Andrew Block from RedHat, he talked about Secrets Management with GitOps) even photographed my badge in order to contact me after the event because he could not yet answer a detail question I had!
I am deeply grateful for the opportunity of diving into the community of people in the Cloud Native space.&lt;/p>
&lt;h2 id="new-ideas">New Ideas
&lt;/h2>&lt;p>Luckily, not only GitOpsCon exposed me to new ideas - that also happened (and happened a lot!) with the talks during the other two days:
I heard about the &lt;a class="link" href="https://kccnceu2022.sched.com/event/ytpE/reproducing-production-issues-in-your-ci-pipeline-using-ebpf-matthew-leray-speedscale-omid-azizi-new-relic" target="_blank" rel="noopener"
>Kernel-intercepting eBPF technology&lt;/a>, something like &amp;ldquo;Serverless CloudFoundry&amp;rdquo; with Knative, and using machine learning to optimize resource requests and limits for SLOs, among many others.
If you want to see which (few) talks I attended, see &lt;a class="link" href="https://kccnceu2022.sched.com/jscheytt?iframe=no" target="_blank" rel="noopener"
>my schedule in Sched&lt;/a>.&lt;/p>
&lt;p>The cool thing with something like Kubernetes and its ecosystem is that you can very quickly &lt;strong>experiment without a big setup investment&lt;/strong>.
I e.g. heard about Tekton as a side note and decided to directly give it a go during one of the other talks, and I was directly able to walk through the Getting Started guide to verify how nicely it works!&lt;/p>
&lt;h2 id="starting-to-see-patterns">Starting To See Patterns
&lt;/h2>&lt;p>Let me note down a few things I found remarkable and where we as an industry can maybe find better ways of achieving things:&lt;/p>
&lt;ul>
&lt;li>Not only do we have many tools in the Cloud Native ecosystem (I will not make the next joke about the &lt;a class="link" href="https://landscape.cncf.io/" target="_blank" rel="noopener"
>CNCF Landscape&lt;/a>, you can invent one yourself 😄),
it also seems to me that everybody starts to create another copy-paste version of the &lt;a class="link" href="https://kubernetes.io/docs/tasks/access-application-cluster/web-ui-dashboard/" target="_blank" rel="noopener"
>standard Kubernetes Dashboard&lt;/a> but just filtered down to their CRDs.
&lt;ul>
&lt;li>The &lt;a class="link" href="https://github.com/tektoncd/dashboard/blob/main/docs/dashboard-ui.jpg" target="_blank" rel="noopener"
>Tekton Dashboard&lt;/a> is a prime example of this, but they are not the only ones who are either actively doing this or considering building their own UI.&lt;/li>
&lt;li>The Kubernetes Dashboard seems to have a &lt;a class="link" href="https://github.com/kubernetes/dashboard/blob/master/docs/plugins/README.md" target="_blank" rel="noopener"
>plugin system&lt;/a>, so why don&amp;rsquo;t we all use more of this?&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>I have never used ArgoCD because I thought &amp;ldquo;well, I have learned how to use FluxCD and use it, why should I learn another CD tool?&amp;rdquo;
&lt;ul>
&lt;li>And like many people, I have been living in a &lt;em>false dichotomy&lt;/em> that GitOps is &lt;em>either Flux or Argo&lt;/em> - but that misses the point!&lt;/li>
&lt;li>&lt;a class="link" href="https://gitopsconeu22.sched.com/event/zrqT/implementing-preview-environments-with-gitops-in-kubernetes-francois-le-pape-remazing" target="_blank" rel="noopener"
>One talk at GitOpsCon&lt;/a> showed pretty nicely how you can &lt;strong>use both together&lt;/strong>: Use FluxCD as a platform team to deploy your infrastructure, and deploy Argo for your developers to deploy and manage their applications.&lt;/li>
&lt;li>Just one example: I love Flux, but managing preview environments from PRs is a lot of work (mostly YAML generation), but Argo has a dedicated &lt;a class="link" href="https://argocd-applicationset.readthedocs.io/en/stable/Generators-Pull-Request/" target="_blank" rel="noopener"
>Pull Request Generator&lt;/a> to solve this in just about 10 lines of code.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="meeting-maintainers">Meeting Maintainers
&lt;/h2>&lt;p>If you go to KubeCon only for the talks, you are probably doing it wrong - watch the talks virtually, it is a lot less effort.
There is a whole big area with booths from all kinds of vendors in the Cloud Native space.
One corner of this space is reserved for maintainers of a few Open Source tools.&lt;/p>
&lt;p>I especially enjoyed going up to these people and more than anything &lt;strong>thanking them&lt;/strong> for the tremendous work they are doing and how grateful I am for getting to work with these tools (almost) every day!
Among these there were especially &lt;a class="link" href="https://fluxcd.io/" target="_blank" rel="noopener"
>FluxCD&lt;/a> and &lt;a class="link" href="https://crossplane.io/" target="_blank" rel="noopener"
>Crossplane&lt;/a>, but also the often overlooked &lt;a class="link" href="https://cert-manager.io/" target="_blank" rel="noopener"
>cert-manager&lt;/a>.&lt;/p>
&lt;p>&lt;img src="https://jscheytt.github.io/p/my-first-kubecon/cloudnativecon-experience/cert-manager-booth.jpg"
width="2016"
height="1512"
srcset="https://jscheytt.github.io/p/my-first-kubecon/cloudnativecon-experience/cert-manager-booth_hu12068714087124793876.jpg 480w, https://jscheytt.github.io/p/my-first-kubecon/cloudnativecon-experience/cert-manager-booth_hu3156008687081460490.jpg 1024w"
loading="lazy"
alt="At the cert-manager booth"
class="gallery-image"
data-flex-grow="133"
data-flex-basis="320px"
> &lt;img src="https://jscheytt.github.io/p/my-first-kubecon/cloudnativecon-experience/certificate.jpg"
width="1008"
height="756"
srcset="https://jscheytt.github.io/p/my-first-kubecon/cloudnativecon-experience/certificate_hu12023002589570344671.jpg 480w, https://jscheytt.github.io/p/my-first-kubecon/cloudnativecon-experience/certificate_hu1318368370646711872.jpg 1024w"
loading="lazy"
alt="My certificate - so cute 🤗"
class="gallery-image"
data-flex-grow="133"
data-flex-basis="320px"
>&lt;/p>
&lt;p>The folks at the cert-manager booth were especially creative in creating an actual SSL certificate for your email address and then printing and even &lt;em>stamping it with a wax seal&lt;/em>!
Btw do go and check out &lt;a class="link" href="https://docs.google.com/forms/d/e/1FAIpQLSfLX4SQEC0phxVLB2shSzv2s__IDCB6GmlnvsqQ06CD0IYOeA/viewform" target="_blank" rel="noopener"
>their short survey about usage in production clusters&lt;/a> to enable them to become a graduated CNCF project.&lt;/p>
&lt;p>Some of the tools represented in the maintainers&amp;rsquo; area were still somewhat new to me.
The great thing was that I could just walk up to them and ask them for a short demo to understand the usage and the difference to other tools.
Special thanks to the folks at the ArgoCD, Backstage, and Buildpacks booths!&lt;/p>
&lt;h2 id="favorite-quotes">Favorite Quotes
&lt;/h2>&lt;p>I am going to close with some wise words people have said on this conference:&lt;/p>
&lt;blockquote>
&lt;p>If it&amp;rsquo;s not in Git, it&amp;rsquo;s just a rumor.&lt;/p>
&lt;/blockquote>
&lt;p>RedHat printed T-shirts for GitOpsCon with this saying - they were gone quicker than you could queue in at their booth (I did not get one unfortunately &amp;hellip;).&lt;/p>
&lt;blockquote>
&lt;p>What is software? Software is code while it is running, code with electricity applied to it.&lt;/p>
&lt;/blockquote>
&lt;p>Justin Garrison in the context of &amp;ldquo;&lt;a class="link" href="https://gitopsconeu22.sched.com/event/zrr3/infrastructure-as-software-with-gitops-justin-garrison-amazon" target="_blank" rel="noopener"
>Infrastructure as Software&lt;/a>&amp;rdquo; and why GitOps is such a breakthrough for this.&lt;/p>
&lt;blockquote>
&lt;p>Kubernetes is the industrial revolution for server computing, that&amp;rsquo;s how fundamental it is.&lt;/p>
&lt;/blockquote>
&lt;p>Lucas Käldström in his talk &amp;ldquo;&lt;a class="link" href="https://kccnceu2022.sched.com/event/ytr4/understanding-kubernetes-through-real-world-phenomena-and-analogies-lucas-kaldstrom" target="_blank" rel="noopener"
>Understanding Kubernetes Through Real-World Penomena&lt;/a>&amp;rdquo; (very recommended!).&lt;/p></description></item><item><title>An Interpretation of Psalm 45</title><link>https://jscheytt.github.io/p/an-interpretation-of-psalm-45/</link><pubDate>Wed, 13 Apr 2022 18:04:52 +0200</pubDate><guid>https://jscheytt.github.io/p/an-interpretation-of-psalm-45/</guid><description>&lt;p>&lt;a class="link" href="https://www.bibleserver.com/ESV.NIV/Psalm45" target="_blank" rel="noopener"
>Psalm 45&lt;/a> celebrates a royal wedding.
The first part addresses the groom and the second addresses (mostly) the bride.
I am focussing on this second part verses 10 through 17, and I interpret it in one of the ways I see very much fit:
With the groom being both God the Father and God the Son, and the church as His bride.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>ESV/NIV&lt;/th>
&lt;th>Interpretation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Hear, O daughter, and consider, and incline your ear&lt;/td>
&lt;td>Zone in on me with all your attention, my daughter&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Forget your people and your father’s house&lt;/td>
&lt;td>Leave behind what has given you earthly security by trusting in flesh&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>And the king will desire your beauty&lt;/td>
&lt;td>I look at you with eyes of love; you are so beautiful and I, your Bridegroom, desire you&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Since he is your lord, bow to him&lt;/td>
&lt;td>Surrender yourself to Me completely with your whole life&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>The city of Tyre will come with a gift&lt;/td>
&lt;td>Then you will gain so much more than what you left behind: You are showered with gifts in My proximity and will no longer live in poverty&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>People of wealth will seek your favour&lt;/td>
&lt;td>You are no longer the Deserted Wife but the Desired One&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>All glorious is the princess within her chamber&lt;/td>
&lt;td>To your own joy you discover ever more the beauty with which I made you&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Her gown is interwoven with gold&lt;/td>
&lt;td>Even outsiders marvel at your beauty and praise Me for it&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>In embroidered garments she is led to the king&lt;/td>
&lt;td>I draw you ever closer to Me, your King&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Her virgin companions follow her – those brought to be with her&lt;/td>
&lt;td>You will not stay alone in this: You gain real companions who journey towards the King together with you&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>With joy and gladness they are led along&lt;/td>
&lt;td>In your devotion to Me you experience overflowing joy and rejoicing&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>As they enter the palace of the king&lt;/td>
&lt;td>Your home is with Me&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>In place of your fathers shall be your sons&lt;/td>
&lt;td>Your life is made fertile and provides a space for others to grow&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>You will make them princes in all the earth&lt;/td>
&lt;td>Through the unfolding of My life in yours, your sons and daughters will exercise their responsibility in this world and reign in My Kingdom&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>I will cause your name to be remembered in all generations&lt;/td>
&lt;td>People in all nations will see this&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Therefore nations will praise you forever and ever&lt;/td>
&lt;td>And they will praise the Father, the Son, and the Spirit throughout all eternity&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>You can Gitopsify your Ansible</title><link>https://jscheytt.github.io/p/you-can-gitopsify-your-ansible/</link><pubDate>Tue, 01 Mar 2022 08:34:20 +0100</pubDate><guid>https://jscheytt.github.io/p/you-can-gitopsify-your-ansible/</guid><description>&lt;p>I have a &lt;a class="link" href="https://github.com/jscheytt/dotfiles" target="_blank" rel="noopener"
>dotfiles repository&lt;/a> for setting up my MacOS machine easily and reproducibly.
For this I am mostly using Ansible, just slightly wrapping it with Make and seasoning it with a pinch of Shell.&lt;/p>
&lt;p>The core piece of this repository is a &lt;code>Brewfile&lt;/code> and a collection of &lt;a class="link" href="https://github.com/jscheytt/dotfiles/blob/main/files/dotfiles/.oh-my-zsh/custom/aliases.zsh" target="_blank" rel="noopener"
>Shell aliases&lt;/a> and &lt;a class="link" href="https://github.com/jscheytt/dotfiles/blob/main/files/dotfiles/.oh-my-zsh/custom/functions.sh" target="_blank" rel="noopener"
>functions&lt;/a>.
I don&amp;rsquo;t regularly run the Ansible playbook itself because I created it for initially setting up a machine.
The only thing I run very frequently is the &lt;a class="link" href="https://github.com/jscheytt/dotfiles/blob/main/files/dotfiles/.oh-my-zsh/custom/functions.sh#L107" target="_blank" rel="noopener"
>upgrade&lt;/a> command which includes persisting new Brew formulae to the &lt;code>Brewfile&lt;/code>.&lt;/p>
&lt;p>At the same time I have come to love applying &lt;a class="link" href="https://opengitops.dev/" target="_blank" rel="noopener"
>GitOps principles&lt;/a> to everything I work with.
Just the other day I was &lt;a class="link" href="https://github.com/jscheytt/dotfiles/commit/c4278a0b8bbe1f4875efd56ceffc43459d919d1f" target="_blank" rel="noopener"
>moving some commands&lt;/a> (in the vein of &amp;ldquo;global Git pull&amp;rdquo;) out of said &lt;code>upgrade&lt;/code> command into a cronjob.&lt;/p>
&lt;p>And then it hit me:
If I create a cronjob for running my Ansible playbook &lt;em>through the playbook itself&lt;/em>, I have GitOps-like reconciliation!&lt;/p>
&lt;p>Let&amp;rsquo;s do it in just a few lines of yaml:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Ensure dotfiles are applied&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">cron&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Ensure dotfiles are applied&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">minute&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;0&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">hour&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;9&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">weekday&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;1-5&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># on workdays&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">job&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">make -f &amp;#34;{{ ansible_env.PWD }}&amp;#34;/Makefile build&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>The Git Commands You Wish You Always Had</title><link>https://jscheytt.github.io/p/the-git-commands-you-wish-you-always-had/</link><pubDate>Mon, 28 Feb 2022 13:15:29 +0100</pubDate><guid>https://jscheytt.github.io/p/the-git-commands-you-wish-you-always-had/</guid><description>&lt;p>Recently I wanted to do a bulk cleanup on some GitHub repositories I am responsible for, deleting old branches that have already been merged into the default branches.
I first considered performing it through the GitHub API, but then I decided to try doing it via Git itself.&lt;/p>
&lt;p>After I had begun dabbling with a few wrapper scripts, I suddenly remembered something which massively simplified my strategy:
&lt;strong>Git Aliases&lt;/strong>.
These are Git commands you can define yourself, either via CLI or in the Gitconfig file.&lt;/p>
&lt;p>With this article, I want to introduce what I learned about Git aliases – and in the process, you get all the aliases I defined for my cleanup 😉&lt;/p>
&lt;h2 id="defining-shortcuts">Defining Shortcuts
&lt;/h2>&lt;p>Many articles about Git aliases explain only the &lt;strong>shortcut side&lt;/strong>.
They show e.g. how you can abbreviate &lt;code>git checkout&lt;/code> to &lt;code>git co&lt;/code> by running &lt;code>git config --global alias.co checkout&lt;/code>.
Alternatively to the CLI command, you can add this section to your &lt;code>~/.gitconfig&lt;/code> file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="line">&lt;span class="cl">&lt;span class="k">[alias]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">co&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">checkout&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Nowadays, with the &lt;a class="link" href="https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/git" target="_blank" rel="noopener"
>Git plugin of oh-my-zsh&lt;/a>, I don&amp;rsquo;t feel there is a great need for such shortcuts.
Let&amp;rsquo;s instead talk about &lt;strong>actual custom commands&lt;/strong>:&lt;/p>
&lt;h2 id="with-parameters">With Parameters
&lt;/h2>&lt;p>If you use an &lt;em>exclamation mark&lt;/em> before your command, you can run any Shell command you want, even with parameters.
The following example will let you do e.g. &lt;code>git cat 2eea778 package.json&lt;/code> to get the file contents of a file at a certain revision:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="line">&lt;span class="cl">&lt;span class="k">[alias]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">; Output file contents from any revision&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">; See https://stackoverflow.com/a/54819889/6435726&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">cat&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">!git show &amp;#34;$1:$2&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="pass-it-on">Pass It On
&lt;/h2>&lt;p>Piping output into other commands is available out of the box.
Executing multiple commands is just a &lt;code>&amp;amp;&amp;amp;&lt;/code> away.&lt;/p>
&lt;p>You may want to break your command into &lt;em>multiple lines&lt;/em>:
Do so by wrapping your command into &lt;strong>quotes&lt;/strong> and prepending every new line with a &lt;strong>backslash&lt;/strong>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">; What is the default branch of this repo?&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">; The first command asks the remote if the default branch was changed.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">default-branch&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;! \
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> git remote set-head origin -a &amp;gt; /dev/null \
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> &amp;amp;&amp;amp; git rev-parse --abbrev-ref origin/HEAD \
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> | sed &amp;#39;s#origin/##&amp;#39;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can also use &lt;em>subshells&lt;/em>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">; Switch to the default branch.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">switch-default&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">!git switch $(git default-branch)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="escaping-can-be-tricky">Escaping Can Be Tricky
&lt;/h2>&lt;p>If you want to have a &lt;em>literal backslash&lt;/em> in the resulting Shell command, you have to escape it.
Pay attention to the &lt;code>grep&lt;/code> patterns in the following aliases:
Every double backslash of this pattern becomes a single backslash when Git passes the command to the Shell.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">; Which branches have been merged into the default branch on the remote?&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">; For safety, manually add names of long-lived branches to the grep pattern.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">remotely-merged-branches&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;! \
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> git branch --all --merged $(git default-branch) \
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> | { grep -vE &amp;#39;^\\*|(\\b($(git default-branch)|develop|main|master|quality)\\b)&amp;#39; || true; } \
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> | sed &amp;#39;s#remotes/origin/##&amp;#39;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">; Which local branches are not present on the remote (but were once)?&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">; NOTE: `git remote prune origin` only deletes local snapshots&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">; of remote branches that were deleted on the remote.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">; See https://stackoverflow.com/a/48820687/6435726&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">; It will not delete local branches where the remote branch is &amp;#34;gone&amp;#34;.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">; This command finds these local branches.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">local-branches-without-remote&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;! \
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> git remote prune origin &amp;amp;&amp;amp; \
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> git branch --list --format &amp;#39;%(if:equals=[gone])%(upstream:track)%(then)%(refname)%(end)&amp;#39; \
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> | awk NF \
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> | sed &amp;#39;s#refs/heads/##&amp;#39;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I think these are the dangers of every templating language:
You have to account for special characters - but if these special characters happen to be special in someone else&amp;rsquo;s language, things can become unexpectedly complicated.
(Think about Makefiles and &lt;code>$(variables)&lt;/code> vs. &lt;code>$$variables&lt;/code> in rules.)&lt;/p>
&lt;h2 id="parameters-pt-2-default-values">Parameters Pt. 2: Default Values
&lt;/h2>&lt;p>As with any other Shell function, you can not only have positional parameters but you can also give them default values.
The following alias has a &lt;em>delete flag&lt;/em> that defaults to the safe behavior, but you can overwrite it with &lt;code>git delete-local-branches-without-remote -D&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">; Delete local branches that are not present on the remote&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">; (safely, including warnings).&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">; You can ignore the warnings by passing &amp;#34;-D&amp;#34; as a parameter.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">; NOTE: `git remote prune origin` only deletes local snapshots&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">; of remote branches that were deleted on the remote.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">; It will not delete local branches where the remote branch is &amp;#34;gone&amp;#34;.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">delete-local-branches-without-remote&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;! \
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> git local-branches-without-remote \
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> | xargs -I {} git branch ${1:-&amp;#39;-d&amp;#39;} {}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This last alias is what finally deletes the remote branches I wanted to target.
It also demonstrates nicely how you can use &lt;em>xargs&lt;/em> to run every Shell command as if it was capable of handling &lt;code>stdin&lt;/code> natively:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">; Delete branches on the remote which were merged.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">push-delete-remotely-merged-branches&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;! \
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> git switch-default &amp;amp;&amp;amp; \
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> git remotely-merged-branches \
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> | xargs -I {} git push origin --delete {}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="debugging">Debugging
&lt;/h2>&lt;p>If you encounter an error message, you can increase the verbosity with this environment variable:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">GIT_TRACE&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Deactivate it afterward by closing your terminal session or explicitly with &lt;code>unset GIT_TRACE&lt;/code>.&lt;/p>
&lt;h2 id="bringing-it-all-together-multiple-repositories">Bringing It All Together: Multiple Repositories
&lt;/h2>&lt;p>As a developer, chances are high you have &lt;em>more than just one&lt;/em> Git repository on your machine.
For many everyday use cases (like keeping all your local clones up-to-date), I have been using &lt;a class="link" href="https://github.com/earwig/git-repo-updater" target="_blank" rel="noopener"
>git-repo-updater&lt;/a> with a lot of success and ease.&lt;/p>
&lt;p>But now I discovered I can use it to execute arbitrary commands (and also Git aliases 😉) in multiple Git repos.
With the following Shell function I am wrapping &lt;code>gitup&lt;/code> for convenience:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Execute a Git command on all Git repositories&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># $1: Path with Git repositories in subdirectories&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Rest of parameters: Git command (e.g. &amp;#34;status&amp;#34;)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">function&lt;/span> git-xargs&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">local&lt;/span> &lt;span class="nv">filepath&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$1&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># shellcheck disable=SC2116&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> gitup --depth -1 &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$filepath&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> --exec &lt;span class="s2">&amp;#34;git &lt;/span>&lt;span class="k">$(&lt;/span>&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="p">@:&lt;/span>&lt;span class="nv">2&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="k">)&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>And now I can finally clean up all branches with just one command (and quite pretty output):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">git-xargs ~/Documents push-delete-remotely-merged-branches
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git-xargs ~/Documents delete-local-branches-without-remote
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>kubectl can explain all resource types in detail</title><link>https://jscheytt.github.io/p/kubectl-can-explain-all-resource-types-in-detail/</link><pubDate>Tue, 01 Feb 2022 14:53:18 +0100</pubDate><guid>https://jscheytt.github.io/p/kubectl-can-explain-all-resource-types-in-detail/</guid><description>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-console" data-lang="console">&lt;span class="line">&lt;span class="cl">&lt;span class="gp">$&lt;/span> kubectl explain statefulset
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="go">KIND: StatefulSet
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="go">VERSION: apps/v1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="go">&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="go">DESCRIPTION:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="go"> StatefulSet represents a set of pods with consistent identities. Identities
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="go"> are defined as:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="go"> - Network: A single stable DNS and hostname.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="go"> - Storage: As many VolumeClaims as requested. The StatefulSet guarantees
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="go"> that a given network identity will always map to the same storage identity.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="go">&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="go">FIELDS:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="go"> apiVersion &amp;lt;string&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="go"> APIVersion defines the versioned schema of this representation of an
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="go"> object. Servers should convert recognized schemas to the latest internal
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="go"> value, and may reject unrecognized values. More info:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="go"> https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="go">&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="go"> kind &amp;lt;string&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="go"> Kind is a string value representing the REST resource this object
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="go"> represents. Servers may infer this from the endpoint the client submits
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="go"> requests to. Cannot be updated. In CamelCase. More info:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="go"> https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="go">&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="go"> metadata &amp;lt;Object&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="go">&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="go"> spec &amp;lt;Object&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="go"> Spec defines the desired identities of pods in this set.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="go">&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="go"> status &amp;lt;Object&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="go"> Status is the current status of Pods in this StatefulSet. This data may be
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="go"> out of date by some window of time.
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I guess this will reduce a lot of my googling in future.&lt;/p>
&lt;p>And it even works on nested fields!&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-console" data-lang="console">&lt;span class="line">&lt;span class="cl">&lt;span class="gp">$&lt;/span> kubectl explain deployment.spec.template.spec.containers
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="go">KIND: Deployment
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="go">VERSION: apps/v1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="go">&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="go">RESOURCE: containers &amp;lt;[]Object&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="go">&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="go">DESCRIPTION:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="go"> List of containers belonging to the pod. Containers cannot currently be
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="go"> added or removed. There must be at least one container in a Pod. Cannot be
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="go"> updated.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="go">&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="go"> A single application container that you want to run within a pod.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="go">&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="go">FIELDS:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="go"> args &amp;lt;[]string&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="go"> Arguments to the entrypoint. The docker image&amp;#39;s CMD is used if this is not
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="go"> provided. Variable references $(VAR_NAME) are expanded using the
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="go"> container&amp;#39;s environment. If a variable cannot be resolved, the reference in
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="go"> the input string will be unchanged. The $(VAR_NAME) syntax can be escaped
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="go"> with a double $$, ie: $$(VAR_NAME). Escaped references will never be
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="go"> expanded, regardless of whether the variable exists or not. Cannot be
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="go"> updated. More info:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="go"> https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="go">&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="go"> command &amp;lt;[]string&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="go"> Entrypoint array. Not executed within a shell. The docker image&amp;#39;s
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="go"> ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="go"> are expanded using the container&amp;#39;s environment. If a variable cannot be
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="go"> resolved, the reference in the input string will be unchanged. The
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="go"> $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME).
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="go"> Escaped references will never be expanded, regardless of whether the
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="go"> variable exists or not. Cannot be updated. More info:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="go"> https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="go">&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="go"> env &amp;lt;[]Object&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="go"> List of environment variables to set in the container. Cannot be updated.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="go">&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="go"> ...
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Trying to simplify k8s labels can be dangerous for your routing</title><link>https://jscheytt.github.io/p/trying-to-simplify-k8s-labels-can-be-dangerous-for-your-routing/</link><pubDate>Fri, 03 Dec 2021 10:43:01 +0100</pubDate><guid>https://jscheytt.github.io/p/trying-to-simplify-k8s-labels-can-be-dangerous-for-your-routing/</guid><description>&lt;p>Today I was refactoring a bigger configuration setup that is built with &lt;a class="link" href="https://kustomize.io/" target="_blank" rel="noopener"
>kustomize&lt;/a>.
I see kustomize as a light-weight way of packaging multiple Kubernetes manifests, together with a little bit of logic.&lt;/p>
&lt;p>The &lt;strong>base kustomization&lt;/strong> of the application config repo I was refactoring looked something like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">kustomize.config.k8s.io/v1beta1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Kustomization&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">resources&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">manifests/cronjob-backup.yaml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">manifests/deployment.yaml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">manifests/ingress.yaml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">manifests/pod-disruption-budget.yaml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">manifests/service.yaml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">commonAnnotations&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">source&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">java&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tenant&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">acme&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">configMapGenerator&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">acme-app-config&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">files&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">configs/10-local.properties&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">configs/30-local.properties&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">configs/40-local.properties&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I have an almost pathologic tendency to simplify and DRY everything up that I find, especially in configuration code.
And as I saw a lot of &lt;strong>repeating Labels&lt;/strong> in the manifests, I thought &amp;ldquo;Well, let&amp;rsquo;s just unify them.&amp;rdquo;&lt;/p>
&lt;p>So I went ahead, removed the repetitive Labels from the manifests and added the following block to the kustomization:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">commonLabels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">app&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">acme-app&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I knew a bit about Kubernetes Services and that they &lt;em>use Labels to find the Pods to which they should direct their traffic&lt;/em>.
That&amp;rsquo;s why I thoroughly verified that after my change the Service and the Deployment would still have &lt;strong>the same selector labels&lt;/strong>.
🤗 Nothing seemed off &amp;hellip;&lt;/p>
&lt;p>I committed and pushed my changes, and after the Deployment had finished restarting, I clicked through the application.
👀 Oddly enough some of the requests succeeded as expected, but some kept failing with a 💥 &lt;code>502 Bad Gateway&lt;/code> error!
At first I tried troubleshooting quickly, but soon I opted for just reverting my changes and pushing the revert commits to undo my changes.&lt;/p>
&lt;p>For debugging I compared the output of &lt;code>kustomize build&lt;/code> before and after my changes.
After some scrolling I came across the &lt;strong>CronJobs&lt;/strong> I defined for backup&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>.&lt;/p>
&lt;p>I should probably not have been surprised that the CronJob also had the same Labels I gave it via the kustomization.
But now a suspicion started sneaking in:&lt;/p>
&lt;blockquote>
&lt;p>What if the &lt;strong>completed Pods&lt;/strong> of the CronJob received traffic from the Service because they had &lt;strong>the same Labels&lt;/strong>?&lt;/p>
&lt;/blockquote>
&lt;p>Following this idea, I refactored my configs a bit.
Soon, I was able to ensure that requests to the Service would only point to my target Deployment (and not to any other Pods):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-diff" data-lang="diff">&lt;span class="line">&lt;span class="cl">&lt;span class="gh">diff --git a/base/kustomization.yaml b/base/kustomization.yaml
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gh">index 6c1c6f7..b77b0fc 100644
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gh">&lt;/span>&lt;span class="gd">--- a/base/kustomization.yaml
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gd">&lt;/span>&lt;span class="gi">+++ b/base/kustomization.yaml
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gi">&lt;/span>&lt;span class="gu">@@ -15,7 +15,6 @@ commonAnnotations:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gu">&lt;/span> source: java
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> tenant: acme
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gd">-commonLabels:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gd">- app: acme-app
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gd">&lt;/span> configMapGenerator:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - name: acme-app-config
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gh">diff --git a/base/manifests/deployment.yaml b/base/manifests/deployment.yaml
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gh">index 1e4aa3f..a60a798 100644
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gh">&lt;/span>&lt;span class="gd">--- a/base/manifests/deployment.yaml
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gd">&lt;/span>&lt;span class="gi">+++ b/base/manifests/deployment.yaml
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gi">&lt;/span>&lt;span class="gu">@@ -16,6 +16,9 @@ metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gu">&lt;/span> spec:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> replicas: 1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gi">+ selector:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gi">+ matchLabels:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gi">+ app: acme-app
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gi">&lt;/span> template:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> metadata:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> labels:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gi">+ app: acme-app
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gi">&lt;/span> spec:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> containers:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gh">diff --git a/base/manifests/service.yaml b/base/manifests/service.yaml
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gh">index b05d898..89af021 100644
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gh">&lt;/span>&lt;span class="gd">--- a/base/manifests/service.yaml
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gd">&lt;/span>&lt;span class="gi">+++ b/base/manifests/service.yaml
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gi">&lt;/span>&lt;span class="gu">@@ -10,3 +10,5 @@ spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gu">&lt;/span> - name: api
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> port: 8080
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gi">+ selector:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gi">+ app: acme-app
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>(Notice that the Deployment needs the Label both in &lt;code>.spec.selector.matchLabels&lt;/code> and &lt;code>.spec.template.metadata.labels&lt;/code>!)&lt;/p>
&lt;p>And surely enough, after deploying this fix, the request to the application worked flawlessly 😊✅.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>It does not matter for which purpose I created this CronJob, it could have been any Kubernetes Resource that creates Pods.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>The Universe is Very Big</title><link>https://jscheytt.github.io/p/the-universe-is-very-big/</link><pubDate>Thu, 11 Nov 2021 08:18:44 +0100</pubDate><guid>https://jscheytt.github.io/p/the-universe-is-very-big/</guid><description>&lt;h2 id="what-can-we-compare-the-size-of-the-universe-to">What can we compare the size of the universe to?
&lt;/h2>&lt;p>I was recently starting to wonder about the size of the universe.
It&amp;rsquo;s not like I thought I could really get down to imagining this kind of gargantuan extent.
But I wanted to find a good analogy, so here it goes:&lt;/p>
&lt;p>Imagine the distance furthest distance humans will soon travel: the &lt;strong>distance from Earth to Mars&lt;/strong>.
If you are lucky with planning, the shortest route takes almost an entire year (9 months) in a spaceship.&lt;/p>
&lt;p>Now let&amp;rsquo;s compare this distance to the &lt;strong>size of the observable universe&lt;/strong>.
The ratio between these two distances is in the order of &lt;strong>$10^{16}$&lt;/strong>.
That means there are 16 orders of magnitude in difference between these two lengths.&lt;/p>
&lt;p>What can we compare this to?
Let&amp;rsquo;s scale this down:
We will pretend our planet Earth is the universe.
Now imagine we wanted to drill a hole through the whole planet from one extreme to the other (e.g. from the North Pole to the South Pole).&lt;/p>
&lt;p>If we had started drilling the equivalent of the Earth-Mars distance, how far would we have gotten?
One meter?
A millimeter?
The width of a human hair?&lt;/p>
&lt;p>It turns out, we would have only gotten as far as the size of &lt;strong>one atom&lt;/strong>.&lt;/p>
&lt;h2 id="can-we-even-imagine-this-at-all">Can we even imagine this at all?
&lt;/h2>&lt;p>For me this only starts to scratch the surface of trying to understand the sheer scale of the universe and the God behind it.
The problem with this analogy?
It still does not help a lot because I believe we humans cannot even really imagine the distance between Earth and Mars yet.&lt;/p>
&lt;p>On Earth we comfortably handle thousands, sometimes maybe tens of thousands of kilometers in our brains.
On our beautiful planet, this is the order of magnitude we are (gladly) confined to.
But the travel from Earth to Mars (i.e. the shortest path) is in the 10s of &lt;strong>millions&lt;/strong> of kilometers.
That is three orders of magnitude above what we normally deal with in daily life!
(If all the fuss around &amp;ldquo;orders of magnitude&amp;rdquo; sounds foreign to you, maybe the well-known video &lt;a class="link" href="https://www.youtube.com/watch?v=0fKBhvDjuy0" target="_blank" rel="noopener"
>&amp;ldquo;Powers of Ten&amp;rdquo;&lt;/a> can help you out.)&lt;/p>
&lt;p>I will just state a hypothesis:
&lt;strong>I believe we humans cannot handle more than 12 orders of magnitude.&lt;/strong>
Everything beyond that will just not fit into our brains.&lt;/p>
&lt;p>In everyday life we normally handle about 10 orders of magnitude in space and time.
For space, that is e.g. from 10µm ($10^{-5}$ m) (about the width of a hair) to 10,000 km ($10^{5}$ m) (the &lt;a class="link" href="https://en.wikipedia.org/wiki/10,000_km" target="_blank" rel="noopener"
>distance between Barcelona and LA&lt;/a>).
For time, that is e.g. from 100 ms (a tenth of a second) to 100 years (about $10^{9}$ s).&lt;/p>
&lt;p>If we stretch our imaginations we can go towards tens of thousands of kilometers (now we reach 12 orders of magnitude), and maybe we can begin to imagine 1,000 years and tens of milliseconds.
But I think beyond that we are just lost.
If any object is outside of these ranges we need to scale it up or down and compare it to things within this $10^{12}$ scale.
But if we try to compare things where their ratio is greater than $10^{12}$, our brains are just to tiny to fit these in.&lt;/p>
&lt;h2 id="how-big-is-the-universe-really">How big is the universe really?
&lt;/h2>&lt;p>Now that we start to find words and numbers to describe the limits of our imagination, I think we start to really become capable of talking about how big the universe really is.&lt;/p>
&lt;p>The size of the universe is estimated at multiple tens of billions ($10^{10}$) of lightyears.
One lightyear is roughly $10^{16}$ m, so the size of our universe is in the ballpark of $10^{26}$.
On the other hand, the smallest length that currently fits into our model of the universe is the Planck length at about $10^{-35}$ m.
If we add the absolute values of the exponents, we get the so to speak &amp;ldquo;range of existence&amp;rdquo; of our universe:&lt;/p>
&lt;p>$$
10^{(26+35)} = 10^{61}
$$&lt;/p>
&lt;p>That means our universe exists at about &lt;strong>60 orders of magnitude&lt;/strong>.&lt;/p>
&lt;p>As per my above claim, none of us can even begin to imagine this number.
Just try it and keep in mind that 1 order of magnitude means &lt;em>multiply or divide by 10&lt;/em>.
In analogy, 3 orders of magnitude does not mean &lt;em>multiply or divide by 30&lt;/em> but &lt;em>multiply or divide by 1000&lt;/em>.
That means going from 10 orders of magnitude to 15 means &lt;strong>multiplying by 10,000&lt;/strong>.
You can start to see where this is going — but I bet none of us will ever by able to fully grasp such sizes.&lt;/p>
&lt;p>The above numbers are for space only, but (if I understand that correctly) time is analogous because we are basing it on the same measurements, on the same speed of light (for the upper bound), and the same &lt;a class="link" href="https://en.wikipedia.org/wiki/Planck_constant" target="_blank" rel="noopener"
>Planck constant&lt;/a> (for the lower bound).
At the same time, we have to keep in mind that these 60 orders of magnitude come from limited measurements:
We were only able to discover them because of the finite speed of light and the current age of the universe, so it is likely that our universe is &lt;strong>even bigger&lt;/strong>.&lt;/p>
&lt;p>Our human imagination cannot even begin to nibble at these sizes.
I think our perception is even more logarithmic than linear, so we are already pretty well equipped to perceive and compare these orders of magnitude — our range is just ever so narrow.&lt;/p>
&lt;p>&lt;img src="https://upload.wikimedia.org/wikipedia/commons/e/e7/Observable_universe_logarithmic_illustration.png"
loading="lazy"
alt="An artistic rendition of our universe, drawn at a logarithmic scale with our Sun at the center"
>
&lt;em>An artistic rendition of our universe, drawn at a logarithmic scale with our Sun at the center&lt;/em>&lt;/p>
&lt;h2 id="how-do-we-fit-into-all-this">How do we fit into all this?
&lt;/h2>&lt;p>I have another number with me, a very simple one:
&lt;strong>5 percent&lt;/strong>.
Or, in other words, 0.05.
(Or $5\cdot10^{-2}$ if you like 😉.)&lt;/p>
&lt;p>This is a rough estimation on &lt;em>the amount of actual matter in the universe&lt;/em>.
When looking at the size and distribution of mass and energy in our universe, then typical baryonic matter makes up less than 5 percent of it.&lt;/p>
&lt;p>Savor that slowly:
You and me, animals, atoms, the planets, the stars, even all the galaxies, all these account for &lt;strong>not even one twentieth&lt;/strong> of the universe!
And the rest of it is not even empty:
The universe is said to be filled by &lt;a class="link" href="https://science.nasa.gov/astrophysics/focus-areas/what-is-dark-energy" target="_blank" rel="noopener"
>Dark Energy and Dark Matter&lt;/a>.
(If I could recoin them I would choose the names &lt;em>Invisible Matter&lt;/em> and &lt;em>Invisible Energy&lt;/em>.)&lt;/p>
&lt;p>Of course this makes one feel very small as a human.
The crazy thing is:
The God who made all this (all matter visible and invisible), the loving Creator of The Heavens and The Earth, the one who is even bigger than 60 orders of magnitude, chose to reduce Himself &lt;em>drastically&lt;/em>.&lt;/p>
&lt;p>Imagine this:
He created a universe full of wonderful stuff on which most humans will never even lay eyes on (and still they have a right to exist because He rejoices in them!), formed an inhabitable planet with healthy conditions for living, brought all kinds of nature and animals into existence — and then He started making humans &lt;strong>in His own likeness&lt;/strong>.
Hybrid beings, half dust, half Holy Breath, with their own will and therefore a capability to desire and &lt;strong>love Him back&lt;/strong>.&lt;/p>
&lt;p>But He did not stop there:
Because He wanted to subvert all evil in this world with good, He wanted to show us His character and His way of living in the most direct way possible.
So He — became one of us.
The Uncreated and Eternal One laid aside all His privileges and folded up Himself, down to a miniscule body of atoms and molecules to live and breathe on this very planet.&lt;/p>
&lt;p>And not only that:
Although nobobdy even recognized Him (at least in public), He decided to let the verdict for all our betrayal against Him and one another fall upon Himself ✝️.
And in Him the eternal life that He joyfully lives together with His Father, became available to us — to everyone who puts their complete trust in the Son.&lt;/p>
&lt;hr>
&lt;p>So that is what you look at when you contemplate the universe:
The Perfect Father in all His overflowing beauty and richness and complexity — and at the same time His Son, Jesus, the One who made this loving God visible and touchable for us small humans ❤️.&lt;/p></description></item><item><title>Kubernetes is still willing to show you Dangling Resources in your Terminating Namespace</title><link>https://jscheytt.github.io/p/kubernetes-is-still-willing-to-show-you-dangling-resources-in-your-terminating-namespace/</link><pubDate>Fri, 29 Oct 2021 12:11:47 +0200</pubDate><guid>https://jscheytt.github.io/p/kubernetes-is-still-willing-to-show-you-dangling-resources-in-your-terminating-namespace/</guid><description>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">kubectl api-resources --verbs&lt;span class="o">=&lt;/span>list --namespaced -o name &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> &lt;span class="p">|&lt;/span> xargs -n &lt;span class="m">1&lt;/span> kubectl get --show-kind --ignore-not-found -n &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$NAMESPACE&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Props to &lt;a class="link" href="https://cloud.redhat.com/blog/the-hidden-dangers-of-terminating-namespaces" target="_blank" rel="noopener"
>RedHat&lt;/a>.&lt;/p></description></item><item><title>Guessing UUIDs would actually take very long</title><link>https://jscheytt.github.io/p/guessing-uuids-would-actually-take-very-long/</link><pubDate>Wed, 06 Oct 2021 08:32:23 +0200</pubDate><guid>https://jscheytt.github.io/p/guessing-uuids-would-actually-take-very-long/</guid><description>&lt;p>UUIDs are 128-bit numbers.
That means they have $2^{128}$ possible values which is roughly $3 \cdot 10^{38}$ (or in scientific notation, 3e38).&lt;/p>
&lt;p>Does this range make it safe for cryptographic purposes?
Most people on the internet say an emphatic &amp;ldquo;No!&amp;rdquo;, so I am just keeping this here as a 🚨 disclaimer.&lt;/p>
&lt;p>But is it at least &lt;strong>collision-safe&lt;/strong>?
I think definitely yes.
And is it also &lt;strong>guess-safe&lt;/strong>?
Let&amp;rsquo;s explore that question with a bit of maths:&lt;/p>
&lt;h2 id="example-scenario">Example Scenario
&lt;/h2>&lt;p>Let&amp;rsquo;s say you have an API and you know the records are referenced by their UUID.
And let&amp;rsquo;s say you wanted to guess any valid record (because &lt;a class="link" href="https://stackoverflow.com/questions/3652944/how-securely-unguessable-are-guids" target="_blank" rel="noopener"
>💰 money&lt;/a>).&lt;/p>
&lt;p>What is a realistic scenario, i.e. a reasonably expectable time it would take you to find a valid record?
Let&amp;rsquo;s just naively assume you find a valid UUID after randomly iterating over half of all possible UUIDs.&lt;/p>
&lt;h2 id="how-long-would-that-take-you">How long would that take you?
&lt;/h2>&lt;p>Imagine you had started firing requests at your hypothetical API &lt;strong>at the beginning of the observable universe&lt;/strong>, i.e. about 1.3772e10 years (or 4.3437e17 seconds) ago.
And you send requests at a rate of &lt;strong>1 trillion (1e12) requests per second&lt;/strong> (and, of course, your target API responds at the same rate 😉).
(You would have to be &lt;em>very&lt;/em> physically close to the API server - at a trillionth of a second, light and therefore information travels only a measly 0.3 millimeters &amp;hellip;)&lt;/p>
&lt;p>How many UUIDs would you have covered?
You would have processed barely &lt;strong>1 billionth of all possible UUIDs&lt;/strong> (to be precise: 1e12 * 4,3437e17 / 2^128 ≈ 1.2765e-9).
That is not even remotely close to half of all UUIDs.
To cover half of all possible UUIDs you would have to continue for another &amp;hellip; how many years?&lt;/p>
&lt;p>$$
\frac{(1.2765 \cdot 10^{9} - 1) \cdot 4.3437 \cdot 10^{17} \ seconds}{2} = 2.7725 \cdot 10^{26} \ seconds = 8.786 \cdot 10^{18} \ years
$$&lt;/p>
&lt;p>And these roughly 10 quintillion years are roughly &lt;strong>1 billion times the age of the universe&lt;/strong>.
So you would very probably never live to see the matching of the UUID.&lt;/p>
&lt;p>But, just hypothetically assuming you have started your client&amp;rsquo;s requests at the dawn of time and can continue to run it on this Earth unattended for as long as this planet exists:
Would you still &lt;strong>physically have enough time&lt;/strong> to execute your requests (for half of all UUIDs)?&lt;/p>
&lt;p>We are going into &lt;a class="link" href="https://en.wikipedia.org/wiki/Timeline_of_the_far_future" target="_blank" rel="noopener"
>lots of speculation&lt;/a> now, but:&lt;/p>
&lt;ul>
&lt;li>In latest 2e9 years, all life will have vanished from Earth, the oceans have evaporated, the surface temperature will reach around 150 ° C.
&lt;ul>
&lt;li>You better build your client and API servers very temperature robust 🏜 &amp;hellip;&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>In 1e14 years, all stars will have exhausted their fuel.&lt;/li>
&lt;li>Assuming the Earth has not been completely engulfed by the Sun during its red giant phase,
&lt;ul>
&lt;li>and assuming the Earth was not already ejected from its orbit into outer space (not another galaxy),&lt;/li>
&lt;li>then the Earth would surely collide with the then black dwarf Sun in 10e20 years.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>So yes, with a bit of preparation (temperature hardening, robust solar panels, radiation shielding) your client server would probably finish &lt;em>just in time&lt;/em> before the Earth itself becomes mere history 😉.&lt;/p></description></item><item><title>Transitioning from Android to iOS — The Good, the Bad, and the Ugly</title><link>https://jscheytt.github.io/p/transitioning-from-android-to-ios-the-good-the-bad-and-the-ugly/</link><pubDate>Sat, 25 Sep 2021 17:13:18 +0200</pubDate><guid>https://jscheytt.github.io/p/transitioning-from-android-to-ios-the-good-the-bad-and-the-ugly/</guid><description>&lt;p>This year I have switched from an Android smartphone (Samsung Galaxy J3 (2016)) to an iPhone (SE 2020).&lt;/p>
&lt;p>When switching, these things stood out to me:&lt;/p>
&lt;ul>
&lt;li>There is &lt;strong>no really usable calendar app&lt;/strong>.
&lt;ul>
&lt;li>I was using &lt;a class="link" href="https://play.google.com/store/apps/details?id=netgenius.bizcal" target="_blank" rel="noopener"
>Business Calendar&lt;/a> before and I still miss the month widget.&lt;/li>
&lt;li>I have settled with &lt;a class="link" href="https://apps.apple.com/de/app/google-kalender-terminplaner/id909319292" target="_blank" rel="noopener"
>Google Calendar&lt;/a> for now.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>The &lt;strong>swipe gestures&lt;/strong> from all possible sides of the screen instead of the 1-dimensional top drawer menu are really interesting, and I have grown very fond of them.&lt;/li>
&lt;li>The &lt;strong>emergency contact&lt;/strong> feature is well thought out.&lt;/li>
&lt;li>&lt;strong>Migrating WhatsApp chats&lt;/strong> is only possible via paid 3rd party apps.
&lt;ul>
&lt;li>I paid 30 USD for &lt;a class="link" href="https://drfone.wondershare.com/buy/drfone-mac-restore-social-app.html" target="_blank" rel="noopener"
>Dr. Fone&lt;/a>, connecting both devices to a Desktop/Laptop computer, and it worked flawlessly (missing only the read/unread markers).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>The &lt;strong>mobile internet usage&lt;/strong> from the stock system is higher than on Android and I have no way reducing it. It used up 17 out of my precious 100 MB monthly quota for system &amp;ldquo;software updates&amp;rdquo; although I deactivated that on the App Store.&lt;/li>
&lt;li>&lt;strong>Privacy&lt;/strong> is probably a lot better than on Android. See &lt;a class="link" href="https://arstechnica.com/gadgets/2021/03/android-sends-20x-more-data-to-google-than-ios-sends-to-apple-study-says/" target="_blank" rel="noopener"
>this article&lt;/a>. Makes sense as Apple is a hardware company and Google is a data company.&lt;/li>
&lt;li>I have a &lt;strong>lot more space&lt;/strong> on my phone now and I don&amp;rsquo;t have to worry about deleting apps for space.&lt;/li>
&lt;li>Many of the &lt;strong>default apps&lt;/strong> and settings work really well for me - just I expected also from the MacOS experience.
&lt;ul>
&lt;li>But I deactivated all Office-ish apps&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>I am &lt;strong>extremely disappointed&lt;/strong> and shocked that there is no solution (not even a paid one) to &lt;strong>activate Do Not Disturb (DND) during calendar events&lt;/strong>.
&lt;ul>
&lt;li>I used a small Android app called &lt;a class="link" href="https://play.google.com/store/apps/details?id=me.camsteffen.polite" target="_blank" rel="noopener"
>Polite&lt;/a> before and there is no equivalent for it, not even by a long shot!&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Automatic dark/light mode depending on daytime is very nice.&lt;/li>
&lt;/ul>
&lt;p>And some iPhone SE-specific things I appreciate:&lt;/p>
&lt;ul>
&lt;li>Fingerprint/TouchID was a very good choice. It&amp;rsquo;s kind of sad though that you can add only up to 3 fingerprints (just like on MacOS).&lt;/li>
&lt;li>The size is a great relief as it&amp;rsquo;s smaller than most gigantic smartphones from basically all brands nowadays.&lt;/li>
&lt;li>The camera is really good even though it&amp;rsquo;s just one lens.&lt;/li>
&lt;/ul></description></item><item><title>The Story of My First Makefile — Half-Versioned Secrets Management</title><link>https://jscheytt.github.io/p/the-story-of-my-first-makefile-half-versioned-secrets-management/</link><pubDate>Mon, 06 Sep 2021 13:38:15 +0200</pubDate><guid>https://jscheytt.github.io/p/the-story-of-my-first-makefile-half-versioned-secrets-management/</guid><description>&lt;p>As a DevOps Engineer one key skill is &lt;strong>automating repetitive tasks&lt;/strong>.
What most people grab for intuitively is writing Shell scripts (be it Bash, zsh, fish or whichever flavor you prefer).
And there are a lot many good reasons to do so:&lt;/p>
&lt;ol>
&lt;li>It is closest to typing commands directly in the terminal.&lt;/li>
&lt;li>You don&amp;rsquo;t have to learn a dedicated programming language.&lt;/li>
&lt;li>It is very portable to other platforms like e.g. a CI server.&lt;/li>
&lt;/ol>
&lt;p>But once you start managing an increasing number of tasks with your scripts, you start to face another problem:
How do you &lt;em>manage your scripts&lt;/em>?&lt;/p>
&lt;p>Personally, I have always loved being able to enter some new place where &lt;strong>conventions&lt;/strong> were already in place.
It takes away so much work and mental effort at the beginning, and you can just get to work quickly.
(That might explain why I fell in love with ❤️ &lt;a class="link" href="https://rubyonrails.org/doctrine/#convention-over-configuration" target="_blank" rel="noopener"
>Ruby on Rails&lt;/a> before I dug into 💎 Ruby.)&lt;/p>
&lt;p>Shell scripts by their very nature do not pose any restrictions regarding e.g. naming patterns or directory structures.
Honestly, I think there never will be, and that is ok.
But what I have come to appreciate a lot recently is &lt;strong>&lt;a class="link" href="https://www.gnu.org/software/make/" target="_blank" rel="noopener"
>Make&lt;/a>&lt;/strong> as a &lt;strong>companion&lt;/strong> for my Shell scripts.&lt;/p>
&lt;h2 id="-make-vs--shell-in-a--nutshell">🏗 Make vs. 🐚 Shell in a 🥜 Nutshell
&lt;/h2>&lt;ul>
&lt;li>Purpose: Make is good at &lt;strong>creating files&lt;/strong>, Shell is good at &lt;strong>executing scripts&lt;/strong>.&lt;/li>
&lt;li>Portability: If your system has Bash, chances are pretty high that Make is also available.&lt;/li>
&lt;li>Developer API: Make has a &lt;strong>clear entrypoint&lt;/strong> (namely &lt;code>make&lt;/code>), Shell can be everything you want it to be.&lt;/li>
&lt;/ul>
&lt;p>Make is a tool that has its origin in the world of compiled languages, especially C.
Compiling source code into binary artifacts (and doing so 🏎 &lt;em>economically&lt;/em>) is what Make was originally designed for.
I mean, the name of a tool should make its use clear, but let me just state this again for my future self:
Make is meant to 🏗 make (create) files.&lt;/p>
&lt;p>&lt;strong>It&amp;rsquo;s all about target files.&lt;/strong>
That&amp;rsquo;s why it makes sense to approach a Makefile with a mindset of &amp;ldquo;What do I want to create/build?&amp;rdquo; instead of &amp;ldquo;What do I want to perform?&amp;rdquo;
To me this sounds very reminiscent of the distinction between &lt;em>declarative and imperative&lt;/em> programming.&lt;/p>
&lt;h2 id="safely-versioned-secrets-management">Safely Versioned Secrets Management
&lt;/h2>&lt;p>My concrete entrypoint into Make was the following use case I had lately, and it hopefully helps to illustrate the point of target files:&lt;/p>
&lt;ul>
&lt;li>☸️ You have 2 AWS accounts with 1 &lt;strong>Kubernetes&lt;/strong> cluster each.
(One is for running a dev and a staging environment, the other one is running the production environment.)&lt;/li>
&lt;li>🔑 Secrets are stored in AWS &lt;strong>Secrets Manager&lt;/strong> and synced into the cluster via &lt;a class="link" href="https://github.com/external-secrets/kubernetes-external-secrets" target="_blank" rel="noopener"
>ExternalSecrets&lt;/a>.&lt;/li>
&lt;li>⛔️ You are &lt;strong>not allowed&lt;/strong> to store secrets in Git, not even in encrypted form.&lt;/li>
&lt;li>🪣 The secrets are JSON files and the &lt;strong>key names&lt;/strong> are important, so you want to store them in Git.&lt;/li>
&lt;/ul>
&lt;p>What I did as a first step was to create sample secrets files that contained the keys but no valid data (kind of the &lt;em>schema&lt;/em> of the secrets):&lt;/p>
&lt;pre tabindex="0">&lt;code>secrets
├── dev # One directory per target environment
│   └── .keep
├── staging
│   └── .keep
├── prod
│   └── .keep
├── config1.sample.json # One sample file per secret
├── service2.sample.json
└── service3.sample.json
&lt;/code>&lt;/pre>&lt;p>I put the keys I needed into the sample files and as a value a description of what to put in (or e.g. from which Password Service to fetch the value from).
The file &lt;code>service2.sample.json&lt;/code> would e.g. look like this.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;EXTERNAL_API_KEY&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;API Key of EXTERNAL_SERVICE&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;CLOUD_SERVICE_CLIENT_SECRET&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;client secret for accessing CLOUD_SERVICE&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;CLOUD_SERVICE_PASSWORD&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;password for accessing CLOUD_SERVICE&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;BASIC_AUTH_PASSWORD&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;password for sending via Basic Auth&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The target structure I wanted to achieve was this:&lt;/p>
&lt;pre tabindex="0">&lt;code>secrets
├── dev
│   ├── config1.json # This file contains the *keys* of
│ │ # secrets/config1.sample.json
│ │ # and the actual secret *values*!
│   ├── service2.json
│   ├── service3.json
│   └── .keep
├── staging
│   ├── config1.json # Contains key of sample file and
│ │ # values for staging environment.
│   ├── service2.json
│   ├── service3.json
│   └── .keep
├── prod
│   ├── config1.json
│   ├── service2.json
│   ├── service3.json
│   └── .keep
├── config1.sample.json
├── service2.sample.json
└── service3.sample.json
&lt;/code>&lt;/pre>&lt;p>In order to not commit any actual secrets into version control, I added the following entries to my &lt;strong>.gitignore&lt;/strong>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Ignore secret data ...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">secrets/**/*.json
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># ... but keep the samples&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">!secrets/*.sample.json
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="copying-the-samples">Copying the Samples
&lt;/h3>&lt;p>Now how do you copy the files to all environment&amp;rsquo;s directories?
And how do you make sure you copy them &lt;em>exactly once&lt;/em> (so you don&amp;rsquo;t lose the secrets you already entered)?&lt;/p>
&lt;p>You could create a script with the following logic:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># For each environment directory:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## For each sample file:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">### Extract the service name&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">### Check if target secret file already exists&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">### If not, copy sample to target file&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>But now, 🏗 Make to the rescue:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-make" data-lang="make">&lt;span class="line">&lt;span class="cl">&lt;span class="c">### Variables
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># Fetch all sample files.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">&lt;/span>&lt;span class="nv">secrets_samples&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="k">$(&lt;/span>wildcard secrets/*.sample.json&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># Construct the paths for all dev secrets destinations.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">&lt;/span>&lt;span class="nv">dev_secrets&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="k">$(&lt;/span>patsubst secrets/%.sample.json,secrets/dev/%.json,&lt;span class="k">$(&lt;/span>secrets_samples&lt;span class="k">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># Construct the paths for all staging secrets destinations.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">&lt;/span>&lt;span class="nv">staging_secrets&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="k">$(&lt;/span>patsubst secrets/dev/%,secrets/staging/%,&lt;span class="k">$(&lt;/span>dev_secrets&lt;span class="k">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># Construct the paths for all staging secrets destinations.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">&lt;/span>&lt;span class="nv">prod_secrets&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="k">$(&lt;/span>patsubst secrets/dev/%,secrets/prod/%,&lt;span class="k">$(&lt;/span>dev_secrets&lt;span class="k">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># Gather the paths of all secrets&amp;#39; destinations.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">&lt;/span>&lt;span class="nv">all_secrets&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="k">$(&lt;/span>dev_secrets&lt;span class="k">)&lt;/span> &lt;span class="k">$(&lt;/span>staging_secrets&lt;span class="k">)&lt;/span> &lt;span class="k">$(&lt;/span>prod_secrets&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">### Rules
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 🎯 Purpose: &amp;#34;Copy all samples to their destinations.&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 🤓 What Make sees: &amp;#34;When you build the file secrets.copy-templates,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># make sure that all files in $(all_secrets) have been built first.&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 👩‍🏫 Explanation: A rule can be empty, and a rule can have prerequisites
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># on the first line. I like to think of such a rule as a kind of shortcut.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">&lt;/span>&lt;span class="nf">secrets.copy-templates&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="k">$(&lt;/span>&lt;span class="nv">all_secrets&lt;/span>&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 🎯 Purpose: &amp;#34;Ensure that Make still runs the job &amp;#39;secrets.copy-templates&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># even if a file called &amp;#39;secrets.copy-templates&amp;#39; is created.&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 🤓 What Make sees: &amp;#34;I am supposed to always build secrets.copy-templates
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># even if that file already exists.&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">&lt;/span>&lt;span class="nf">.PHONY&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">secrets&lt;/span>.&lt;span class="n">copy&lt;/span>-&lt;span class="n">templates&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 🎯 Purpose: &amp;#34;Copy the file on the right to the file on the left.&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 🤓 What Make sees: &amp;#34;When a file matching the pattern secrets/dev/(.*).json
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># is built, execute this rule.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># Also first make sure that the corresponding file secrets/$1.sample.json
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># has been built before.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># And the rule is: Copy the source file on the right ($&amp;lt;) to the destination
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># file on the left ($@).&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 👩‍🏫 Explanation: These 3 rules are applied when you call secrets.copy-templates
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># because it requires $(all_secrets) to be built.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">&lt;/span>&lt;span class="nf">secrets/dev/%.json&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">secrets&lt;/span>/%.&lt;span class="n">sample&lt;/span>.&lt;span class="n">json&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> cp $&amp;lt; &lt;span class="nv">$@&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nf">secrets/staging/%.json&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">secrets&lt;/span>/%.&lt;span class="n">sample&lt;/span>.&lt;span class="n">json&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> cp $&amp;lt; &lt;span class="nv">$@&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nf">secrets/prod/%.json&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">secrets&lt;/span>/%.&lt;span class="n">sample&lt;/span>.&lt;span class="n">json&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> cp $&amp;lt; &lt;span class="nv">$@&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you now execute &lt;code>make secrets.copy-templates&lt;/code>, the sample files will be copied to all environment directories.
And if you run that same command again, 🙊 &lt;strong>Make will not copy anything&lt;/strong> because it intelligenty detected that the source files have not changed since the last execution.&lt;/p>
&lt;p>The code above is certainly not optimal - I bet you could abstract away the environment names with bit of metaprogramming, but let&amp;rsquo;s not optimize prematurely.
I think the result is already impressive, especially if you consider the following:&lt;/p>
&lt;ul>
&lt;li>☝️ You don&amp;rsquo;t even have to call the job explicitly to run it.
As long as &lt;code>secrets.copy-templates&lt;/code> is the first build defined in the Makefile, you can even execute just &lt;code>make&lt;/code> &lt;em>without any parameters&lt;/em>.&lt;/li>
&lt;li>👨‍💻 Onboarding a new colleague to your repository now sounds a lot more like:
&amp;ldquo;Yes, do read the README, but above all execute &lt;code>make&lt;/code>.&amp;rdquo;
&lt;ul>
&lt;li>⛑ This is especially true if your Makefile contains &lt;strong>&lt;a class="link" href="https://marmelab.com/blog/2016/02/29/auto-documented-makefile.html" target="_blank" rel="noopener"
>good help texts&lt;/a>&lt;/strong> for every rule.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="how-not-to-shoot-yourself-in-the-foot">How Not To Shoot Yourself in the Foot
&lt;/h4>&lt;p>Make was made primarily for building binaries from source code.
The fact that we are able to use it in the way described above comes with a warning:
If you do the following, you will lose the secret data you already entered into the secret files:&lt;/p>
&lt;ol>
&lt;li>Execute &lt;code>make secrets.copy-templates&lt;/code>.&lt;/li>
&lt;li>Edit a &lt;strong>sample file&lt;/strong>.&lt;/li>
&lt;li>Execute &lt;code>make secrets.copy-templates&lt;/code>.&lt;/li>
&lt;li>💥 Make will &lt;strong>copy and overwrite&lt;/strong> the edited sample file to all environment secret files.&lt;/li>
&lt;/ol>
&lt;p>Why?
Make compares timestamps, and when the source has a newer last-modified timestamp than the destination it will execute the rule&lt;/p>
&lt;p>Can we circumvent this?
We sure can.
You can either make sure that you edit each environment file after editing the sample file.
Or you change the last-modified timestamp &lt;strong>via a build&lt;/strong> in the Makefile 😉:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-make" data-lang="make">&lt;span class="line">&lt;span class="cl">&lt;span class="nf">secrets.ensure-copy-once&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> f in &lt;span class="k">$(&lt;/span>all_secrets&lt;span class="k">)&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">[&lt;/span> -f &lt;span class="nv">$$&lt;/span>f &lt;span class="o">]&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> touch &lt;span class="nv">$$&lt;/span>f&lt;span class="p">;&lt;/span> &lt;span class="k">done&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now whenever you edit a sample file &lt;em>after the initial secrets.copy-templates&lt;/em> you run this build via &lt;code>make secrets.ensure-copy-once&lt;/code> and 🛡 your secrets will not be deleted.&lt;/p>
&lt;h3 id="extension-environment-specific-sample-files">Extension: Environment-specific Sample Files
&lt;/h3>&lt;p>One implicit assumption in my structure was that the secrets in service2 will always have the same schema &lt;strong>in every environment&lt;/strong>.
One day it so happened that service2 needed to have additional keys on prod, but they &lt;strong>should not be present&lt;/strong> on dev or staging.&lt;/p>
&lt;p>I adjusted my desired structure like this:&lt;/p>
&lt;pre tabindex="0">&lt;code>secrets
├── dev
│   ├── config1.json
│   ├── service2.json # Contains keys from service2.sample.json
│   ├── service3.json
│   └── .keep
├── staging
│   ├── config1.json
│   ├── service2.json # Contains keys from service2.sample.json
│   ├── service3.json
│   └── .keep
├── prod
│   ├── config1.json
│   ├── service2.json # Contains keys from service2.sample.prod.json
│   ├── service3.json
│   └── .keep
├── config1.sample.json
├── service2.sample.json # Default sample file
├── service2.sample.prod.json # Prod-specific sample file
└── service3.sample.json
&lt;/code>&lt;/pre>&lt;p>And I wrote my first &lt;strong>Makefile function&lt;/strong>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-make" data-lang="make">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># A Make function can take in an arbitrary number of numbered parameters.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">&lt;/span>&lt;span class="err">define&lt;/span> &lt;span class="err">copy_template&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">cp&lt;/span> &lt;span class="k">$(&lt;/span>1&lt;span class="k">)&lt;/span> &lt;span class="k">$(&lt;/span>2&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">@&lt;/span>&lt;span class="c"># Check if there is a more environment-specific sample file
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">&lt;/span> &lt;span class="k">$(&lt;/span>&lt;span class="nb">eval&lt;/span> ENVIRONMENT :&lt;span class="o">=&lt;/span> &lt;span class="k">$(&lt;/span>shell &lt;span class="nb">echo&lt;/span> &lt;span class="k">$(&lt;/span>2&lt;span class="k">)&lt;/span> &lt;span class="p">|&lt;/span> sed -E &lt;span class="s1">&amp;#39;s#secrets/(.*)/.*#\1#&amp;#39;&lt;/span>&lt;span class="k">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">$(&lt;/span>&lt;span class="nb">eval&lt;/span> ENVIRONMENT_SAMPLE_FILE :&lt;span class="o">=&lt;/span> &lt;span class="k">$(&lt;/span>patsubst %.sample.json,%.sample.&lt;span class="k">$(&lt;/span>ENVIRONMENT&lt;span class="k">)&lt;/span>.json,&lt;span class="k">$(&lt;/span>1&lt;span class="k">)))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> @# If environment-specific file exists, copy it to destination
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> -f &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="k">$(&lt;/span>ENVIRONMENT_SAMPLE_FILE&lt;span class="k">)&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span> cp &lt;span class="k">$(&lt;/span>ENVIRONMENT_SAMPLE_FILE&lt;span class="k">)&lt;/span> &lt;span class="k">$(&lt;/span>2&lt;span class="k">)&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">endef&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># Calling a Make function works by executing &amp;#39;call&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># with the function name and all its parameters as a list.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># My previous rules now became this:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">&lt;/span>&lt;span class="nf">secrets/dev/%.json&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">secrets&lt;/span>/%.&lt;span class="n">sample&lt;/span>.&lt;span class="n">json&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">$(&lt;/span>call copy_template,$&amp;lt;,&lt;span class="nv">$@&lt;/span>&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nf">secrets/staging/%.json&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">secrets&lt;/span>/%.&lt;span class="n">sample&lt;/span>.&lt;span class="n">json&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">$(&lt;/span>call copy_template,$&amp;lt;,&lt;span class="nv">$@&lt;/span>&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nf">secrets/prod/%.json&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">secrets&lt;/span>/%.&lt;span class="n">sample&lt;/span>.&lt;span class="n">json&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">$(&lt;/span>call copy_template,$&amp;lt;,&lt;span class="nv">$@&lt;/span>&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="-perfect-symphony-calling-scripts-from-make">🍣 Perfect Symphony: Calling Scripts From Make
&lt;/h3>&lt;p>It&amp;rsquo;s all good and nice to have your secrets created, but how do you deploy them to AWS Secrets Manager?
Of course you write a thin wrapper around the wonderfully verbose AWS CLI:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#!/usr/bin/env bash
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="nb">set&lt;/span> -euo pipefail
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># set -x # DEBUG&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">secret_name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$1&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Use second argument or read stdin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">secret_value&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">2&lt;/span>&lt;span class="k">:-$(&lt;/span>cat -&lt;span class="k">)&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$secret_value&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="c1"># DEBUG&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Create secret in idempotent way, avoid script from failing&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">set&lt;/span> +e
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">aws secretsmanager create-secret --name &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$secret_name&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="p">&amp;amp;&lt;/span>&amp;gt; /dev/null
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">set&lt;/span> -e
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Put secret value and output response to stdout&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">aws secretsmanager put-secret-value --secret-id &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$secret_name&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --secret-string &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$secret_value&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> cat
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>In your terminal you would call it e.g. like this:&lt;br>
&lt;code>./helpers/deploy-secret.sh envs/dev/config1-secrets &amp;lt; secrets/dev/config1.json&lt;/code>&lt;/p>
&lt;p>Let&amp;rsquo;s make a generic rule in Make to execute this script:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-make" data-lang="make">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># The dependency on $(all_secrets) is to make sure that the secrets files exist
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># before deploying them.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">&lt;/span>&lt;span class="nf">secret.deploy&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="k">$(&lt;/span>&lt;span class="nv">all_secrets&lt;/span>&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ./helpers/deploy-secret.sh &lt;span class="k">$(&lt;/span>name&lt;span class="k">)&lt;/span> &amp;lt; secrets/&lt;span class="k">$(&lt;/span>environment&lt;span class="k">)&lt;/span>/&lt;span class="k">$(&lt;/span>filename&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The call to the script that you executed above would become this:&lt;br>
&lt;code>make secret.deploy name=envs/dev/config1-secrets environment=dev filename=config1&lt;/code>&lt;/p>
&lt;p>As we have multiple services, let&amp;rsquo;s add one rule per service:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-make" data-lang="make">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># The secret values in this one are the same across all environments
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">&lt;/span>&lt;span class="nf">secret.deploy.config1&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">$(&lt;/span>MAKE&lt;span class="k">)&lt;/span> secret.deploy &lt;span class="nv">name&lt;/span>&lt;span class="o">=&lt;/span>envs/config1-secrets &lt;span class="nv">filename&lt;/span>&lt;span class="o">=&lt;/span>config1.json
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># service2 has different secret values on the different environments
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">&lt;/span>&lt;span class="nf">secret.deploy.service2&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">$(&lt;/span>MAKE&lt;span class="k">)&lt;/span> secret.deploy &lt;span class="nv">name&lt;/span>&lt;span class="o">=&lt;/span>envs/&lt;span class="k">$(&lt;/span>environment&lt;span class="k">)&lt;/span>/service2-secrets &lt;span class="nv">filename&lt;/span>&lt;span class="o">=&lt;/span>service2.json
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># service 3 also has environment-specific secret values
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">&lt;/span>&lt;span class="nf">secret.deploy.service3&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">$(&lt;/span>MAKE&lt;span class="k">)&lt;/span> secret.deploy &lt;span class="nv">name&lt;/span>&lt;span class="o">=&lt;/span>envs/&lt;span class="k">$(&lt;/span>environment&lt;span class="k">)&lt;/span>/service3-secrets &lt;span class="nv">filename&lt;/span>&lt;span class="o">=&lt;/span>service3.json
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now we can tie these together into one rule for a whole environment:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-make" data-lang="make">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># Deploy all secrets for one environment
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">&lt;/span>&lt;span class="nf">secrets.deploy.all&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">$(&lt;/span>MAKE&lt;span class="k">)&lt;/span> secret.deploy.config1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">$(&lt;/span>MAKE&lt;span class="k">)&lt;/span> secret.deploy.service2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">$(&lt;/span>MAKE&lt;span class="k">)&lt;/span> secret.deploy.service3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># Deploy all secrets for the dev cluster
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">&lt;/span>&lt;span class="nf">secrets.deploy.dev&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">$(&lt;/span>MAKE&lt;span class="k">)&lt;/span> secrets.deploy.all &lt;span class="nv">environment&lt;/span>&lt;span class="o">=&lt;/span>dev
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">$(&lt;/span>MAKE&lt;span class="k">)&lt;/span> secrets.deploy.all &lt;span class="nv">environment&lt;/span>&lt;span class="o">=&lt;/span>staging
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># Deploy all secrets for the prod cluster
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">&lt;/span>&lt;span class="nf">secrets.deploy.prod&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">$(&lt;/span>MAKE&lt;span class="k">)&lt;/span> secrets.deploy.all &lt;span class="nv">environment&lt;/span>&lt;span class="o">=&lt;/span>prod
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>✅ Once you are authenticated to the corresponding AWS account, you can deploy your secrets with either &lt;code>make secrets.deploy.dev&lt;/code> or &lt;code>make secrets.deploy.prod&lt;/code>.&lt;/p>
&lt;h2 id="summarizing">Summarizing
&lt;/h2>&lt;ul>
&lt;li>Make gives you a consistent and clean Developer API.&lt;/li>
&lt;li>Make is almost universally installed everywhere.&lt;/li>
&lt;li>Don&amp;rsquo;t decide between either Make &lt;strong>or&lt;/strong> Shell - use both together.
Refactor more complex logic into separate Shell scripts (like isolated functions) which are called from within Make.&lt;/li>
&lt;/ul>
&lt;p>You can check out the entire Makefile (including the secrets structure and scripts) in this &lt;a class="link" href="https://github.com/jscheytt/jscheytt.github.io.hugo/tree/main/content/post/story-first-makefile" target="_blank" rel="noopener"
>Git repo&lt;/a>.&lt;/p>
&lt;h2 id="credits">Credits
&lt;/h2>&lt;p>I am indebted to the following parties in making my start into the world of Make a lot smoother than I expected:&lt;/p>
&lt;ul>
&lt;li>Isaac Z. Schlueter for his &lt;a class="link" href="https://gist.github.com/isaacs/62a2d1825d04437c6f08" target="_blank" rel="noopener"
>interactive Gist&lt;/a>&lt;/li>
&lt;li>The guys at &lt;a class="link" href="https://www.upbound.io/" target="_blank" rel="noopener"
>Upbound&lt;/a> for creating &lt;a class="link" href="https://crossplane.io/" target="_blank" rel="noopener"
>Crossplane&lt;/a> where they use Make in &lt;a class="link" href="https://github.com/crossplane/provider-aws" target="_blank" rel="noopener"
>their providers&lt;/a> and even distribute &lt;a class="link" href="https://github.com/upbound/build" target="_blank" rel="noopener"
>common functionality&lt;/a> as a Git submodule&lt;/li>
&lt;/ul></description></item><item><title>HTML limits you to a signed 32-bit int in ordered lists</title><link>https://jscheytt.github.io/p/html-limits-you-to-a-signed-32-bit-int-in-ordered-lists/</link><pubDate>Thu, 02 Sep 2021 08:55:22 +0200</pubDate><guid>https://jscheytt.github.io/p/html-limits-you-to-a-signed-32-bit-int-in-ordered-lists/</guid><description>&lt;p>HTML allows you to specify a starting number from which an ordered list (&lt;code>&amp;lt;ol&amp;gt;&lt;/code>) should start.
I thought &amp;ldquo;Is there an upper bound?&amp;rdquo;.&lt;/p>
&lt;p>Turns out: Yes, there is.
It&amp;rsquo;s 2147483647 (i.e. &lt;span>2&lt;sup>31&lt;/sup>-1&lt;/span>
).
Looks like a signed 32-bit integer to me.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">ol&lt;/span> &lt;span class="na">start&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">2147483645&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>I am still in order&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>As am I&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Me too&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>💥 Limit reached&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>💥 Limit reached&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>💥 Limit reached&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">ol&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The above snippet will render as the following:&lt;/p>
&lt;span>
&lt;ol start=2147483645 style="margin-left: 10rem;">
&lt;li>I am still in order&lt;/li>
&lt;li>As am I&lt;/li>
&lt;li>Me too&lt;/li>
&lt;li>💥 Limit reached&lt;/li>
&lt;li>💥 Limit reached&lt;/li>
&lt;li>💥 Limit reached&lt;/li>
&lt;/ol>
&lt;/span></description></item><item><title>You can create TOTP tokens via CLI without a smartphone</title><link>https://jscheytt.github.io/p/you-can-create-totp-tokens-via-cli-without-a-smartphone/</link><pubDate>Fri, 27 Aug 2021 08:20:41 +0200</pubDate><guid>https://jscheytt.github.io/p/you-can-create-totp-tokens-via-cli-without-a-smartphone/</guid><description>&lt;p>All you need is the secret of your TOTP.&lt;/p>
&lt;p>The QR code is just a representation of a &lt;code>oath://&lt;/code> URL
That URL contains the secret as a query parameter.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Install oathtool&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">brew install oathtool
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Use your secret, e.g. as a base32-encoded string&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">oathtool --totp --base32 &lt;span class="s2">&amp;#34;MFRGCZDTMVRXEZLUBI======&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>About</title><link>https://jscheytt.github.io/about/</link><pubDate>Wed, 28 Jul 2021 08:32:37 +0200</pubDate><guid>https://jscheytt.github.io/about/</guid><description>&lt;p>Hey there,&lt;/p>
&lt;p>My name is Josia Scheytt ([&lt;a class="link" href="https://namedrop.io/josiascheytt" target="_blank" rel="noopener"
>josˈiːa ʃaɪ̯t&lt;/a>]).
I live in the South of Germany near Stuttgart.&lt;/p>
&lt;p>Technically, I am interested in all things DevOps and Cloud Automation.
My life as a whole is about following The One and Only, Jesus.&lt;/p>
&lt;p>This blog serves mostly as a small utility to keep track of things I have learned, but also as a way of sharing knowledge.
For me this is a vital part of living DevOps.&lt;/p>
&lt;p>You can find me on:&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://github.com/jscheytt" target="_blank" rel="noopener"
>GitHub&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://www.linkedin.com/in/josiascheytt/" target="_blank" rel="noopener"
>LinkedIn&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Docker does not really help you a lot trying to get permissions right</title><link>https://jscheytt.github.io/p/docker-does-not-really-help-you-a-lot-trying-to-get-permissions-right/</link><pubDate>Fri, 23 Jul 2021 14:42:07 +0200</pubDate><guid>https://jscheytt.github.io/p/docker-does-not-really-help-you-a-lot-trying-to-get-permissions-right/</guid><description>&lt;p>I really love Docker, and I also come to like security more and more.
One advice I have been hearing a lot (e.g. in this &lt;a class="link" href="https://snyk.io/blog/10-docker-image-security-best-practices/" target="_blank" rel="noopener"
>Container Security Cheat Sheet from Snyk&lt;/a>) is that &lt;strong>you should not run your container as a root user&lt;/strong>.&lt;/p>
&lt;p>&amp;ldquo;Easy thing,&amp;rdquo; I thought to myself, &amp;ldquo;I am just going to put something like &lt;code>USER {app}&lt;/code>&amp;rdquo; at the top of my Dockerfile.&amp;quot;
Well, think again, because:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-Dockerfile" data-lang="Dockerfile">&lt;span class="line">&lt;span class="cl">&lt;span class="k">FROM&lt;/span>&lt;span class="s"> node:lts&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">USER&lt;/span>&lt;span class="s"> node&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="c"># I would have thought that after this point, every action will happen in the name of this user&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="c"># and also that every created directory and file will belong to this user ... 😕 But:&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="c"># ⚠️ This directory is created by root:root!&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">WORKDIR&lt;/span>&lt;span class="s"> /app&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="c"># ⚠️ These files will be copied over to be owned by root:root!&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">COPY&lt;/span> package*.json ./&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="c"># 💥 This step fails in some (not all!) environments with errors like &amp;#34;Not enough permissions on /app&amp;#34;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">RUN&lt;/span> npm install &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> npm run verify&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="c"># ⚠️ If you manage to get to this point, these files, too, will be copied over to be owned by root:root!&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">COPY&lt;/span> . .&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">ENTRYPOINT&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;npm&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I ended up fixing it by creating the directory and then &lt;code>chown&lt;/code>-ing it.
Equally I executed the &lt;code>COPY&lt;/code> instructions with the &lt;code>--chown&lt;/code> flag.
In the end I refactored it a bit using some &lt;code>ENV&lt;/code>s, too:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-Dockerfile" data-lang="Dockerfile">&lt;span class="line">&lt;span class="cl">&lt;span class="k">FROM&lt;/span>&lt;span class="s"> node:lts&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="c"># Ensure that target WORKDIR exists and is owned by target (non-root) user&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">ENV&lt;/span> &lt;span class="nv">USERNAME&lt;/span>&lt;span class="o">=&lt;/span>node
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">ENV&lt;/span> &lt;span class="nv">USERID&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$USERNAME&lt;/span>:&lt;span class="nv">$USERNAME&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">ENV&lt;/span> &lt;span class="nv">TARGETDIR&lt;/span>&lt;span class="o">=&lt;/span>/app&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">RUN&lt;/span> mkdir -p &lt;span class="nv">$TARGETDIR&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> chown -R &lt;span class="nv">$USERID&lt;/span> &lt;span class="nv">$TARGETDIR&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">WORKDIR&lt;/span>&lt;span class="s"> $TARGETDIR&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">USER&lt;/span>&lt;span class="s"> $USERNAME&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">COPY&lt;/span> --chown&lt;span class="o">=&lt;/span>&lt;span class="nv">$USERID&lt;/span> package*.json ./&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">RUN&lt;/span> npm install &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> npm run verify&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">COPY&lt;/span> --chown&lt;span class="o">=&lt;/span>&lt;span class="nv">$USERID&lt;/span> . .&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">ENTRYPOINT&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;npm&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>You can :wq in vim with :x</title><link>https://jscheytt.github.io/p/you-can-wq-in-vim-with-x/</link><pubDate>Fri, 16 Jul 2021 00:00:00 +0000</pubDate><guid>https://jscheytt.github.io/p/you-can-wq-in-vim-with-x/</guid><description>&lt;p>I have developed quite some muscle memory in terminating vim via &lt;code>:wqa&lt;/code>.
Now I can save one more character by retraining myself to use &lt;code>:xa&lt;/code>! 😄&lt;/p>
&lt;p>I also like how &lt;code>:x&lt;/code> sort of symbolizes the close button ❌ of many window managers and their default behavior of saving when you close a file.&lt;/p>
&lt;p>For more documentation open vim and type &lt;code>:h :x&lt;/code>.&lt;/p>
&lt;h1 id="wait-now-that-you-mention-it-">Wait, now that you mention it &amp;hellip;
&lt;/h1>&lt;p>Well, turns out the documentation mentions an even easier way: Just press &lt;code>ZZ&lt;/code> (without the colon) 😴&lt;/p>
&lt;p>Now if only I could combine this to perform &lt;code>:wqa&lt;/code> &amp;hellip;&lt;/p>
&lt;p>Happy vim-ing! 👋&lt;/p></description></item><item><title>Archives</title><link>https://jscheytt.github.io/archives/</link><pubDate>Tue, 28 May 2019 00:00:00 +0000</pubDate><guid>https://jscheytt.github.io/archives/</guid><description/></item><item><title>Search</title><link>https://jscheytt.github.io/search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jscheytt.github.io/search/</guid><description/></item></channel></rss>